<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DannyWang&#39;s blog</title>
  
  <subtitle>我的小窝</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2023-04-06T02:14:10.514Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Danny Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试质量优化建议方案</title>
    <link href="http://yoursite.com/2020/11/10/%E6%B5%8B%E8%AF%95%E8%B4%A8%E9%87%8F%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE%E6%96%B9%E6%A1%88/"/>
    <id>http://yoursite.com/2020/11/10/测试质量优化建议方案/</id>
    <published>2020-11-10T08:35:34.000Z</published>
    <updated>2023-04-06T02:14:10.514Z</updated>
    
    <content type="html"><![CDATA[<p>测试质量优化建议方案</p><h2 id="问题现状"><a href="#问题现状" class="headerlink" title="问题现状"></a>问题现状</h2><ul><li>涉及客户端开发的需求，后端逻辑的重视程度不够，导致部分逻辑验证遗漏</li><li>纯后端需求，需求内容理解不到位，验证的深度和覆盖面不全</li><li>测试用例及验证路径以开发人员为导向，容易产生偏差及遗漏</li><li>客户端需求测试完成的标准，未完全考虑后端逻辑（即客户端功能验证完毕即为测试完成且具备发版条件）</li><li>以非技术因素导致的问题为主，主要为理解偏差及覆盖不全导致出现问题</li></ul><h2 id="期望目标"><a href="#期望目标" class="headerlink" title="期望目标"></a>期望目标</h2><ul><li>意识上重视后端逻辑的验证，虽然无需客户端发版解决问题，但线上bug仍需耗费人力进行抢修，并容易引起不必要的争论及相关联的其他问题</li><li>软件测试人员和开发人员要善于提问，作为一个需求的审视者。思路不能局限于所见的既有功能，不深入思考分析，测试过程中的风险就不能很好的规避，导致问题的出现。</li></ul><h2 id="现有工作流程"><a href="#现有工作流程" class="headerlink" title="现有工作流程"></a>现有工作流程</h2><h3 id="客户端排期需求流程："><a href="#客户端排期需求流程：" class="headerlink" title="客户端排期需求流程："></a>客户端排期需求流程：</h3><p>需求会-&gt;服务端出mock接口-&gt;细节会（UI讨论，功能说明，简单过一遍mock接口）-&gt;两端开发-&gt;提测-&gt;测试人员验证（使用mock或本地数据验证客户端功能）-&gt;测试完成，进入待发版列表-&gt;服务端接口上线-&gt;集测验证-&gt;客户端正式发版</p><h3 id="纯后端需求流程："><a href="#纯后端需求流程：" class="headerlink" title="纯后端需求流程："></a>纯后端需求流程：</h3><p>需求方提需求（冷启动、推荐、统计）-&gt;与后端开发沟通（包括相关的系统，如ucms，推荐）-&gt;后端开发-&gt;后端提测-&gt;测试同学介入，向后端开发同学了解改动内容-&gt;功能验证-&gt;后端上线</p><h2 id="建议工作流程"><a href="#建议工作流程" class="headerlink" title="建议工作流程"></a>建议工作流程</h2><p>以纯后端需求为例，给出一份建议的开发测试流程</p><table><thead><tr><th>流程编号</th><th>流程名称</th><th>工作内容</th><th>参与人</th><th>目的与收益</th></tr></thead><tbody><tr><td>1</td><td>需求调研</td><td>产品或技术同学对现有功能的实现方式进行调研或确认，或对即将实现的功能进行可行性分析及实现方案预估</td><td>需求方（产品或需求提出方技术同学）</td><td>了解开发涉及的改动范围，对接的系统等，方便综合评估与提前准备</td></tr><tr><td>2</td><td>需求明确</td><td>需求方明确最终的需求目的，需求内容，范围，实现的效果，版本兼容性处理，展示细节及详细业务逻辑，涉及参与的系统，期望上线时间等，并落实到文档wiki上</td><td>需求方</td><td>前期需求越明确，后期返工的概率越小。文档记录有利于开发及测试用例书写依据及后期功能回溯，防止细节遗漏</td></tr><tr><td>3</td><td>需求讨论会</td><td>根据需求文档，为参与人讲解需求功能，实现细节，注意事项。开发及测试同学需要当场提出疑问，或给出自己的理解，由需求方答复保证需求理解的一致性和深入性</td><td>需求方，开发同学，测试同学</td><td>让测试同学介入，了解第一手的需求，防止后续的理解偏差</td></tr><tr><td>4</td><td>开发及测试准备</td><td>开发：与涉及的第三方系统/接口沟通，联调，实现功能开发。测试：准备测试用例</td><td>开发同学，测试同学</td><td>进行开发与测试的初步准备工作</td></tr><tr><td>5</td><td>用例评审</td><td>此阶段主要由测试同学给出详细完整的用例，由需求方为主进行核验，开发同学为辅进行补充。评审的形式不限于会议（可私下进行）</td><td>测试同学，需求方，开发同学</td><td>需求方对需求理解的最深入，因此评审可能更具有针对性。开发同学对系统实现最为了解，对细节及用例的补充更有发言权</td></tr><tr><td>6</td><td>测试环境确认</td><td>由测试同学，开发同学一起确认，构建本次需求的测试环境。主要针对算法推荐，推荐位后台，或其他第三方对接系统的测试接口，或线上接口的指定数据。并明确相应系统的开发负责人。</td><td>测试同学，开发同学</td><td>测试环境的不同可能会导致上线结果的与预期不符。优先使用推荐的测试接口，其次使用线上接口推指定数据的模式</td></tr><tr><td>7</td><td>功能开发与提测</td><td>开发人员进行完整的功能开发，开发完毕后，发邮件进行提测，提测需明确指出测试时注意的问题，测试接口的使用说明，修改范围等注意事项，可参考《建议的提测邮件模板》</td><td>开发同学</td><td>描述的清晰有利于指导测试同学进行验证</td></tr><tr><td>8</td><td>功能验证</td><td>测试同学针对测试用例进行功能的验证，涉及第三方对接的，需要进入对应的后台系统、对接接口进行内部逻辑的验证</td><td>测试同学</td><td>验证时不仅要验证最终输出的效果，还要关注与其他系统对接的每一个环节的逻辑正确性</td></tr><tr><td>9</td><td>功能复审</td><td>测试完成后，由测试同学给需求方进行功能演示，需求方需要复审功能的完整性和正确性</td><td>测试同学，需求方</td><td>需求方进行主导，检查测试是否全面准确</td></tr><tr><td>10</td><td>测试完成</td><td>测试同学测试完毕后，回复测试完成邮件。邮件中需标明因条件限制或其他原因无法验证的地方或已知问题可以暂不修复的功能点</td><td>测试同学</td><td>增加说明有利于后期跟踪，回顾时进行查看</td></tr><tr><td>11</td><td>上线方案评估</td><td>后端开发主导，与对接的系统开发人员沟通，明确其他系统的上线时间点及上线安排。有上线时序的功能需要提前明确上线的顺序</td><td>后端开发，对接的系统开发同学</td><td>复杂功能的上线需要特别关注，防止出现某一端提前上线导致出现线上问题再紧急回滚</td></tr><tr><td>12</td><td>后端上线</td><td>在指定的上线时间点（如每周一下午）或紧急需求随时上线后，后端开发需要邮件告知上线完成</td><td>后端开发同学</td><td>上线通知后，有利于需求方跟进功能的变化及统计数据的变化</td></tr><tr><td>13</td><td>上线回归验证</td><td>需求方为主，对线上的新功能进行验证，不具备展示该功能条件的，由需求方创造条件进行第一时间验证。测试及开发同学也要及时关注</td><td>需求方</td><td>需求方第一时间验证，有利于发现问题第一时间解决</td></tr><tr><td>14</td><td>上线确认</td><td>功能验收后由需求方进行确认，并邮件回复</td><td>需求方</td><td>上线确认后，本需求即可以正常完结</td></tr></tbody></table><p>补充说明：</p><p>在进入开发阶段后进行的功能调整，需要重新进行功能评审会议，由各方人员确认功能的调整是否需要调整开发及测试用例</p><p>提测邮件范例</p><h2 id="问题重现与优秀实践"><a href="#问题重现与优秀实践" class="headerlink" title="问题重现与优秀实践"></a>问题重现与优秀实践</h2><p>附提测邮件</p><p>需求文档示例对比</p><p>push通知的案例,返回标签的案例</p><h2 id="困难与挑战"><a href="#困难与挑战" class="headerlink" title="困难与挑战"></a>困难与挑战</h2><ul><li><p>需求方提出需求的紧迫性及随意性</p></li><li><p>流程增多，相应的时间线拉长</p></li><li><p>无文档需求或类似丹哥的一句话需求</p></li><li><p>没有过测试的需求</p></li></ul><h2 id="美好的期待"><a href="#美好的期待" class="headerlink" title="美好的期待"></a>美好的期待</h2><p>流程的试行，流程环节的改进与优化 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;测试质量优化建议方案&lt;/p&gt;
&lt;h2 id=&quot;问题现状&quot;&gt;&lt;a href=&quot;#问题现状&quot; class=&quot;headerlink&quot; title=&quot;问题现状&quot;&gt;&lt;/a&gt;问题现状&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;涉及客户端开发的需求，后端逻辑的重视程度不够，导致部分逻辑验证遗漏&lt;/li&gt;
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title>神奇的Docker</title>
    <link href="http://yoursite.com/2018/07/24/%E7%A5%9E%E5%A5%87%E7%9A%84Docker/"/>
    <id>http://yoursite.com/2018/07/24/神奇的Docker/</id>
    <published>2018-07-24T08:31:57.000Z</published>
    <updated>2023-04-06T02:14:10.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker简介"><a href="#Docker简介" class="headerlink" title="Docker简介"></a>Docker简介</h1><h2 id="Docker定义与理解"><a href="#Docker定义与理解" class="headerlink" title="Docker定义与理解"></a>Docker定义与理解</h2><p>Docker 属于 Linux 容器的一种封装，提供简单易用的容器使用接口。<br>也可以理解为一种轻量级的虚拟机,可以方便的生成或组合出符合我们需要的环境.</p><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>Docker 的主要用途，目前有三大类。</p><p>（1）提供一次性的环境。比如，本地测试他人的软件、持续集成的时候提供单元测试和构建的环境。</p><p>（2）提供弹性的云服务。因为 Docker 容器可以随开随关，很适合动态扩容和缩容。</p><p>（3）组建微服务架构。通过多个容器，一台机器可以跑多个服务，因此在本机就可以模拟出微服务架构。</p><h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><p>以Ubuntu 17.10版本环境为例进行说明</p><h2 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h2><p>旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get remove docker \</span><br><span class="line">               docker-engine \</span><br><span class="line">               docker.io</span><br></pre></td></tr></table></figure></p><h2 id="使用-APT-安装"><a href="#使用-APT-安装" class="headerlink" title="使用 APT 安装"></a>使用 APT 安装</h2><p>由于 apt 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line"></span><br><span class="line">$ sudo apt-get install \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br></pre></td></tr></table></figure></p><p>鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。</p><p>为了确认所下载软件包的合法性，需要添加软件源的 GPG 密钥。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -fsSL https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure></p><p>然后，我们需要向 source.list 中添加 Docker 软件源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo add-apt-repository \</span><br><span class="line">    &quot;deb [arch=amd64] https://mirrors.ustc.edu.cn/docker-ce/linux/ubuntu \</span><br><span class="line">    $(lsb_release -cs) \</span><br><span class="line">    stable&quot;</span><br></pre></td></tr></table></figure></p><p><code>警告：切勿在没有配置 Docker APT 源的情况下直接使用 apt 命令安装 Docker.</code></p><p>安装 Docker CE<br>更新 apt 软件包缓存，并安装 docker-ce：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line"></span><br><span class="line">$ sudo apt-get install docker-ce</span><br></pre></td></tr></table></figure></p><p>安装完成后，运行下面的命令，验证是否安装成功。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker version</span><br><span class="line"># 或者</span><br><span class="line">$ docker info</span><br></pre></td></tr></table></figure></p><h1 id="启动-Docker-CE"><a href="#启动-Docker-CE" class="headerlink" title="启动 Docker CE"></a>启动 Docker CE</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo systemctl enable docker</span><br><span class="line">$ sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>Docker 需要用户具有 sudo 权限，为了避免每次命令都输入sudo，可以把用户加入 Docker 用户组（官方文档）。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure></p><p>hello world<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run hello-world</span><br></pre></td></tr></table></figure></p><p>第一次运行会从仓库下载该映像，下载成功后会输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/engine/userguide/</span><br></pre></td></tr></table></figure></p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker image ls</span><br></pre></td></tr></table></figure><p>image 文件生成的容器实例，本身也是一个文件，称为容器文件。也就是说，一旦容器生成，就会同时存在两个文件： image 文件和容器文件。而且关闭容器并不会删除容器文件，只是容器停止运行而已。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 列出本机正在运行的容器</span><br><span class="line">$ docker container ls</span><br><span class="line"></span><br><span class="line"># 列出本机所有容器，包括终止运行的容器</span><br><span class="line">$ docker container ls --all</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">danny@danny-parallels:~$ docker container ls --all</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED              STATUS                          PORTS               NAMES</span><br><span class="line">2ac511f9e2d7        hello-world         &quot;/hello&quot;                 55 seconds ago       Exited (0) 54 seconds ago                           unruffled_bhabha</span><br><span class="line">77245f2dd6b7        hello-world         &quot;/hello&quot;                 About a minute ago   Exited (0) About a minute ago                       friendly_pare</span><br><span class="line">7d952cca3ba6        hello-world         &quot;/hello&quot;                 8 minutes ago        Exited (0) 8 minutes ago                            awesome_stallman</span><br><span class="line">c26800116685        ubuntu:14.04        &quot;/bin/bash&quot;              4 days ago           Exited (0) 4 days ago                               modest_allen</span><br><span class="line">fe278ae1ae84        ubuntu:14.04        &quot;/bin/bash&quot;              4 days ago           Exited (0) 4 days ago                               dreamy_swartz</span><br><span class="line">24ee5515501c        wordpress           &quot;docker-entrypoint.s…&quot;   4 days ago           Exited (0) 4 days ago                               docker-demo_web_1</span><br><span class="line">6e164b64e3ac        mysql:5.7           &quot;docker-entrypoint.s…&quot;   4 days ago           Exited (0) 4 days ago                               docker-demo_mysql_1</span><br><span class="line">4d41741e67c1        hello-world         &quot;/hello&quot;                 4 days ago           Exited (0) 4 days ago                               adoring_kilby</span><br><span class="line">814df7693f7e        hello-world         &quot;/hello&quot;                 4 days ago           Exited (0) 4 days ago                               laughing_pasteur</span><br><span class="line">29f12178f175        hello-world         &quot;/hello&quot;                 4 days ago           Exited (0) 4 days ago                               sharp_shannon</span><br><span class="line">15cb57f17715        hello-world         &quot;/hello&quot;                 4 days ago           Exited (0) 4 days ago                               focused_gates</span><br><span class="line">044e9fd2ffeb        hello-world         &quot;/hello&quot;                 4 days ago           Exited (0) 4 days ago                               vibrant_hugle</span><br></pre></td></tr></table></figure><p>上面命令的输出结果之中，包括容器的 ID。很多地方都需要提供这个 ID，比如上一节终止容器运行的<code>docker container kill</code>命令。</p><p>终止运行的容器文件，依然会占据硬盘空间，可以使用<code>docker container rm</code>命令删除。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker container rm [containerID]</span><br></pre></td></tr></table></figure><h1 id="Docker网站搭建"><a href="#Docker网站搭建" class="headerlink" title="Docker网站搭建"></a>Docker网站搭建</h1><h2 id="新建-MySQL-容器"><a href="#新建-MySQL-容器" class="headerlink" title="新建 MySQL 容器"></a>新建 MySQL 容器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker container run \</span><br><span class="line">  -d \</span><br><span class="line">  --rm \</span><br><span class="line">  --name wordpressdb \</span><br><span class="line">  --env MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">  --env MYSQL_DATABASE=wordpress \</span><br><span class="line">  mysql:5.7</span><br></pre></td></tr></table></figure><p>上面的命令会基于 MySQL 的 image 文件（5.7版本）新建一个容器。<br><strong>参数含义:</strong><br>-d：容器启动后，在后台运行。<br>–rm：容器终止运行后，自动删除容器文件。<br>–name wordpressdb：容器的名字叫做wordpressdb<br>–env MYSQL_ROOT_PASSWORD=123456：向容器进程传入一个环境变量MYSQL_ROOT_PASSWORD，该变量会被用作 MySQL 的根密码。<br>–env MYSQL_DATABASE=wordpress：向容器进程传入一个环境变量MYSQL_DATABASE，容器里面的 MySQL 会根据该变量创建一个同名数据库（本例是WordPress）。</p><p>查看正在运行的容器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker container ls</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</span><br><span class="line">7bc3aa636365        phpwithmysql        &quot;docker-php-entrypoi…&quot;   4 minutes ago       Up 4 minutes        80/tcp              wordpress</span><br><span class="line">a1972f622329        mysql:5.7           &quot;docker-entrypoint.s…&quot;   4 minutes ago       Up 4 minutes        3306/tcp            wordpressdb</span><br><span class="line"></span><br><span class="line">$ docker container logs wordpressdb</span><br></pre></td></tr></table></figure></p><h2 id="定制-PHP-容器"><a href="#定制-PHP-容器" class="headerlink" title="定制 PHP 容器"></a>定制 PHP 容器</h2><p>官方php容器不带mysql,因此需要自己安装一下mysql扩展,必须自己新建 image 文件。</p><p>新建一个Dockerfile文件，写入下面的内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FROM php:5.6-apache</span><br><span class="line">RUN docker-php-ext-install mysqli</span><br><span class="line">CMD apache2-foreground</span><br></pre></td></tr></table></figure></p><p>上面代码的意思，就是在原来 PHP 的 image 基础上，安装mysqli的扩展。然后，启动 Apache。</p><p>基于这个 Dockerfile 文件，新建一个名为phpwithmysql的 image 文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t phpwithmysql .</span><br></pre></td></tr></table></figure><h2 id="容器链接mysql"><a href="#容器链接mysql" class="headerlink" title="容器链接mysql"></a>容器链接mysql</h2><p>现在基于 phpwithmysql image，重新新建一个 WordPress 容器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker container run \</span><br><span class="line">  --rm \</span><br><span class="line">  --name wordpress \</span><br><span class="line">  --volume &quot;$PWD/&quot;:/var/www/html \</span><br><span class="line">  --link wordpressdb:mysql \</span><br><span class="line">  phpwithmysql</span><br></pre></td></tr></table></figure><p>跟上一次相比，上面的命令多了一个参数<code>--link wordpressdb:mysql</code>，表示 WordPress 容器要连到wordpressdb容器，冒号表示该容器的别名是mysql。</p><p>这时还要改一下<code>wordpress目录的权限</code>，让容器可以将配置信息写入这个目录（容器内部写入的/var/www/html目录，会映射到这个目录）。</p><h1 id="Docker-Compose-体验"><a href="#Docker-Compose-体验" class="headerlink" title="Docker Compose 体验"></a>Docker Compose 体验</h1><p>各个容器的关联启动每次都要手工进行操作,略显繁琐.Docker 提供了一种更简单的方法，来管理多个容器的联动。<br>需要定义一个 YAML 格式的配置文件<code>docker-compose.yml</code>，写好多个容器之间的调用关系。然后，只要一个命令，就能同时启动/关闭这些容器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 启动所有服务</span><br><span class="line">$ docker-compose up</span><br><span class="line"># 关闭所有服务</span><br><span class="line">$ docker-compose stop</span><br></pre></td></tr></table></figure></p><h2 id="docker-compose安装"><a href="#docker-compose安装" class="headerlink" title="docker-compose安装"></a>docker-compose安装</h2><p>在 Linux 上的也安装十分简单，从 官方 GitHub Release 处直接下载编译好的二进制文件即 可。 例如，在 Linux 64 位系统上直接下载对应的二进制包。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">$ sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure></p><p>新建<code>docker-compose.yml</code>文件示例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">mysql:</span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    environment:</span><br><span class="line">     - MYSQL_ROOT_PASSWORD=123456</span><br><span class="line">     - MYSQL_DATABASE=wordpress</span><br><span class="line">web:</span><br><span class="line">    image: wordpress</span><br><span class="line">    links:</span><br><span class="line">     - mysql</span><br><span class="line">    environment:</span><br><span class="line">     - WORDPRESS_DB_PASSWORD=123456</span><br><span class="line">    ports:</span><br><span class="line">     - &quot;127.0.0.3:8080:80&quot;</span><br><span class="line">    working_dir: /var/www/html</span><br><span class="line">    volumes:</span><br><span class="line">     - wordpress:/var/www/html</span><br></pre></td></tr></table></figure></p><p>两个顶层标签表示有两个容器mysql和web<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up</span><br></pre></td></tr></table></figure></p><p>浏览器访问 <a href="http://127.0.0.3:8080，应该就能看到" target="_blank" rel="noopener">http://127.0.0.3:8080，应该就能看到</a> WordPress 的安装界面。</p><p>现在关闭两个容器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose stop</span><br></pre></td></tr></table></figure></p><p>关闭以后，这两个容器文件还是存在的，写在里面的数据不会丢失。下次启动的时候，还可以复用。下面的命令可以把这两个容器文件删除（容器必须已经停止运行）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose rm</span><br></pre></td></tr></table></figure><p>启动示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">danny@danny-parallels:~/docker-demo$ docker-compose up</span><br><span class="line">Starting docker-demo_mysql_1 ... done</span><br><span class="line">Starting docker-demo_web_1   ... done</span><br><span class="line">Attaching to docker-demo_mysql_1, docker-demo_web_1</span><br><span class="line">mysql_1  | 2018-07-25T02:22:28.873206Z 0 [Warning] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option (see documentation for more details).</span><br><span class="line">......</span><br></pre></td></tr></table></figure></p><p>参考资料:<br>Docker 入门教程<br><a href="http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/02/docker-tutorial.html</a></p><p>Docker 微服务教程(php+mysql+WordPress)<br><a href="http://www.ruanyifeng.com/blog/2018/02/docker-wordpress-tutorial.html" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/2018/02/docker-wordpress-tutorial.html</a></p><p>Docker 指导手册<br><a href="https://docs.docker.com/compose/install/#install-compose" target="_blank" rel="noopener">https://docs.docker.com/compose/install/#install-compose</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Docker简介&quot;&gt;&lt;a href=&quot;#Docker简介&quot; class=&quot;headerlink&quot; title=&quot;Docker简介&quot;&gt;&lt;/a&gt;Docker简介&lt;/h1&gt;&lt;h2 id=&quot;Docker定义与理解&quot;&gt;&lt;a href=&quot;#Docker定义与理解&quot; class
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title>API设计最佳实践</title>
    <link href="http://yoursite.com/2018/07/20/API%E8%AE%BE%E8%AE%A1%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2018/07/20/API设计最佳实践/</id>
    <published>2018-07-20T02:10:58.000Z</published>
    <updated>2023-04-06T02:14:10.508Z</updated>
    
    <content type="html"><![CDATA[<p>在API开发过程中，自己通过参考项目框架的代码，慢慢梳理了几个在API设计过程中需要考虑的问题及实现方式。让接口的安全性，健壮性得到进一步的提升。</p><h1 id="API接口防刷机制"><a href="#API接口防刷机制" class="headerlink" title="API接口防刷机制"></a>API接口防刷机制</h1><h2 id="回放攻击锁机制"><a href="#回放攻击锁机制" class="headerlink" title="回放攻击锁机制"></a>回放攻击锁机制</h2><h3 id="目的"><a href="#目的" class="headerlink" title="目的:"></a>目的:</h3><p>防止API短时间内被连续调用多次</p><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><p>利用redis的setnx特性(如果key不存在，则 SET,已存在则会设置失败),配合key的毫秒超时时间</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLockMs</span><span class="params">($key, $timeoutMs = <span class="number">2000</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 当key不存在的时候才能设置成功,如果key已存在,设置失败,方法返回true</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_redisClient-&gt;setnx($key, <span class="number">1</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// key之前不存在,设置成功后,再设置key的超时时间(PEXPIRE为毫秒超时设置)</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;_redisClient-&gt;PEXPIRE($key, $timeoutMs);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端调用</span></span><br><span class="line"><span class="keyword">if</span>(getLockMs(<span class="string">'api'</span>,<span class="number">2000</span>))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">'接口访问太快了!'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用场景延伸"><a href="#使用场景延伸" class="headerlink" title="使用场景延伸"></a>使用场景延伸</h3><p>配置不同的key,可以对不同场景进行限制.如限制接口调用次数,限制某个用户的调用次数,限制客户端ip单位时间内的访问次数等</p><h2 id="referer来源验证"><a href="#referer来源验证" class="headerlink" title="referer来源验证"></a>referer来源验证</h2><h3 id="目的-1"><a href="#目的-1" class="headerlink" title="目的:"></a>目的:</h3><p>防止API被未知来源的调用方调用</p><h3 id="实现原理-1"><a href="#实现原理-1" class="headerlink" title="实现原理"></a>实现原理</h3><p>referer原是浏览器发送请求时,携带的链接的页面地址.在APP-API交互模型中,沿用了此机制,服务端验证客户端提交的referer是否是白名单内的,进行数据返回.尽管referer可以伪造,但增加一层验证,也提高了一些入侵门槛.</p><h3 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkReferer</span><span class="params">($ref_white_list = [])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_REFERER'</span>])) &#123;</span><br><span class="line">$ref = $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line"><span class="keyword">if</span> (strpos( $ref, <span class="string">'http://'</span> ) !== <span class="number">0</span> &amp;&amp; strpos($ref , <span class="string">'https://'</span>) !== <span class="number">0</span>) &#123;</span><br><span class="line">$ref = <span class="string">'http://'</span> . $ref;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span> ($ref_white_list <span class="keyword">as</span> $item) &#123;</span><br><span class="line"><span class="keyword">if</span> (preg_match( <span class="string">"/&#123;$item&#125;/i"</span> , $ref)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他验证"><a href="#其他验证" class="headerlink" title="其他验证"></a>其他验证</h2><h3 id="手机号验证"><a href="#手机号验证" class="headerlink" title="手机号验证"></a>手机号验证</h3><p>可以调用第三方的接口对手机号合法性进行验证,如铜盾,数盟等</p><h3 id="设备号验证"><a href="#设备号验证" class="headerlink" title="设备号验证"></a>设备号验证</h3><p>可以调用第三方的接口对设备id合法性进行验证,如铜盾,数盟等</p><h3 id="IP验证"><a href="#IP验证" class="headerlink" title="IP验证"></a>IP验证</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ip</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取客户端IP地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">client</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>)) &#123;</span><br><span class="line">            $client_ip = getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_CLIENT_IP'</span>)) &#123;</span><br><span class="line">            $client_ip = getenv(<span class="string">'HTTP_CLIENT_IP'</span>);</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (getenv(<span class="string">'REMOTE_ADDR'</span>)) &#123;</span><br><span class="line">            $client_ip = getenv(<span class="string">'REMOTE_ADDR'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $client_ip = <span class="keyword">isset</span>($_SERVER[<span class="string">'REMOTE_ADDR'</span>]) ? $_SERVER[<span class="string">'REMOTE_ADDR'</span>] : <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $client_ip;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取服务器端IP地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">server</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($_SERVER[<span class="string">'SERVER_ADDR'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_SERVER[<span class="string">'SERVER_ADDR'</span>])) &#123;</span><br><span class="line">                $server_ip = $_SERVER[<span class="string">'SERVER_ADDR'</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $server_ip = <span class="keyword">isset</span>($_SERVER[<span class="string">'LOCAL_ADDR'</span>]) ? $_SERVER[<span class="string">'LOCAL_ADDR'</span>] : <span class="string">''</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $server_ip = getenv(<span class="string">'SERVER_ADDR'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $server_ip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="接口加密"><a href="#接口加密" class="headerlink" title="接口加密"></a>接口加密</h1><h2 id="加密流程"><a href="#加密流程" class="headerlink" title="加密流程"></a>加密流程</h2><p>参数签名-&gt;des加密-&gt;rsa加密des的key</p><h3 id="示例代码-2"><a href="#示例代码-2" class="headerlink" title="示例代码"></a>示例代码</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取解密后的数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool|string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getDecodeData</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//获取私钥</span></span><br><span class="line">$pkcs12 = file_get_contents(<span class="keyword">$this</span>-&gt;privateKey);</span><br><span class="line"><span class="comment">//rsa解密des的key</span></span><br><span class="line">$desKey = Rsa::privatekeyDecode(<span class="keyword">$this</span>-&gt;encryptKey, $pkcs12);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($desKey)) &#123;</span><br><span class="line">Log\ILogger::getLogger(<span class="keyword">__CLASS__</span>,<span class="keyword">__LINE__</span>)-&gt;warning(\Util\Param::getProid(), [<span class="string">'rsa解密失败'</span>, $_GET, $_POST]);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//des解密数据</span></span><br><span class="line">$desData = NewDes::decrypt(<span class="keyword">$this</span>-&gt;secureParams, $desKey);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($desData)) &#123;</span><br><span class="line">Log\ILogger::getLogger(<span class="keyword">__CLASS__</span>,<span class="keyword">__LINE__</span>)-&gt;warning(\Util\Param::getProid(), [<span class="string">'des解密失败'</span>, $_GET, $_POST]);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="comment">//解析字符串到数组,不进行decode</span></span><br><span class="line">$desDataArr = <span class="keyword">$this</span>-&gt;security-&gt;proper_parse_str($desData);</span><br><span class="line"><span class="comment">//验证签名</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;verifySign($desDataArr)) &#123;</span><br><span class="line">Log\ILogger::getLogger(<span class="keyword">__CLASS__</span>,<span class="keyword">__LINE__</span>)-&gt;warning(\Util\Param::getProid(), [<span class="string">'验证签名错误'</span>, $desData, $desDataArr]);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $desData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 校验签名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $data</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">verifySign</span><span class="params">($data)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">$postSign = $data[<span class="string">'sign'</span>];</span><br><span class="line">ksort($data);</span><br><span class="line">reset($data);</span><br><span class="line"><span class="keyword">unset</span>($data[<span class="string">'sign'</span>]);</span><br><span class="line"><span class="comment">//拼接url，不进行urlencode</span></span><br><span class="line">$str = <span class="keyword">$this</span>-&gt;security-&gt;my_http_buid($data);</span><br><span class="line">$makeSign = md5($str . <span class="keyword">$this</span>-&gt;md5Salt);</span><br><span class="line"><span class="keyword">if</span> ($postSign != $makeSign) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在API开发过程中，自己通过参考项目框架的代码，慢慢梳理了几个在API设计过程中需要考虑的问题及实现方式。让接口的安全性，健壮性得到进一步的提升。&lt;/p&gt;
&lt;h1 id=&quot;API接口防刷机制&quot;&gt;&lt;a href=&quot;#API接口防刷机制&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title>任务中心系统设计</title>
    <link href="http://yoursite.com/2017/10/31/%E4%BB%BB%E5%8A%A1%E4%B8%AD%E5%BF%83/"/>
    <id>http://yoursite.com/2017/10/31/任务中心/</id>
    <published>2017-10-31T08:52:15.000Z</published>
    <updated>2023-04-06T02:14:10.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="业务说明"><a href="#业务说明" class="headerlink" title="业务说明"></a>业务说明</h1><p>APP中不同业务模块的功能整合到任务中心的统一入口中，方便新用户完成各项任务并获得奖励。<br>每个任务完成的同时会获得自身的奖励，同时，累计的任务完成数达到目标后，还可以获得开启宝箱的资格，通过开启宝箱，还可以获得更多的奖励。</p><h1 id="架构体系"><a href="#架构体系" class="headerlink" title="架构体系"></a>架构体系</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>任务中心是各个业务模块完成自身任务后，汇总给任务中心服务端，进行统一的任务记录，奖励发放等逻辑。<br>采用消息队列机制，各个业务方按照约定的消息格式向任务中心MQ发送消息，告知用户的任务完成情况。</p><h2 id="架构示意图"><a href="#架构示意图" class="headerlink" title="架构示意图"></a>架构示意图</h2><p><img src="https://raw.githubusercontent.com/dannywj/dannywj.github.io/raw/raw/source/statics/task.png" alt=""></p><h2 id="任务类型"><a href="#任务类型" class="headerlink" title="任务类型"></a>任务类型</h2><table><thead><tr><th>任务id</th><th>任务名称</th><th>完成奖励</th><th>业务方</th><th>业务方处理奖励</th></tr></thead><tbody><tr><td>1</td><td>完善宝宝信息</td><td>+10蜜豆</td><td>API</td><td>N</td></tr><tr><td>2</td><td>完善地址信息</td><td>+5蜜豆</td><td>API</td><td>N</td></tr><tr><td>……</td><td>……</td><td>……</td><td>……</td><td>……</td></tr></tbody></table><h2 id="任务通知方式及参数定义"><a href="#任务通知方式及参数定义" class="headerlink" title="任务通知方式及参数定义"></a>任务通知方式及参数定义</h2><p>采用RabbitMQ消息队列进行数据交互。</p><h3 id="数据格式"><a href="#数据格式" class="headerlink" title="数据格式"></a>数据格式</h3><p><strong>json</strong></p><h3 id="数据项说明"><a href="#数据项说明" class="headerlink" title="数据项说明"></a>数据项说明</h3><table><thead><tr><th>字段名</th><th>字段类型</th><th>是否必传</th><th>字段含义</th></tr></thead><tbody><tr><td>user_id</td><td>int</td><td>Y</td><td>用户id</td></tr><tr><td>task_id</td><td>int</td><td>Y</td><td>任务id</td></tr><tr><td>is_processed</td><td>bool</td><td>Y</td><td>是否已处理奖励</td></tr><tr><td>reward_name</td><td>string</td><td>N</td><td>已发放奖励名称。is_processed 为true时必传</td></tr><tr><td>finished_time</td><td>string</td><td>Y</td><td>任务完成时间</td></tr></tbody></table><h3 id="示例数据"><a href="#示例数据" class="headerlink" title="示例数据"></a>示例数据</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"user_id"</span>: <span class="number">10001</span>,</span><br><span class="line">  <span class="attr">"task_id"</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"is_processed"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"reward_name"</span>: <span class="string">"10蜜豆/每贴"</span>,</span><br><span class="line">  <span class="attr">"finished_time"</span>: <span class="string">"2017-10-13 10:00:04"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="设计关键点"><a href="#设计关键点" class="headerlink" title="设计关键点"></a>设计关键点</h1><p>考虑到用户比较多，每天的任务完成后数据积累比较多，因此需要分散用户每天的数据，提高查询效率。</p><p>目前可采用的方式有如下几个：</p><ol><li>数据查询走redis。 key-val形式，使用脚本定期落库（扫描并清理redis中的数据，写入表）</li><li>按天分表，新建单独的数据库，每周/月定时建立下周/月的空表。将每天的数据分表保存。</li><li>使用一张表，脚本跑之前的数据到历史表中，保证当前表的数据量控制在1天。</li></ol><p>综合考虑，目前使用方案2来实现。</p><h1 id="相关表结构"><a href="#相关表结构" class="headerlink" title="相关表结构"></a>相关表结构</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`task`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`type`</span> <span class="built_in">int</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'任务类型 1-一次性任务 2-多次可完成任务'</span>,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'任务名称'</span>,</span><br><span class="line">  <span class="string">`icon`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'任务图标'</span>,</span><br><span class="line">  <span class="string">`group_type`</span> tinyint(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'任务分组 1-新人任务 2-日常任务 3-蜜芽圈任务'</span>,</span><br><span class="line">  <span class="string">`reward_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'奖励名称'</span>,</span><br><span class="line">  <span class="string">`reward_value`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'奖励值'</span>,</span><br><span class="line">  <span class="string">`reward_type`</span> tinyint(<span class="number">8</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'1'</span> <span class="keyword">COMMENT</span> <span class="string">'任务奖励类型 1-蜜豆 2-优惠券 3-红包 4-其它'</span>,</span><br><span class="line">  <span class="string">`status`</span> tinyint(<span class="number">2</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'状态 1启用  0 未启用'</span>,</span><br><span class="line">  <span class="string">`start_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'开始时间'</span>,</span><br><span class="line">  <span class="string">`end_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'结束时间'</span>,</span><br><span class="line">  <span class="string">`task_url`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'未完成跳转链接'</span>,</span><br><span class="line">  <span class="string">`finished_url`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'已完成跳转链接'</span>,</span><br><span class="line">  <span class="string">`task_button_txt`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'任务未完成文案'</span>,</span><br><span class="line">  <span class="string">`finished_button_txt`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'已完成文案'</span>,</span><br><span class="line">  <span class="string">`sort`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'排序(越大越靠前)'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CURRENT_TIMESTAMP</span> <span class="keyword">COMMENT</span> <span class="string">'更新时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_start_time`</span> (<span class="string">`start_time`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_end_time`</span> (<span class="string">`end_time`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">19</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'任务配置表'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`task_final_log`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'完成任务用户id'</span>,</span><br><span class="line">  <span class="string">`task_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'任务id'</span>,</span><br><span class="line">  <span class="string">`processed_reward_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'已获取的奖励名称（个性化的奖励名称）'</span>,</span><br><span class="line">  <span class="string">`finished_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'任务完成时间'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_user_id`</span> (<span class="string">`user_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_finished_time`</span> (<span class="string">`finished_time`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">2901927</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'一次性任务用户完成日志'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`task_log`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'完成任务用户id'</span>,</span><br><span class="line">  <span class="string">`task_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'任务id'</span>,</span><br><span class="line">  <span class="string">`processed_reward_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">''</span> <span class="keyword">COMMENT</span> <span class="string">'已获取的奖励名称（个性化的奖励名称）'</span>,</span><br><span class="line">  <span class="string">`finished_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'任务完成时间'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_user_id`</span> (<span class="string">`user_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`idx_finished_time`</span> (<span class="string">`finished_time`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">66</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'用户日常任务完成日志'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`task_reward_log`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'自增id'</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'用户id'</span>,</span><br><span class="line">  <span class="string">`reward_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'奖励宝箱id'</span>,</span><br><span class="line">  <span class="string">`open_date`</span> <span class="built_in">date</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00'</span> <span class="keyword">COMMENT</span> <span class="string">'开宝箱日期'</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0000-00-00 00:00:00'</span> <span class="keyword">COMMENT</span> <span class="string">'创建时间'</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`index_user_id`</span> (<span class="string">`user_id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`index_user_id_date`</span> (<span class="string">`open_date`</span>,<span class="string">`user_id`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">27</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'任务奖励日志表'</span>;</span><br></pre></td></tr></table></figure><h1 id="消息队列配置注意事项"><a href="#消息队列配置注意事项" class="headerlink" title="消息队列配置注意事项"></a>消息队列配置注意事项</h1><p>任务中心消耗,由于服务器有多台机器消耗，因此配置的时候分组进行<br>rabbitMQ 管理后台（15672）需使用VMServer登录，查看，连接配置使用vip进行配置（HA架构）</p><p>消耗脚本入口增加参数：nohup sh /opt/webroot/api/current/bin/fork_push.sh /amqp_task_center_process/consume/${j} 1 &gt;/dev/null 2&gt;&amp;1 &amp;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$amqp[&apos;task_center_consume&apos;] = [</span><br><span class="line">    [</span><br><span class="line">        &apos;host&apos;     =&gt; &quot;10.1.52.192&quot;,</span><br><span class="line">        &apos;port&apos;     =&gt; &quot;5672&quot;,</span><br><span class="line">        &apos;login&apos;    =&gt; &quot;miya_amqp_admin&quot;,</span><br><span class="line">        &apos;password&apos; =&gt; &quot;miya_admin_pwd&quot;,</span><br><span class="line">        &apos;vhost&apos;    =&gt; &quot;/&quot;</span><br><span class="line">    ] ,</span><br><span class="line">    [</span><br><span class="line">        &apos;host&apos;     =&gt; &quot;10.1.52.193&quot;,</span><br><span class="line">        &apos;port&apos;     =&gt; &quot;5672&quot;,</span><br><span class="line">        &apos;login&apos;    =&gt; &quot;miya_amqp_admin&quot;,</span><br><span class="line">        &apos;password&apos; =&gt; &quot;miya_admin_pwd&quot;,</span><br><span class="line">        &apos;vhost&apos;    =&gt; &quot;/&quot;</span><br><span class="line">    ] ,</span><br><span class="line">    [</span><br><span class="line">        &apos;host&apos;     =&gt; &quot;10.1.52.194&quot;,</span><br><span class="line">        &apos;port&apos;     =&gt; &quot;5672&quot;,</span><br><span class="line">        &apos;login&apos;    =&gt; &quot;miya_amqp_admin&quot;,</span><br><span class="line">        &apos;password&apos; =&gt; &quot;miya_admin_pwd&quot;,</span><br><span class="line">        &apos;vhost&apos;    =&gt; &quot;/&quot;</span><br><span class="line">    ] ,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h1 id="上线及部署"><a href="#上线及部署" class="headerlink" title="上线及部署"></a>上线及部署</h1><h2 id="上线命令汇总"><a href="#上线命令汇总" class="headerlink" title="上线命令汇总"></a>上线命令汇总</h2><h3 id="crontab配置"><a href="#crontab配置" class="headerlink" title="crontab配置"></a>crontab配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 任务中心跑用户地址数据（指定日期夜间执行，11月9日2点1分执行）</span><br><span class="line">1 2 9 11 * /opt/php/bin/php /opt/webroot/api/current/bin/sh.php /crontab/member_task_init/initAddressInfoTask &gt;/dev/null 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line"># 任务中心日志表-每月25号1点执行创建下个月的任务日志表</span><br><span class="line">0 1 25 * * /opt/php/bin/php /opt/webroot/api/current/bin/sh.php /crontab/member_task_init/initTaskTableNextMonth</span><br></pre></td></tr></table></figure><h3 id="手工执行脚本"><a href="#手工执行脚本" class="headerlink" title="手工执行脚本"></a>手工执行脚本</h3><p>前台方式（脚本执行时间长的不建议）：<br>/opt/php/bin/php /opt/webroot/api/current/bin/sh.php /crontab/member_task_init/initBabyInfoTask</p><p>后台方式：<br>nohup /opt/php/bin/php /opt/webroot/api/current/bin/sh.php /crontab/member_task_init/initBabyInfoTask &gt;/dev/null 2&gt;&amp;1 &amp;</p><p>nohup /opt/php/bin/php /opt/webroot/api/current/bin/sh.php /crontab/member_task_init/initAddressInfoTask &gt;/dev/null 2&gt;&amp;1 &amp;</p><h3 id="服务器重启队列shell"><a href="#服务器重启队列shell" class="headerlink" title="服务器重启队列shell"></a>服务器重启队列shell</h3><p>P.S. 无密码登录模式，需要手工连接登录一次</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line">_opt=$1</span><br><span class="line">main () &#123;</span><br><span class="line">        case "$&#123;_opt&#125;" in</span><br><span class="line">                start)</span><br><span class="line">                        start</span><br><span class="line">                        ;;</span><br><span class="line">                stop)</span><br><span class="line">                        stop</span><br><span class="line">                        ;;</span><br><span class="line">                restart)</span><br><span class="line">                       restart</span><br><span class="line">                       ;;</span><br><span class="line">                *)</span><br><span class="line">                        usage</span><br><span class="line">                        exit 1</span><br><span class="line">        esac</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start() &#123;</span><br><span class="line">        printf "Starting Worker Queue...\n"</span><br><span class="line">        ARRAY_IP=(10.1.52.192 10.1.52.193 10.1.52.194)</span><br><span class="line">        # 机器数</span><br><span class="line">        j=0;</span><br><span class="line">        for ip in $&#123;ARRAY_IP[@]&#125;;do</span><br><span class="line">                ssh root@$ip "nohup sh /opt/webroot/api/current/bin/fork_push.sh /amqp_task_center_process/consume/$&#123;j&#125; 50 &gt;/dev/null 2&gt;&amp;1 &amp;"</span><br><span class="line">                # test</span><br><span class="line">                # nohup sh /opt/webroot/api/current/bin/fork_push.sh /amqp_task_center_process/consume/$&#123;j&#125; 1 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">                ((j++));</span><br><span class="line">        done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop () &#123;</span><br><span class="line">    printf "Stoping Worker Queue...\n"</span><br><span class="line">    ARRAY_IP=(10.1.52.192 10.1.52.193 10.1.52.194)</span><br><span class="line">    for ip in $&#123;ARRAY_IP[@]&#125;;do</span><br><span class="line">        ssh root@$ip "ps aux|grep '/amqp_task_center_process/'|grep -v grep|awk '&#123;print \"kill -9 \"\$2&#125;'|sh"</span><br><span class="line">        # test</span><br><span class="line">        #  ps aux|grep '/amqp_task_center_process/'|grep -v grep|awk '&#123;print "kill -9 "$2&#125;'|sh</span><br><span class="line"></span><br><span class="line">    done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">restart() &#123;</span><br><span class="line">    printf "Restarting Worker QUEUE...\n"</span><br><span class="line">    stop</span><br><span class="line">    sleep 1</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line">usage() &#123;</span><br><span class="line">        echo "Usage: sh $0 &lt;start|stop|restart&gt;"</span><br><span class="line">        echo</span><br><span class="line">        exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main</span><br></pre></td></tr></table></figure><h1 id="脚本执行注意事项"><a href="#脚本执行注意事项" class="headerlink" title="脚本执行注意事项"></a>脚本执行注意事项</h1><p>由于上线前需要执行一次老用户数据处理，需要将符合条件的老用户跑入新表，数据量为千万级，因此在设计上需要考虑以下几点：</p><ol><li>脚本初始化设置够大（内存占用，执行时间）</li><li>数据库主从连接确认</li><li>数据分页获取，变量unset,分页量参考评估时间调整</li><li>数据获取排序规则明确（方便中断后排查执行的id）</li><li>脚本重跑机制，防止意外断开后重新执行。可考虑在redis中报错上次处理的id，下次运行从此id继续</li><li>数据库连接定时重连机制</li><li>mysql可考虑批量insert</li><li>DB操作不要太频繁，中途可适当sleep</li><li>手工执行，使用后台执行方式，并监控log</li><li>数据量大小评估，脚本执行时间评估，执行后数据确认</li></ol><h2 id="脚本代码"><a href="#脚本代码" class="headerlink" title="脚本代码"></a>脚本代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> (!defined(<span class="string">'BASEPATH'</span>)) <span class="keyword">exit</span>(<span class="string">'No direct script access allowed'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务中心初始化老用户任务数据</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2017/10/24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Member_task_init</span> <span class="keyword">extends</span> <span class="title">CI_Controller</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line">        <span class="comment">//设置该页面执行时间</span></span><br><span class="line">        set_time_limit(<span class="number">3600</span> * <span class="number">24</span>);</span><br><span class="line">        ini_set(<span class="string">'memory_limit'</span>, <span class="string">'3000M'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'monolog_client'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;config-&gt;load(<span class="string">"redisconfig"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;db_read = <span class="keyword">$this</span>-&gt;load-&gt;database(<span class="string">'read'</span>, <span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db_write = <span class="keyword">$this</span>-&gt;load-&gt;database(<span class="string">'task_center_write'</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 完善宝宝信息任务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">initBabyInfoTask</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"====== begin initBabyInfoTask. ======"</span>);</span><br><span class="line">        $page_size = <span class="number">500</span>;</span><br><span class="line">        $page = <span class="number">1</span>;</span><br><span class="line">        $count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 连接redis 获取上次处理的id</span></span><br><span class="line">        $redisConf = <span class="keyword">$this</span>-&gt;config-&gt;item(<span class="string">"redis"</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'redisclient'</span>, $redisConf[<span class="string">'task_center'</span>][<span class="number">0</span>], <span class="string">'taskRedisBaby'</span>);</span><br><span class="line">        $redis = <span class="keyword">$this</span>-&gt;taskRedisBaby-&gt;getInstance(<span class="string">'initBabyInfoTask'</span>);</span><br><span class="line">        <span class="keyword">if</span> (!$redis || !$redis-&gt;isConnected()) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"redis conn error"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $last_id_key = <span class="string">'task_init_baby_last_id'</span>;</span><br><span class="line">        $last_id = $redis-&gt;get($last_id_key);</span><br><span class="line">        $last_user_id = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($last_id)) &#123;</span><br><span class="line">            $last_user_id = $last_id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 循环获取所有数据</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($count % <span class="number">10</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;db_write-&gt;reconnect();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;db_read-&gt;reconnect();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"reconnect"</span>);</span><br><span class="line">                sleep(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $sql = <span class="string">"select id from users where id&gt;&#123;$last_user_id&#125; and is_test=0 and user_type=1 and </span></span><br><span class="line"><span class="string">                (nickname is not null or child_nickname is not null</span></span><br><span class="line"><span class="string">                or  child_birth_day&lt;&gt;'0000-00-00' or child_sex&lt;&gt;0</span></span><br><span class="line"><span class="string">                or user_status&lt;&gt;0 ) limit &#123;$page_size&#125; offset "</span> . ($page - <span class="number">1</span>) * $page_size;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"get sql:&#123;$sql&#125;"</span>);</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;db_read-&gt;query($sql)-&gt;result_array();</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>($res)) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"get data empty"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span> ($res <span class="keyword">as</span> $item) &#123;</span><br><span class="line">                $user_id = $item[<span class="string">'id'</span>];</span><br><span class="line">                $task_id = <span class="number">2</span>;</span><br><span class="line">                $processed_reward_name = <span class="string">'+10蜜豆'</span>;</span><br><span class="line">                $finished_time = date(<span class="string">'Y-m-d'</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"begin insert task log.user_id:&#123;$user_id&#125;"</span>);</span><br><span class="line">                $result = <span class="keyword">$this</span>-&gt;insertFinalTaskLog($user_id, $task_id, $processed_reward_name, $finished_time);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"insertFinalTaskLog result:&#123;$result&#125;"</span>);</span><br><span class="line">                $redis-&gt;set($last_id_key, $user_id);</span><br><span class="line">            &#125;</span><br><span class="line">            $page++;</span><br><span class="line">            $count++;</span><br><span class="line">            <span class="keyword">unset</span>($res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"====== finish initBabyInfoTask. ======"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 完善地址信息任务</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">initAddressInfoTask</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"====== begin initAddressInfoTask. ======"</span>);</span><br><span class="line">        $page_size = <span class="number">500</span>;</span><br><span class="line">        $page = <span class="number">1</span>;</span><br><span class="line">        $count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 连接redis 获取上次处理的id</span></span><br><span class="line">        $redisConf = <span class="keyword">$this</span>-&gt;config-&gt;item(<span class="string">"redis"</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'redisclient'</span>, $redisConf[<span class="string">'task_center'</span>][<span class="number">0</span>], <span class="string">'taskRedisAddress'</span>);</span><br><span class="line">        $redis = <span class="keyword">$this</span>-&gt;taskRedisAddress-&gt;getInstance(<span class="string">'initAddressInfoTask'</span>);</span><br><span class="line">        <span class="keyword">if</span> (!$redis || !$redis-&gt;isConnected()) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"redis conn error"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $last_id_key = <span class="string">'task_init_address_last_id'</span>;</span><br><span class="line">        $last_id = $redis-&gt;get($last_id_key);</span><br><span class="line">        $last_user_id = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($last_id)) &#123;</span><br><span class="line">            $last_user_id = $last_id;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($count % <span class="number">10</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;db_write-&gt;reconnect();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;db_read-&gt;reconnect();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"reconnect"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            $sql = <span class="string">"SELECT distinct user_id  from user_address </span></span><br><span class="line"><span class="string">                    where user_id &gt; &#123;$last_user_id&#125;</span></span><br><span class="line"><span class="string">                    ORDER BY user_id asc</span></span><br><span class="line"><span class="string">                    limit &#123;$page_size&#125; offset "</span> . ($page - <span class="number">1</span>) * $page_size;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"get sql:&#123;$sql&#125;"</span>);</span><br><span class="line">            $res = <span class="keyword">$this</span>-&gt;db_read-&gt;query($sql)-&gt;result_array();</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>($res)) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"get data empty"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span> ($res <span class="keyword">as</span> $item) &#123;</span><br><span class="line">                $user_id = $item[<span class="string">'user_id'</span>];</span><br><span class="line">                $task_id = <span class="number">3</span>;</span><br><span class="line">                $processed_reward_name = <span class="string">'+10蜜豆'</span>;</span><br><span class="line">                $finished_time = date(<span class="string">'Y-m-d'</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"begin insert task log.user_id:&#123;$user_id&#125;"</span>);</span><br><span class="line">                $result = <span class="keyword">$this</span>-&gt;insertFinalTaskLog($user_id, $task_id, $processed_reward_name, $finished_time);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"insertFinalTaskLog result:&#123;$result&#125;"</span>);</span><br><span class="line">                $redis-&gt;set($last_id_key, $user_id);</span><br><span class="line">            &#125;</span><br><span class="line">            $page++;</span><br><span class="line">            $count++;</span><br><span class="line">            <span class="keyword">unset</span>($res);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"====== finish initAddressInfoTask. ======"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 记录日志</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $info</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">logInfo</span><span class="params">($info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (is_array($info)) &#123;</span><br><span class="line">            $info = json_encode($info);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;monolog_client-&gt;info($info, <span class="string">'task_init_data'</span>);</span><br><span class="line">        <span class="keyword">echo</span> $info . <span class="string">"\r\n&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入一次性任务日志表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $user_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $task_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $processed_reward_name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $finished_time</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">insertFinalTaskLog</span><span class="params">($user_id, $task_id, $processed_reward_name, $finished_time)</span> </span>&#123;</span><br><span class="line">        $set_insert_info = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'user_id'</span> =&gt; $user_id,</span><br><span class="line">            <span class="string">'task_id'</span> =&gt; $task_id,</span><br><span class="line">            <span class="string">'processed_reward_name'</span> =&gt; $processed_reward_name,</span><br><span class="line">            <span class="string">'finished_time'</span> =&gt; $finished_time,</span><br><span class="line">            <span class="string">'create_time'</span> =&gt; date(<span class="string">'Y-m-d H:i:s'</span>),</span><br><span class="line">        );</span><br><span class="line">        $insert_res = <span class="keyword">$this</span>-&gt;db_write-&gt;set($set_insert_info)-&gt;insert(<span class="string">'member_task_final_log'</span>);</span><br><span class="line">        <span class="keyword">if</span> ($insert_res) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建下个月的每日任务表</span></span><br><span class="line"><span class="comment">     * 每月25日执行一次</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">initTaskTableNextMonth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"============begin initTaskTableNextMonth ============"</span>);</span><br><span class="line">        $month_day_count = date(<span class="string">'t'</span>, strtotime(<span class="string">'+1 month'</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"month_day_count:$month_day_count"</span>);</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">1</span>; $i &lt;= $month_day_count; $i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($i &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                $date_str = date(<span class="string">'Ym0'</span>, strtotime(<span class="string">'+1 month'</span>)) . $i;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $date_str = date(<span class="string">'Ym'</span>, strtotime(<span class="string">'+1 month'</span>)) . $i;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"begin create table:&#123;$date_str&#125;"</span>);</span><br><span class="line">            $result = <span class="keyword">$this</span>-&gt;generateTableByDate($date_str);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"create result:&#123;$result&#125;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"============finish initTaskTableNextMonth ============"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建每日任务表</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">generateTableByDate</span><span class="params">($date)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($date)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $sql = <span class="string">"</span></span><br><span class="line"><span class="string">        CREATE TABLE `member_task_log_&#123;$date&#125;` (</span></span><br><span class="line"><span class="string">              `id` int(11) NOT NULL AUTO_INCREMENT,</span></span><br><span class="line"><span class="string">              `user_id` int(11) NOT NULL DEFAULT '0' COMMENT '完成任务用户id',</span></span><br><span class="line"><span class="string">              `task_id` int(11) NOT NULL DEFAULT '0' COMMENT '任务id',</span></span><br><span class="line"><span class="string">              `processed_reward_name` varchar(50) NOT NULL DEFAULT '' COMMENT '已获取的奖励名称（个性化的奖励名称）',</span></span><br><span class="line"><span class="string">              `finished_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '任务完成时间',</span></span><br><span class="line"><span class="string">              `create_time` datetime NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT '创建时间',</span></span><br><span class="line"><span class="string">              PRIMARY KEY (`id`),</span></span><br><span class="line"><span class="string">              KEY `idx_user_id` (`user_id`),</span></span><br><span class="line"><span class="string">              KEY `idx_finished_time` (`finished_time`)</span></span><br><span class="line"><span class="string">            ) ENGINE=InnoDB AUTO_INCREMENT=0 DEFAULT CHARSET=utf8 COMMENT='用户日常任务完成日志';</span></span><br><span class="line"><span class="string">        "</span>;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;db_write-&gt;query($sql);</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;业务说明&quot;&gt;&lt;a href=&quot;#业务说明&quot; class=&quot;headerlink&quot; title=&quot;业务说明&quot;&gt;&lt;/a&gt;业务说明&lt;/h1&gt;&lt;p&gt;APP中不同业务模块的功能整合到任务中心的统一入口中，方便新用户完成各项任务并获得奖励。&lt;br&gt;每个任务完成的同时会获得自身
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>会员Plus开发笔记</title>
    <link href="http://yoursite.com/2017/09/20/%E4%BC%9A%E5%91%98Plus%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/09/20/会员Plus开发笔记/</id>
    <published>2017-09-20T03:08:14.000Z</published>
    <updated>2023-04-06T02:14:10.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Plus业务简介"><a href="#Plus业务简介" class="headerlink" title="Plus业务简介"></a>Plus业务简介</h1><p>经过一个多月的封闭开发，会员Plus项目终于上线了。回顾整个开发过程，虽然艰辛，但还是收获了不少东西。</p><p>Plus是在电商项目基础上引入的身份特权，拥有plus身份的用户可以享受自用省钱，分享赚钱等利益，同时推荐新用户可以升级经理或合伙人。</p><p>为开发Plus项目，API重新部署了一套服务端接口（PlusAPI）做为原API的一个服务化接口，供API/Wap端进行内网调用。</p><p>服务端调用模式采用客户端（Android/IOS）调用原API，API作为代理调用PlusAPI进行业务逻辑处理。IOS</p><h1 id="底层架构"><a href="#底层架构" class="headerlink" title="底层架构"></a>底层架构</h1><h2 id="数据拆分"><a href="#数据拆分" class="headerlink" title="数据拆分"></a>数据拆分</h2><p><strong>表结构拆分</strong></p><p><em>创建10个日志记录表</em><br>plus_commission_log（总表）<br>plus_commission_log_0（分表）<br>plus_commission_log_1<br>plus_commission_log_2<br>……</p><p>考虑到高层级的用户拥有的分粉丝众多，粉丝购买商品产生的佣金记录也会很多，因此佣金记录表按用户id维度进行了水平拆分。将用户佣金记录表拆分成10个子表，按照哈希的方式进行对应。</p><p>具体拆分及获取方式：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Plus_tool</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_tableCommLogPrefix = <span class="string">'plus_commission_log'</span>;</span><br><span class="line">    <span class="keyword">private</span> $_commLogTableNum = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 按用户ID获取佣金日志表名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $userId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCommLogTable</span><span class="params">($userId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(defined(<span class="string">'COMM_LOG_TABLE_NUM'</span>)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_commLogTableNum = COMM_LOG_TABLE_NUM;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;_commLogTableNum == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_tableCommLogPrefix;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 取余</span></span><br><span class="line">        $seq = fmod(intval($userId) ,<span class="keyword">$this</span>-&gt;_commLogTableNum);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_tableCommLogPrefix.<span class="string">"_&#123;$seq&#125;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>高并发数据插入</strong></p><p>表进行拆分后，数据的录入需要考虑高并发的情况，还需要考虑各个子表的id不能重复。<br>这里采用<strong>redis的incr方式</strong>生成自增的唯一id。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$commLogIdKey = <span class="string">'plus_comm_log_id'</span>;</span><br><span class="line"></span><br><span class="line">$tempLogRow[<span class="string">'id'</span>] = $redis-&gt;incr(<span class="keyword">$this</span>-&gt;commLogIdKey);<span class="comment">//如果键不存在,则在执行操作之前将其设置为0</span></span><br><span class="line">$tempLogRow[<span class="string">'user_id'</span>] = $logRow[<span class="string">'user_id'</span>];</span><br><span class="line">$plusDb-&gt;insert(<span class="keyword">$this</span>-&gt;plus_tool-&gt;getCommLogTable($logRow[<span class="string">'user_id'</span>]) ,$tempLogRow);</span><br><span class="line"><span class="keyword">if</span>($plusDb-&gt;affected_rows() == <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>子表数据汇总</strong></p><p>数据水平拆分后，为方便查询，还需要汇总到一张总表中。实现思路是异步写入，实现方案可以是定时脚本或者消息队列。<br>个人更倾向于写入佣金时入MQ，由MQ统一写入汇总表。实际项目中用定时脚本来实现数据同步。</p><h2 id="数据表同步"><a href="#数据表同步" class="headerlink" title="数据表同步"></a>数据表同步</h2><p>考虑到Plus业务是单独的数据库，且会存在与API主库存在关联查询的情况，因此使用定时脚本方式实现了由plus库向mia库同步数据的功能。（同步用户扩展数据及佣金日志数据）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 同步用户扩展表</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">syncUserExtension</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     <span class="keyword">$this</span>-&gt;initLog(<span class="keyword">self</span>::LOG_FILE_NAME_USER_EXTENSION);</span><br><span class="line">     $check_update_time = date(<span class="string">'Y-m-d H:i:s'</span>, time() - <span class="keyword">self</span>::USER_EXTENSION_CHECK_TIME_INTERVAL);</span><br><span class="line">     $sql = <span class="string">"select * from &#123;$this-&gt;tableUserExtension&#125; where update_time&gt;'&#123;$check_update_time&#125;' "</span>;</span><br><span class="line">     $plusDb = <span class="keyword">$this</span>-&gt;load-&gt;database(<span class="string">'plus_write'</span>, <span class="keyword">true</span>);</span><br><span class="line">     $query = $plusDb-&gt;query($sql);</span><br><span class="line">     <span class="keyword">while</span> ($row = $query-&gt;unbuffered_row(<span class="string">'array'</span>)) &#123;<span class="comment">// 不缓存结果</span></span><br><span class="line">         $update_id = $row[<span class="string">'id'</span>];</span><br><span class="line">         <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"--begin sync id:&#123;$update_id&#125;"</span>);</span><br><span class="line">         <span class="keyword">$this</span>-&gt;InsertOrUpdateUserExtension($update_id, $row);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"end sync table"</span>);</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 插入或更新用户扩展信息</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> $id plus库id</span></span><br><span class="line"><span class="comment">  * <span class="doctag">@param</span> $data_row plus库信息</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">InsertOrUpdateUserExtension</span><span class="params">($id, $data_row)</span> </span>&#123;</span><br><span class="line">     $apiDb = <span class="keyword">$this</span>-&gt;load-&gt;database(<span class="string">'api_write'</span>, <span class="keyword">true</span>);</span><br><span class="line">     $where = <span class="keyword">array</span>(</span><br><span class="line">         <span class="string">'id'</span> =&gt; $id,</span><br><span class="line">     );</span><br><span class="line">     <span class="comment">// check exists</span></span><br><span class="line">     $select_result = $apiDb-&gt;select(<span class="string">'*'</span>)-&gt;from(<span class="keyword">$this</span>-&gt;tableUserExtension)</span><br><span class="line">         -&gt;where($where)-&gt;get()-&gt;result_array();</span><br><span class="line">     <span class="comment">//empty insert</span></span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">empty</span>($select_result)) &#123;</span><br><span class="line">         $apiDb-&gt;set($data_row)-&gt;insert(<span class="keyword">$this</span>-&gt;tableUserExtension);</span><br><span class="line">         <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"*id:&#123;$id&#125; insert new success"</span>);</span><br><span class="line">     &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="comment">//exists update</span></span><br><span class="line">         $apiDb-&gt;set($data_row)-&gt;where($where)-&gt;update(<span class="keyword">$this</span>-&gt;tableUserExtension);</span><br><span class="line">         <span class="keyword">if</span> ($apiDb-&gt;affected_rows() === <span class="number">0</span>) &#123;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;logInfo(<span class="string">'same data.'</span>);</span><br><span class="line">         &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">             <span class="keyword">$this</span>-&gt;logInfo(<span class="string">"*id:&#123;$id&#125; update success"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><em>tips：</em><br><em>mysql_unbuffered_query的好处：第一是节省内存，第二是它不用等数据获取完全以后操作，直接可以获取一条数据以后就可以操作。</em></p><h2 id="信息处理机制"><a href="#信息处理机制" class="headerlink" title="信息处理机制"></a>信息处理机制</h2><p>佣金日志的表数据变更涉及多个业务模块，如数据统计，发券，短信，站内信。<br>理想的实现方式是使用MQ的fanout模式对每条佣金日志的变更分别进行处理，实现方式简单，但是需要考虑队列数据丢失后的数据修复问题。</p><p>而使用脚本增量统计的方式，需要严格依赖运行时间（每次运行不能够重复处理数据，也不能有漏掉的时间间隔）</p><h1 id="数据库相关"><a href="#数据库相关" class="headerlink" title="数据库相关"></a>数据库相关</h1><h2 id="复杂业务场景使用事务"><a href="#复杂业务场景使用事务" class="headerlink" title="复杂业务场景使用事务"></a>复杂业务场景使用事务</h2><p>提现场景涉及多个表的读写，多个表的更新必须同时处理正确才不影响后续流程。因此，把提现业务的所有sql操作汇总到一个事务中去统一提交。</p><p>事务的处理：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createCommCash</span><span class="params">($uid ,$newExtractList,$commList,$open_id)</span></span>&#123;</span><br><span class="line">    <span class="comment">//验证用户ID、佣金计税集合、$commList是否为空</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($uid) || <span class="keyword">empty</span>($newExtractList) || <span class="keyword">empty</span>($commList)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//加载plus数据库句柄</span></span><br><span class="line">    $plusWrite = <span class="keyword">$this</span>-&gt;load-&gt;database(<span class="string">'plus_write'</span> ,<span class="keyword">true</span>);</span><br><span class="line">    <span class="comment">//加载日志插件</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'monolog_client'</span>);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'plus_tool'</span>);</span><br><span class="line">    <span class="comment">//获取当前时间</span></span><br><span class="line">    $nowTime = date(<span class="string">"Y-m-d H:i:s"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//开启事物</span></span><br><span class="line">    $plusWrite-&gt;trans_begin();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*------------------------插入提现单  开始-------------------------------*/</span></span><br><span class="line">    <span class="comment">//组装插入提现数据</span></span><br><span class="line">    $cash_code = <span class="keyword">$this</span>-&gt;plus_tool-&gt;createCashCode();</span><br><span class="line">    $insertCashData = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'cash_code'</span>=&gt; $cash_code,  <span class="comment">//提现单号</span></span><br><span class="line">        <span class="string">'cash_amount'</span>=&gt;$newExtractList[<span class="string">'comm_amount'</span>],           <span class="comment">//提现金额</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行插入操作</span></span><br><span class="line">    $plusWrite-&gt;insert(<span class="keyword">$this</span>-&gt;tableCommCash, $insertCashData);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;monolog_client-&gt;info(<span class="string">"插入提现申请数据sql:"</span>.$plusWrite-&gt;last_query(), <span class="string">'plus_commission_cash'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//验证是否操作成功</span></span><br><span class="line">    <span class="keyword">if</span> ($plusWrite-&gt;affected_rows() &lt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">//回滚</span></span><br><span class="line">        $plusWrite-&gt;trans_rollback();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*------------------------插入提现单   结束-------------------------------*/</span></span><br><span class="line">    <span class="comment">/*------------------------business-------------------------------*/</span></span><br><span class="line">    <span class="comment">// 事务提交</span></span><br><span class="line">    <span class="keyword">if</span>($plusWrite-&gt;trans_status() === <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">        <span class="comment">//回滚</span></span><br><span class="line">        $plusWrite-&gt;trans_rollback();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//提交</span></span><br><span class="line">        $plusWrite-&gt;trans_commit();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;monolog_client-&gt;info(<span class="string">"更新提现数据完成，事务提交success"</span>, <span class="string">'plus_commission_cash'</span>);</span><br><span class="line">        <span class="comment">//组装返回数据</span></span><br><span class="line">        $result = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'arrival_price'</span> =&gt; floatval($newExtractList[<span class="string">'comm_amount'</span>]) - floatval($newExtractList[<span class="string">'comm_taxation'</span>]),  <span class="comment">//到账金额</span></span><br><span class="line">            <span class="string">'taxation_price'</span> =&gt; floatval($newExtractList[<span class="string">'comm_taxation'</span>]),    <span class="comment">//税费金额</span></span><br><span class="line">            <span class="string">'extract_code'</span> =&gt; $cash_code,                                         <span class="comment">//税费单号</span></span><br><span class="line">            <span class="string">'extract_id'</span> =&gt; $insertId,</span><br><span class="line">            <span class="string">'extract_time'</span> =&gt; $insertCashData[<span class="string">'apply_time'</span>],                    <span class="comment">//提现时间</span></span><br><span class="line">            <span class="string">'extract_status'</span> =&gt; <span class="number">2</span>,                                               <span class="comment">//提现状态</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="SQL性能评估"><a href="#SQL性能评估" class="headerlink" title="SQL性能评估"></a>SQL性能评估</h2><p>查询类接口中包含复杂的查询sql，优化时要进行explain慢查询评估，观察索引的使用情况，做合理优化。</p><h2 id="主从连接"><a href="#主从连接" class="headerlink" title="主从连接"></a>主从连接</h2><ul><li>model的构造方法中不要提前连接数据库句柄，虽然方便，会增加一次写库的连接开销。</li><li>脚本相关的数据库连接尽量使用主库连接，防止出现数据不同步的问题难以排查。</li></ul><h1 id="脚本相关"><a href="#脚本相关" class="headerlink" title="脚本相关"></a>脚本相关</h1><p>增量统计脚本的运行时间和脚本处理的数据时间段应该配置好。由于增量统计脚本不能重复跑数据，可以考虑每小时的第10分钟运行一次，扫描上一个整小时的待处理数据。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">每小时第20分钟执行1次</span><br><span class="line">20 * * * * php /crontab/DailyStatistics/syncUserIncome &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure></p><p>增量统计脚本在凌晨可以考虑增加<strong>全量计算</strong>脚本，不影响用户数据。</p><p><strong>脚本及队列需要考虑异常情况的数据修复</strong></p><ol><li>记录错误日志，并用另外的脚本执行修复</li><li>队列重新插入，按正常流程处理</li><li>记录上次的操作id，后续重复执行</li></ol><p><strong>错误日志处理</strong><br>考虑支持从log中检查错误信息，并将错误数据处理并修复，并有重试机制。（如重复2次依然无法修复，进行错误报警）</p><p><strong>脚本防断评估</strong><br>脚本需要考虑执行中断的情况，如何后续运行后修补断开时间内的数据。可以使用记录上次完成时间的方式来处理</p><p><em>处理示例：</em><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 同步用户收益金额</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">syncUserIncome</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;initLog(<span class="keyword">self</span>::LOG_FILE_NAME_INCOME);</span><br><span class="line">    <span class="comment">// 计算当前时间前整5min的数据</span></span><br><span class="line">    $begin_time = date(<span class="string">'Y-m-d H:i:00'</span>, strtotime(<span class="string">'-5 minute'</span>));</span><br><span class="line">    $end_time = date(<span class="string">'Y-m-d H:i:00'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化redis</span></span><br><span class="line">    $redis = <span class="keyword">$this</span>-&gt;plus_tool-&gt;initCronRedis(<span class="string">'syncUserIncome'</span>);</span><br><span class="line">    <span class="keyword">if</span> ($redis) &#123;</span><br><span class="line">        $last_end_time = $redis-&gt;get(<span class="keyword">$this</span>-&gt;syncUserIncomeKey);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($last_end_time)) &#123;</span><br><span class="line">            $begin_time = $last_end_time;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// business</span></span><br><span class="line"></span><br><span class="line">    $redis-&gt;set(<span class="keyword">$this</span>-&gt;syncUserIncomeKey ,$end_time);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>如此处理，即使脚本执行频率增大或减小，都不会重复处理数据和遗漏处理数据！</p><p><strong>脚本执行时间配置</strong><br>脚本操作同一个表频繁，容易锁表,可适当延迟交错脚本执行时间。<br>crontab 可以用sleep来进行秒级间隔运行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">*/2 * * * * sleep 6;  php /crontab/SyncData/syncCommissionLog/1 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 12; php /crontab/SyncData/syncCommissionLog/2 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 18; php /crontab/SyncData/syncCommissionLog/3 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 24; php /crontab/SyncData/syncCommissionLog/4 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 30; php /crontab/SyncData/syncCommissionLog/5 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 36; php /crontab/SyncData/syncCommissionLog/6 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 42; php /crontab/SyncData/syncCommissionLog/7 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 48; php /crontab/SyncData/syncCommissionLog/8 &gt; /dev/null 2&gt;&amp;1</span><br><span class="line">*/2 * * * * sleep 54; php /crontab/SyncData/syncCommissionLog/9 &gt; /dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure><p><strong>脚本其他注意事项</strong></p><ol><li>增量脚本不靠谱，外部原因，数据同步原因，等等因素均会影响最终结果。一旦结果有问题，难以修复。需要增加全量修复脚本备用。</li><li>单个脚本尽量不依赖其他脚本的数据结果（如佣金日志总表数据，是由分表脚本同步而来），同步有延迟，会影响当前脚本的数据结果。且会在整分钟时刻漏掉部分数据。</li><li>脚本初始化增加必要的配置。如运行时间，内存分配等。</li><li>日志记录尽量单独区分，同一脚本的多个任务不要混用一个日志文件，不便于排查问题。</li><li>长时间运行的脚本，数据库连接有可能中断，要定期重新连接一下。</li><li>同一脚本的多个DB操作，可共享一个DB连接，防止DB连接数过多而导致服务器报错。</li><li>$query-&gt;unbuffered_row(‘array’)方式的内存占用问题有待考察，可考虑用分页的方式处理。</li></ol><p>参考代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 脚本配置</span></span><br><span class="line">set_time_limit(<span class="number">3600</span> * <span class="number">24</span>);</span><br><span class="line">ini_set(<span class="string">'memory_limit'</span>,<span class="string">'3000M'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定时重新连接DB</span></span><br><span class="line"><span class="keyword">$this</span>-&gt;plusDb = <span class="keyword">$this</span>-&gt;load-&gt;database(<span class="string">'plus_write'</span>, <span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span> ($count % <span class="number">100</span> == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;plusDb-&gt;reconnect();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 共享DB连接</span></span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;plusDb-&gt;query($sql)-&gt;row_array();</span><br></pre></td></tr></table></figure></p><h1 id="接口相关"><a href="#接口相关" class="headerlink" title="接口相关"></a>接口相关</h1><h2 id="身份验证相关"><a href="#身份验证相关" class="headerlink" title="身份验证相关"></a>身份验证相关</h2><ul><li>外网访问的接口，需要严格进行身份验证，接口签名等安全验证机制。如API，wap页等。</li><li>内网调用的接口（如服务化接口，电视大屏接口，Thrift接口）由于不暴露在外网环境，不需验证用户身份，直接调用即可。</li></ul><ul><li><p>account/detail用户详细信息接口之前缓存了整个接口数据， 新增的用户类型信息不适合缓存，因此把总缓存改为业务缓存，根据具体的模块信息单独进行缓存。</p></li><li><p>接口配置中，增加业务总开关，整体控制某个业务的开关。</p></li><li><p>详情页针对某个业务的特殊功能，在用户详情信息中增加字段会需要查寻上级信息，代价大，考虑走单独接口，不要使用基础接口。</p></li><li><p>提现接口防重机制<br>对于重点接口，应该防止短时间内重复调用。可使用redis记录key 成功后删除，10s内操作中防止重复调用。</p></li></ul><h1 id="第三方对接"><a href="#第三方对接" class="headerlink" title="第三方对接"></a>第三方对接</h1><p>提现调试中签名错误有可能是用的key不对。</p><p><strong>支付异常的处理</strong><br>第三方支付失败的情况需要考虑全，涉及如下几种情况：</p><ol><li>第三方直接明确返回支付失败</li><li>第三方返回成功，实际却支付失败了</li><li>第三方返回失败，实际却成功了</li><li>调用接口超时，无法接收到成功失败的信息</li></ol><p>需要根据不同情况分别处理。一般支付平台都会提供异步通知或支付结果查询的接口，方便进行二次校验。</p><p><em>处理原则：</em></p><ol><li>不应该相信同步接口返回的结果，要以异步通知或异步查询结果为准。</li><li>支付失败要有数据回退方案。</li><li>接口超时可视为操作成功，后续用异步接口进行验证后，如果失败，执行回退方案。</li></ol><h2 id="支付场景与事务处理"><a href="#支付场景与事务处理" class="headerlink" title="支付场景与事务处理"></a>支付场景与事务处理</h2><p>由于支付与写流水表间存在相互依赖关系，但支付又是调用第三方的操作，因此在事务处理中，应该排除进行第三方支付接口的调用逻辑。<br>将第三方支付的动作放在事务外，如果失败，改写支付结果数据。</p><p><strong>tips：第三方支付时，有可能会出现支付成功后，curl断开的情况。如果放在事务中，会导致回滚而重复付款的情况。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Plus业务简介&quot;&gt;&lt;a href=&quot;#Plus业务简介&quot; class=&quot;headerlink&quot; title=&quot;Plus业务简介&quot;&gt;&lt;/a&gt;Plus业务简介&lt;/h1&gt;&lt;p&gt;经过一个多月的封闭开发，会员Plus项目终于上线了。回顾整个开发过程，虽然艰辛，但还是收获了
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>关于秒杀那点事</title>
    <link href="http://yoursite.com/2017/03/31/%E5%85%B3%E4%BA%8E%E7%A7%92%E6%9D%80%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    <id>http://yoursite.com/2017/03/31/关于秒杀那点事/</id>
    <published>2017-03-31T09:56:17.000Z</published>
    <updated>2023-04-06T02:14:10.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思想与感受"><a href="#思想与感受" class="headerlink" title="思想与感受"></a>思想与感受</h1><h2 id="关于缓存"><a href="#关于缓存" class="headerlink" title="关于缓存"></a>关于缓存</h2><p>缓存是针对性能优化的一种技术手段，主要是防止服务端压力过大。缓存的添加可以提前考虑，也可以先不添加，观察一段运行中的反应再进行适当添加。<br>对于秒杀，实时性要求比较高，可以暂时不加缓存。大促进行中的高峰期可适当设置1-2分钟的缓存时间。</p><h2 id="售卖进度条"><a href="#售卖进度条" class="headerlink" title="售卖进度条"></a>售卖进度条</h2><p>进度条可以采用固定公式计算，不可使用随机数（以免不同端的数据生成不一致），可以使用id%xx取模生成。如果想动态变化，需要在公式里关联进去时间因子，已售数目因子等。<br>多端数据也可以统一存入redis，由一方控制数据源。</p><h2 id="分页-排序"><a href="#分页-排序" class="headerlink" title="分页+排序"></a>分页+排序</h2><p>需要排序原则上无法进行分页显示。折衷的做法是，与客户端先约定好分页的参数，实际获取的时候按一页数据获取，未来数据量大，修改成真正分页模式获取，客户端不需要升级。</p><h2 id="秒杀实时性"><a href="#秒杀实时性" class="headerlink" title="秒杀实时性"></a>秒杀实时性</h2><p>不依赖客户端时间，以服务端时间为准。<br>时间改变的接口设计，动态返回秒数，以服务端时间为准，并返回给客户端xx秒后强制刷新。</p><h2 id="涉及“钱”的兑换接口"><a href="#涉及“钱”的兑换接口" class="headerlink" title="涉及“钱”的兑换接口"></a>涉及“钱”的兑换接口</h2><p>需要钱或等价虚拟货币兑换的api，如果有类似的兑换接口，则此接口需要进行服务端参数验证，防止非法用户拿到兑换批次后直接调用其它入口兑换。</p><h1 id="代码怎么写"><a href="#代码怎么写" class="headerlink" title="代码怎么写"></a>代码怎么写</h1><h2 id="代码结构设计"><a href="#代码结构设计" class="headerlink" title="代码结构设计"></a>代码结构设计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">├─application</span><br><span class="line">│  ├─config</span><br><span class="line">│  │  └─seckill_config.php                   秒杀配置文件</span><br><span class="line">│  ├─controller</span><br><span class="line">│  │  ├─android</span><br><span class="line">│  │  │  └─seckill.php                       安卓控制器</span><br><span class="line">│  │  └─ios</span><br><span class="line">│  │     └─seckill.php                       IOS控制器</span><br><span class="line">│  ├─library</span><br><span class="line">│  │  └─seckill                              秒杀核心类库</span><br><span class="line">│  │     ├─Business.php                      秒杀业务逻辑处理类</span><br><span class="line">│  │     ├─SalePercent.php                   秒杀进度</span><br><span class="line">│  │     └─SeckillItem.php                   秒杀商品类</span><br><span class="line">│  └─models</span><br><span class="line">│     └─seckill_model.php                    数据访问层model</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;思想与感受&quot;&gt;&lt;a href=&quot;#思想与感受&quot; class=&quot;headerlink&quot; title=&quot;思想与感受&quot;&gt;&lt;/a&gt;思想与感受&lt;/h1&gt;&lt;h2 id=&quot;关于缓存&quot;&gt;&lt;a href=&quot;#关于缓存&quot; class=&quot;headerlink&quot; title=&quot;关于缓存&quot;
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>抓包神器Fiddler之Https请求随心转</title>
    <link href="http://yoursite.com/2017/02/24/%E6%8A%93%E5%8C%85%E7%A5%9E%E5%99%A8Fiddler%E4%B9%8BHttps%E8%AF%B7%E6%B1%82%E9%9A%8F%E5%BF%83%E8%BD%AC/"/>
    <id>http://yoursite.com/2017/02/24/抓包神器Fiddler之Https请求随心转/</id>
    <published>2017-02-24T03:56:32.000Z</published>
    <updated>2023-04-06T02:14:10.514Z</updated>
    
    <content type="html"><![CDATA[<p>随着AppleStore对APP的审核越来越严格，客户端请求服务端API的方式大多数都变更为了https，在更安全的同时又引起了另外一个问题——<strong>本地抓包开发调试的不便</strong>。</p><p>一般来说，我们在开发API的时候，<strong>本地环境基本都是不支持https的</strong>（若要支持https则需要安装证书，比较麻烦），抓包神奇Fiddler由于拥有出色的功能，可以对请求进行拦截和处理，因此我在想能不能有一种办法，把所有的https请求自动转换成http呢，这样不就方便了吗！</p><p>前期曾经尝试过一种方法，那就是Fiddler里的AutoResponder选项卡里的EnableRules功能，主要是根据指定的规则来过滤https请求，然后手工改成http。</p><p>如下图所示：<br><img src="http://images2015.cnblogs.com/blog/541749/201702/541749-20170224112250320-1590853713.png" alt=""></p><p>这种方法可以针对单个请求来实现转化，但是如果<strong>APP的请求很多，每个API都要处理一遍</strong>的话，难免会力不从心，能不能批量统一处理呢？</p><p><strong>答案是可以的！</strong><br>这需要借助++Fiddler的Customize Rules++功能来帮忙！<br><img src="http://images2015.cnblogs.com/blog/541749/201702/541749-20170224112321788-2011819056.png" alt=""></p><p>这个功能是不随Fiddler的安装默认安装的，第一次使用会弹出提示安装的对话框，进行安装即可。</p><p>附插件安装地址：<em><a href="http://fiddler2.com/r/?SYNTAXVIEWINSTALL" target="_blank" rel="noopener">http://fiddler2.com/r/?SYNTAXVIEWINSTALL</a></em></p><p>这个插件的功能是针对抓取的请求，可用自定义脚本的方式来进行处理。</p><p>通过查阅资料，我们需要修改OnBeforeRequest方法，在里面添加“https转http”的逻辑。</p><p>代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Handle HTTPS requests</span><br><span class="line">if (oSession.isHTTPS)</span><br><span class="line">&#123;</span><br><span class="line">    oSession.fullUrl = &quot;http://&quot; + oSession.hostname + oSession.PathAndQuery;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>添加后点击保存按钮，<strong>再次抓包，奇迹出现了！</strong></p><p><img src="http://images2015.cnblogs.com/blog/541749/201702/541749-20170224112353882-151827977.png" alt=""></p><p>所有的https请求都被转换成http请求了！在本地可以愉快的调试API代码了~</p><p>参考资料：<br><a href="https://groups.google.com/forum/#!topic/httpfiddler/TiR0fm8PLew" target="_blank" rel="noopener">https://groups.google.com/forum/#!topic/httpfiddler/TiR0fm8PLew</a><br><a href="http://stackoverflow.com/questions/10040483/https-http-via-fiddler" target="_blank" rel="noopener">http://stackoverflow.com/questions/10040483/https-http-via-fiddler</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;随着AppleStore对APP的审核越来越严格，客户端请求服务端API的方式大多数都变更为了https，在更安全的同时又引起了另外一个问题——&lt;strong&gt;本地抓包开发调试的不便&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;一般来说，我们在开发API的时候，&lt;strong&gt;本地环
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="tools" scheme="http://yoursite.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>会员体系那点事</title>
    <link href="http://yoursite.com/2016/08/26/%E4%BC%9A%E5%91%98%E4%BD%93%E7%B3%BB%E9%82%A3%E7%82%B9%E4%BA%8B/"/>
    <id>http://yoursite.com/2016/08/26/会员体系那点事/</id>
    <published>2016-08-26T09:10:46.000Z</published>
    <updated>2023-04-06T02:14:10.513Z</updated>
    
    <content type="html"><![CDATA[<h1 id="思想与感受"><a href="#思想与感受" class="headerlink" title="思想与感受"></a>思想与感受</h1><h2 id="需求分析该想啥"><a href="#需求分析该想啥" class="headerlink" title="需求分析该想啥"></a>需求分析该想啥</h2><ol><li>版本需求中是否有重大改动，包括数据计算机制，规则等，是否会对旧版有影响。</li><li>是否需要强制升级？不强制升级的话，如何做兼容处理，工作量多大？</li><li>重大改动造成版本不一致的情况，需要产品文字说明（邮件），防止后期出现问题无法追溯。</li><li>需求中需要的数据，前期应该考虑一下计算方式，是否容易获取，是否满足性能要求。如超越xx%的用户。</li><li>分页及排序的可能性考虑（第三方接口中也要考虑分页和排序的支持）</li><li>缓存及非实时数据提前告知。非核心数据允许一段时间的数据不同步，但是需要提前告知产品和测试。调用方不用做缓存清除机制。</li></ol><h2 id="行动起来怎么做"><a href="#行动起来怎么做" class="headerlink" title="行动起来怎么做"></a>行动起来怎么做</h2><h3 id="对接提前"><a href="#对接提前" class="headerlink" title="对接提前"></a>对接提前</h3><p>涉及和第三方对接的地方要提前考虑，必须先行。包括但不限于：需求告知，协议制定，分页及排序要求，demo规范等，不能让排期让不可控制的因素占据。</p><h3 id="适当冗余"><a href="#适当冗余" class="headerlink" title="适当冗余"></a>适当冗余</h3><p>优惠券兑换表为防止查询API获取优惠券信息，可以在存储的时候进行适当的冗余字段存储，方便查询。（需提前约定好优惠券信息创建后不可改变）</p><h3 id="服务化封装原则"><a href="#服务化封装原则" class="headerlink" title="服务化封装原则"></a>服务化封装原则</h3><p>第三方封装的接口，使用者不要直接读表，进行关联查询和排序等，如有需求，需要让接口提供方提供此类查询接口，保证服务化的封装性。</p><h3 id="本地封装API"><a href="#本地封装API" class="headerlink" title="本地封装API"></a>本地封装API</h3><p>第三方API提供到位后，本地应该进行适当的封装和简化。</p><h3 id="向前兼容"><a href="#向前兼容" class="headerlink" title="向前兼容"></a>向前兼容</h3><p>谨慎修改原接口字段的返回值，如用户信息。</p><h1 id="代码怎么写"><a href="#代码怎么写" class="headerlink" title="代码怎么写"></a>代码怎么写</h1><h2 id="代码结构设计"><a href="#代码结构设计" class="headerlink" title="代码结构设计"></a>代码结构设计</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">├─application</span><br><span class="line">│  ├─config</span><br><span class="line">│  │  ├─member_config.php                   会员体系配置文件</span><br><span class="line">│  │  └─mirsrv.php                          服务化API配置文件</span><br><span class="line">│  ├─controller</span><br><span class="line">│  │  ├─android</span><br><span class="line">│  │  │  └─member.php                       安卓控制器</span><br><span class="line">│  │  └─ios</span><br><span class="line">│  │     └─member.php                       IOS控制器</span><br><span class="line">│  ├─library</span><br><span class="line">│  │  ├─member                              会员体系核心类库</span><br><span class="line">│  │  │  ├─service_sdk                      蜜豆，蜜粉API类库</span><br><span class="line">│  │  │  ├─Business.php                     会员体系业务逻辑处理类</span><br><span class="line">│  │  │  ├─ContextBlock.php                 内容模块类</span><br><span class="line">│  │  │  ├─CouponItem.php                   优惠券单品类</span><br><span class="line">│  │  │  ├─DiaryTemplate.php                日记模板类</span><br><span class="line">│  │  │  ├─IContextBlock.php                内容模块接口</span><br><span class="line">│  │  │  ├─IntroductionTemplate.php         简介模板类</span><br><span class="line">│  │  │  ├─LevelToast.php                   等级弹层类</span><br><span class="line">│  │  │  ├─MemberDayTemplate.php            会员日模板类</span><br><span class="line">│  │  │  ├─MibeanCoupon.php                 蜜豆优惠券类</span><br><span class="line">│  │  │  ├─MiBeanService.php                蜜豆服务API封装</span><br><span class="line">│  │  │  ├─MiScoreService.php               蜜粉服务API封装</span><br><span class="line">│  │  │  ├─TargetUrl.php                    目标链接类</span><br><span class="line">│  │  │  ├─TaskTemplate.php                 任务模板类</span><br><span class="line">│  │  │  ├─Template.php                     会员模板基类</span><br><span class="line">│  │  │  └─Toast.php                        会员弹层基类</span><br><span class="line">│  │  └─coupon_service.php                  优惠券API封装</span><br><span class="line">│  └─models</span><br><span class="line">│     └─member_model.php                    数据访问层model</span><br></pre></td></tr></table></figure><h2 id="匿名对象"><a href="#匿名对象" class="headerlink" title="匿名对象"></a>匿名对象</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$diary_template-&gt;setTitle(<span class="string">'蜜芽日记'</span>)</span><br><span class="line">            -&gt;setContextBlock([</span><br><span class="line">                    (<span class="keyword">new</span> ContextBlock())-&gt;setPic($template_config[<span class="string">'mia_diary'</span>])-&gt;setTargetUrl((<span class="keyword">new</span> TargetUrl($template_url_config[<span class="string">'mia_diary'</span>], TargetUrl::TYPE_NORMAL_URL)))-&gt;toArray(),</span><br><span class="line">                ]</span><br><span class="line">            );</span><br></pre></td></tr></table></figure><h2 id="链式调用"><a href="#链式调用" class="headerlink" title="链式调用"></a>链式调用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$member_day_template-&gt;setTitle(<span class="string">'会员日'</span>)-&gt;setSubTitle(<span class="string">'专享大礼、会员特价'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;思想与感受&quot;&gt;&lt;a href=&quot;#思想与感受&quot; class=&quot;headerlink&quot; title=&quot;思想与感受&quot;&gt;&lt;/a&gt;思想与感受&lt;/h1&gt;&lt;h2 id=&quot;需求分析该想啥&quot;&gt;&lt;a href=&quot;#需求分析该想啥&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>PHP对象方法链式调用</title>
    <link href="http://yoursite.com/2016/08/04/PHP%E5%AF%B9%E8%B1%A1%E6%96%B9%E6%B3%95%E9%93%BE%E5%BC%8F%E8%B0%83%E7%94%A8/"/>
    <id>http://yoursite.com/2016/08/04/PHP对象方法链式调用/</id>
    <published>2016-08-04T10:27:19.000Z</published>
    <updated>2023-04-06T02:14:10.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="发现美与丑"><a href="#发现美与丑" class="headerlink" title="发现美与丑"></a>发现美与丑</h1><p>今天白天发生了一个DB SQL写法不正规的情况（查询时int字段值加了引号），引起了索引失效，查询速度异常的慢。由此，回顾了一下CI里SQL拼接所用的方式正是链式调用，那么自己所写的类何不也尝试一下这种优雅的方式呢？</p><h1 id="链式调用的好处"><a href="#链式调用的好处" class="headerlink" title="链式调用的好处"></a>链式调用的好处</h1><ol><li>代码书写更加优雅，大大缩减代码的行数。</li><li>清晰，方便自由组合</li></ol><h1 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码"></a>示例代码</h1><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 场景主题类(支持链式调用)</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Theme</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_id;</span><br><span class="line">    <span class="keyword">private</span> $_title;</span><br><span class="line">    <span class="keyword">private</span> $_subtitle;</span><br><span class="line">    <span class="keyword">private</span> $_icon;</span><br><span class="line">    <span class="keyword">private</span> $_type;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setId</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_id = $id;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setTitle</span><span class="params">($title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_title = $title;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSubtitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_subtitle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setSubtitle</span><span class="params">($subtitle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_subtitle = $subtitle;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getIcon</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_icon;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setIcon</span><span class="params">($icon)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($icon)) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_icon = $icon;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setType</span><span class="params">($type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_type = $type;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="keyword">$this</span>-&gt;_id,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="keyword">$this</span>-&gt;_title,</span><br><span class="line">            <span class="string">'subtitle'</span> =&gt; <span class="keyword">$this</span>-&gt;_subtitle,</span><br><span class="line">            <span class="string">'icon'</span> =&gt; <span class="keyword">$this</span>-&gt;_icon,</span><br><span class="line">            <span class="string">'type'</span> =&gt; <span class="keyword">$this</span>-&gt;_type,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> json_encode(<span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="keyword">$this</span>-&gt;_id,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="keyword">$this</span>-&gt;_title,</span><br><span class="line">            <span class="string">'subtitle'</span> =&gt; <span class="keyword">$this</span>-&gt;_subtitle,</span><br><span class="line">            <span class="string">'icon'</span> =&gt; <span class="keyword">$this</span>-&gt;_icon,</span><br><span class="line">            <span class="string">'type'</span> =&gt; <span class="keyword">$this</span>-&gt;_type,</span><br><span class="line">        ));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$theme = <span class="keyword">new</span> Theme();</span><br><span class="line"><span class="comment">// 链式调用设置多个属性并返回最终结果</span></span><br><span class="line">$result = $theme-&gt;setId(<span class="number">123</span>)-&gt;setIcon(<span class="string">'icon test'</span>)-&gt;setSubtitle(<span class="string">'test_subtitle'</span>)-&gt;setTitle(<span class="string">'test'</span>)-&gt;setType(<span class="string">'api'</span>)-&gt;toArray();</span><br><span class="line">var_dump($result);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 重写了__toString方法 使之可以直接输出对象</span></span><br><span class="line"><span class="keyword">echo</span> $theme;</span><br></pre></td></tr></table></figure><h2 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">E:\DannyCode\study\CallLink\client.php:12:</span><br><span class="line">array (size=5)</span><br><span class="line">  &apos;id&apos; =&gt; int 123</span><br><span class="line">  &apos;title&apos; =&gt; string &apos;test&apos; (length=4)</span><br><span class="line">  &apos;subtitle&apos; =&gt; string &apos;test_subtitle&apos; (length=13)</span><br><span class="line">  &apos;icon&apos; =&gt; string &apos;icon test&apos; (length=9)</span><br><span class="line">  &apos;type&apos; =&gt; string &apos;api&apos; (length=3)</span><br><span class="line">  </span><br><span class="line">&#123;&quot;id&quot;:123,&quot;title&quot;:&quot;test&quot;,&quot;subtitle&quot;:&quot;test_subtitle&quot;,&quot;icon&quot;:&quot;icon test&quot;,&quot;type&quot;:&quot;api&quot;&#125;</span><br></pre></td></tr></table></figure><p>代码怎么都是写，看你想写成哪样。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;发现美与丑&quot;&gt;&lt;a href=&quot;#发现美与丑&quot; class=&quot;headerlink&quot; title=&quot;发现美与丑&quot;&gt;&lt;/a&gt;发现美与丑&lt;/h1&gt;&lt;p&gt;今天白天发生了一个DB SQL写法不正规的情况（查询时int字段值加了引号），引起了索引失效，查询速度异常的慢。由此
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="architecture&amp;design" scheme="http://yoursite.com/tags/architecture-design/"/>
    
  </entry>
  
  <entry>
    <title>设计模式那点事儿——依赖注入的思考</title>
    <link href="http://yoursite.com/2016/08/04/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E9%82%A3%E7%82%B9%E4%BA%8B%E5%84%BF%E2%80%94%E2%80%94%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E7%9A%84%E6%80%9D%E8%80%83/"/>
    <id>http://yoursite.com/2016/08/04/设计模式那点事儿——依赖注入的思考/</id>
    <published>2016-08-04T07:42:47.000Z</published>
    <updated>2023-04-06T02:14:10.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h1><p><strong>容器的思想</strong>：将继承于同一抽象类（实现同一接口）的对象分别置于容器中，使用时，直接拿容器的某个属性进行操作，而不用关心容器中的这个属性在初始化的时候赋予的是哪个对象。</p><p><strong>依赖注入思想</strong>：将这个可变的容器，以构造函数参数的形式注入到不变的对象中，从而在对象里调用容器中的已经约定好的方法，而不必关心这个传入的容器实例到底是哪个对象实例化的结果。</p><h1 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h1><ol><li>多个对象具有共同的特征及操作，使用时因业务逻辑不同而需要进行切换的。</li><li>固定对象内需要引用相同类型的不同对象，而操作他们共同的方法，需要进行依赖注入。</li></ol><h1 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h1><h2 id="实例情景说明"><a href="#实例情景说明" class="headerlink" title="实例情景说明"></a>实例情景说明</h2><p>支付宝和微信支付是两个具体的支付方式，共同继承于抽象的支付类。使用时可以进行任意的切换。<br>用户类中具有用户支付的行为，行为本身可以使用两种支付方式的任意一种，在构造时决定。</p><h2 id="容器类"><a href="#容器类" class="headerlink" title="容器类"></a>容器类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**容器类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DI</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $obj_list_arr = <span class="keyword">array</span>();<span class="comment">// 容器存放数组</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">static</span> $instince = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstince</span><span class="params">()</span> </span>&#123;<span class="comment">// 单例模式</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>::$instince == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">self</span>::$instince = <span class="keyword">new</span> DI();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::$instince;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($name)</span> </span>&#123;<span class="comment">// 魔术方法，用于匿名赋值和调用</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;obj_list_arr[$name];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($name, $value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;obj_list_arr[$name] = $value;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="支付抽象类"><a href="#支付抽象类" class="headerlink" title="支付抽象类"></a>支付抽象类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">PayMethod</span> </span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">pay</span><span class="params">($amount)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="支付具体类A"><a href="#支付具体类A" class="headerlink" title="支付具体类A"></a>支付具体类A</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AliPay</span> <span class="keyword">extends</span> <span class="title">PayMethod</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">pay</span><span class="params">($amount)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> (<span class="string">'alipay paid:'</span> . $amount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="支付具体类B"><a href="#支付具体类B" class="headerlink" title="支付具体类B"></a>支付具体类B</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WechatPay</span> <span class="keyword">extends</span> <span class="title">PayMethod</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">pay</span><span class="params">($amount)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">'wechatpay paid:'</span> . $amount);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用户类"><a href="#用户类" class="headerlink" title="用户类"></a>用户类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_di;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($di)</span> </span>&#123;<span class="comment">// 构造函数接收传入的容器对象</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;_di = $di;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">userPay</span><span class="params">($user_name, $amount)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> $user_name . <span class="string">'-'</span> . <span class="keyword">$this</span>-&gt;_di-&gt;uPay-&gt;pay($amount);<span class="comment">// 根据约定，调用容器对象内的方法，在更换容器内容后也不必修改代码！</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用客户端"><a href="#调用客户端" class="headerlink" title="调用客户端"></a>调用客户端</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 容器</span></span><br><span class="line">$di = DI::getInstince();</span><br><span class="line">$di-&gt;onePay = <span class="keyword">new</span> AliPay();<span class="comment">// 填充容器</span></span><br><span class="line"><span class="keyword">echo</span> $di-&gt;onePay-&gt;pay(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"></span><br><span class="line">$di-&gt;onePay = <span class="keyword">new</span> WechatPay();<span class="comment">// 填充容器 （更换了对象，但是都继承自同一个抽象类）</span></span><br><span class="line"><span class="keyword">echo</span> $di-&gt;onePay-&gt;pay(<span class="number">200</span>);<span class="comment">// 可以调用相同的方法</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;=========================&lt;br&gt;'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 依赖注入实例</span></span><br><span class="line">$di = DI::getInstince();</span><br><span class="line">$di-&gt;uPay = <span class="keyword">new</span> AliPay(); <span class="comment">// 可变的容器内容</span></span><br><span class="line">$user = <span class="keyword">new</span> User($di); <span class="comment">// 将可变的内容传入构造函数中，作为一个对象属性</span></span><br><span class="line">$user-&gt;userPay(<span class="string">'danny'</span>, <span class="number">50</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"></span><br><span class="line">$di-&gt;uPay = <span class="keyword">new</span> WechatPay(); <span class="comment">// 可变的容器内容(更换内容)</span></span><br><span class="line">$user2 = <span class="keyword">new</span> User($di); <span class="comment">// 将可变的内容传入构造函数中，作为一个对象属性</span></span><br><span class="line">$user2-&gt;userPay(<span class="string">'danny'</span>, <span class="number">60</span>);<span class="comment">//调用相同方法，输出不同的值</span></span><br></pre></td></tr></table></figure><h2 id="返回结果"><a href="#返回结果" class="headerlink" title="返回结果"></a>返回结果</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">alipay paid:100</span><br><span class="line">wechatpay paid:200</span><br><span class="line">=========================</span><br><span class="line">danny-alipay paid:50</span><br><span class="line">danny-wechatpay paid:60</span><br></pre></td></tr></table></figure><h1 id="进一步思考"><a href="#进一步思考" class="headerlink" title="进一步思考"></a>进一步思考</h1><p>依赖注入是提前“准备好”要依赖的类，但是这个准备的过程是否需要进行真正的实例化呢？<br>答案是：<em>可由我们自己控制</em>。</p><p>上面的例子是在准备的过程中便进行了实例化，如果需要在真正对象<strong>使用的时候</strong>才进行实例化，就需要用<strong>匿名函数（或回调函数）</strong>来实现了，看代码：</p><p>User类的改进：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_di;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($di)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_di = $di;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">userPay</span><span class="params">($user_name, $amount)</span> </span>&#123;</span><br><span class="line">        $obj=<span class="keyword">$this</span>-&gt;_di-&gt;uPay;</span><br><span class="line">        <span class="keyword">echo</span> $user_name . <span class="string">'-'</span> . $obj()-&gt;pay($amount); <span class="comment">// 实例化并执行对象方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>调用：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$di = DI::getInstince();</span><br><span class="line"></span><br><span class="line">$di-&gt;uPay = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123; <span class="comment">//注入容器的是一个匿名函数（回调函数），只有在真正执行的时候才会实例化！</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> AliPay(); <span class="comment">//返回一个对象</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">var_dump(<span class="string">'begin use object'</span>);</span><br><span class="line">$user = <span class="keyword">new</span> User($di); <span class="comment">// 将可变的内容传入构造函数中，作为一个对象属性</span></span><br><span class="line">$user-&gt;userPay(<span class="string">'danny'</span>, <span class="number">50</span>);</span><br></pre></td></tr></table></figure></p><p>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E:\DannyCode\study\DI\client.php:42:string &apos;begin use object&apos; (length=16)</span><br><span class="line">E:\DannyCode\study\DI\AliPay.php:14:string &apos;call alipay construct&apos; (length=21)</span><br><span class="line">danny-alipay paid:50</span><br></pre></td></tr></table></figure></p><h1 id="一句话总结"><a href="#一句话总结" class="headerlink" title="一句话总结"></a>一句话总结</h1><p><strong>依赖注入</strong>是指将当前类所依赖的其他类以参数形式（构造函数中）“注入”到当前类中的思想。</p><p><strong>控制反转</strong>（IoC）是指提供一个“容器”将所依赖的类放入其中（可直接放入，可以回调方式放入），然后将这个容器注入到类中（或容器提供一个make对象的方法）的思想。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://www.phalapi.net/wikis/%5B2.11%5D-%E6%A0%B8%E5%BF%83%E6%80%9D%E6%83%B3%EF%BC%9ADI%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5-%E8%AE%A9%E8%B5%84%E6%BA%90%E6%9B%B4%E5%8F%AF%E6%8E%A7.html" target="_blank" rel="noopener">核心思想：DI依赖注入-让资源更可控</a></p><p><a href="https://www.insp.top/article/learn-laravel-container" target="_blank" rel="noopener">laravel 学习笔记 —— 神奇的服务容器</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;核心思想&quot;&gt;&lt;a href=&quot;#核心思想&quot; class=&quot;headerlink&quot; title=&quot;核心思想&quot;&gt;&lt;/a&gt;核心思想&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;容器的思想&lt;/strong&gt;：将继承于同一抽象类（实现同一接口）的对象分别置于容器中，使用时，直接拿容器的某
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式那点事儿——桥接模式</title>
    <link href="http://yoursite.com/2016/08/01/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E9%82%A3%E7%82%B9%E4%BA%8B%E5%84%BF%E2%80%94%E2%80%94%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2016/08/01/设计模式那点事儿——桥接模式/</id>
    <published>2016-08-01T04:03:36.000Z</published>
    <updated>2023-04-06T02:14:10.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>桥接模式(Bridge Pattern)：将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Handle and Body)模式或接口(Interface)模式。</p><h1 id="实例解析"><a href="#实例解析" class="headerlink" title="实例解析"></a>实例解析</h1><p><strong>实例：路上行驶的汽车</strong><br>就拿汽车在路上行驶的来说。即有小汽车又有公共汽车，它们都不但能在市区中的公路上行驶，也能在高速公路上行驶。这你会发现，对于交通工具（汽车）有不同的类型，然而它们所行驶的环境（路）也在变化，在软件系统中就要适应两个方面的变化？怎样实现才能应对这种变化呢？</p><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><h2 id="抽象类-路"><a href="#抽象类-路" class="headerlink" title="抽象类 路"></a>抽象类 路</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 路 抽象类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Road</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 路上行驶的汽车</span></span><br><span class="line">    <span class="keyword">protected</span> $car;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 开始走</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Go</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置路上的汽车（组合）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setCar</span><span class="params">(Car $car)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;car = $car;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高速公路类"><a href="#高速公路类" class="headerlink" title="高速公路类"></a>高速公路类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 高速公路类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SpeedRoad</span> <span class="keyword">extends</span> <span class="title">Road</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Go</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 汽车启动</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;car-&gt;Run();</span><br><span class="line">        var_dump(<span class="string">'on SpeedRoad'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="街道类"><a href="#街道类" class="headerlink" title="街道类"></a>街道类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 街道类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">StreetRoad</span> <span class="keyword">extends</span> <span class="title">Road</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Go</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;car-&gt;Run();</span><br><span class="line">        var_dump(<span class="string">'on StreetRoad'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象类-车"><a href="#抽象类-车" class="headerlink" title="抽象类 车"></a>抽象类 车</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 车 抽象类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="小汽车类"><a href="#小汽车类" class="headerlink" title="小汽车类"></a>小汽车类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 小汽车类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AutoCar</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        var_dump(<span class="string">'auto car run'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="公交车类"><a href="#公交车类" class="headerlink" title="公交车类"></a>公交车类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 公交车类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bus</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        var_dump(<span class="string">'Bus run'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用客户端"><a href="#调用客户端" class="headerlink" title="调用客户端"></a>调用客户端</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 客户端</span></span><br><span class="line"><span class="comment"> * 变继承为组合的一种方式</span></span><br><span class="line"><span class="comment"> * Bridge 模式把两个角色之间的继承关系改为了耦合的关系，从而使这两者可以从容自若的各自独立的变化</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/8/1</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/Car.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/Road.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/AutoCar.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/Bus.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/SpeedRoad.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/StreetRoad.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 高速公路上行驶小汽车</span></span><br><span class="line">$road1 = <span class="keyword">new</span> SpeedRoad();</span><br><span class="line"><span class="comment">// 设置路上行驶的车辆（可变化）</span></span><br><span class="line">$road1-&gt;setCar(<span class="keyword">new</span> AutoCar());</span><br><span class="line">$road1-&gt;Go();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'==========='</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 街道上行驶公交车</span></span><br><span class="line">$road2 = <span class="keyword">new</span> StreetRoad();</span><br><span class="line">$road2-&gt;setCar(<span class="keyword">new</span> Bus());</span><br><span class="line">$road2-&gt;Go();</span><br></pre></td></tr></table></figure><h2 id="结果输出"><a href="#结果输出" class="headerlink" title="结果输出"></a>结果输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E:\DannyCode\study\Bridge\AutoCar.php:11:string &apos;auto car run&apos; (length=12)</span><br><span class="line">E:\DannyCode\study\Bridge\SpeedRoad.php:14:string &apos;on SpeedRoad&apos; (length=12)</span><br><span class="line">===========</span><br><span class="line">E:\DannyCode\study\Bridge\Bus.php:11:string &apos;Bus run&apos; (length=7)</span><br><span class="line">E:\DannyCode\study\Bridge\StreetRoad.php:12:string &apos;on StreetRoad&apos; (length=13)</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://design-patterns.readthedocs.io/zh_CN/latest/structural_patterns/bridge.html" target="_blank" rel="noopener">桥接模式</a></p><p><a href="http://www.cnblogs.com/houleixx/archive/2008/02/23/1078877.html" target="_blank" rel="noopener">桥接模式-cnblog</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;p&gt;桥接模式(Bridge Pattern)：将抽象部分与它的实现部分分离，使它们都可以独立地变化。它是一种对象结构型模式，又称为柄体(Hand
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式那点事儿——建造者模式</title>
    <link href="http://yoursite.com/2016/07/29/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E9%82%A3%E7%82%B9%E4%BA%8B%E5%84%BF%E2%80%94%E2%80%94%E5%BB%BA%E9%80%A0%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2016/07/29/设计模式那点事儿——建造者模式/</id>
    <published>2016-07-29T06:26:01.000Z</published>
    <updated>2023-04-06T02:14:10.516Z</updated>
    
    <content type="html"><![CDATA[<p>无意中看到了一个网站：<a href="http://design-patterns.readthedocs.io/zh_CN/latest/index.html" target="_blank" rel="noopener">图说设计模式</a>，里面讲解了一些常用设计模式的定义，模式分析，优缺点，示例代码，适用场景等，写的不错，自己也按照这个思路，对这些设计模式进行了思考和尝试，本次尝试了其中的<code>建造者模式</code></p><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>建造者模式是一步一步创建一个复杂的对象，它允许用户只通过指定复杂对象的类型和内容就可以构建它们，用户不需要知道内部的具体构建细节。建造者模式属于对象创建型模式。根据中文翻译的不同，建造者模式又可以称为生成器模式。</p><h1 id="实例解析"><a href="#实例解析" class="headerlink" title="实例解析"></a>实例解析</h1><p><strong>实例：KFC套餐</strong></p><p>建造者模式可以用于描述KFC如何创建套餐：套餐是一个复杂对象，它一般包含主食（如汉堡、鸡肉卷等）和饮料（如果汁、 可乐等）等组成部分，不同的套餐有不同的组成部分，而KFC的服务员可以根据顾客的要求，一步一步装配这些组成部分，构造一份完整的套餐，然后返回给顾客。</p><h1 id="模式类图"><a href="#模式类图" class="headerlink" title="模式类图"></a>模式类图</h1><p><img src="https://raw.githubusercontent.com/dannywj/dannywj.github.io/raw/raw/source/statics/KFCBuilder.jpg" alt="KFC示例"></p><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><h2 id="指挥者类"><a href="#指挥者类" class="headerlink" title="指挥者类"></a>指挥者类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 指挥者类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KFCWaiter</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 建造过程固定不变</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMealBuilder</span><span class="params">(MealBuilder $builder)</span> </span>&#123;</span><br><span class="line">        $builder-&gt;BuildDrink();<span class="comment">// 过程1</span></span><br><span class="line">        $builder-&gt;BuildFood();<span class="comment">// 过程2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="抽象建造者类"><a href="#抽象建造者类" class="headerlink" title="抽象建造者类"></a>抽象建造者类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 抽象建造者类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">MealBuilder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">BuildDrink</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">BuildFood</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">getMeal</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="具体建造者类A"><a href="#具体建造者类A" class="headerlink" title="具体建造者类A"></a>具体建造者类A</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 具体建造者类A</span></span><br><span class="line"><span class="comment"> * 实现抽象建造者类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubMealBuilderA</span> <span class="keyword">extends</span> <span class="title">MealBuilder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $meal;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;meal = <span class="keyword">new</span> Meal();<span class="comment">//具体建造的产品对象</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">BuildDrink</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;meal-&gt;setDrink(<span class="string">'build drink A'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">BuildFood</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;meal-&gt;setFood(<span class="string">'build food A'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getMeal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;meal-&gt;getDrink() . <span class="string">'+++'</span> . <span class="keyword">$this</span>-&gt;meal-&gt;getFood();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="具体建造者类B"><a href="#具体建造者类B" class="headerlink" title="具体建造者类B"></a>具体建造者类B</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 具体建造者类B</span></span><br><span class="line"><span class="comment"> * 实现抽象建造者类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SubMealBuilderB</span> <span class="keyword">extends</span> <span class="title">MealBuilder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $meal;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;meal = <span class="keyword">new</span> Meal();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">BuildDrink</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;meal-&gt;setDrink(<span class="string">'build drink B'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">BuildFood</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;meal-&gt;setFood(<span class="string">'build food B'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getMeal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;meal-&gt;getDrink() . <span class="string">'+++'</span> . <span class="keyword">$this</span>-&gt;meal-&gt;getFood();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="产品类"><a href="#产品类" class="headerlink" title="产品类"></a>产品类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 产品类</span></span><br><span class="line"><span class="comment"> * 具体建造的对象类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Meal</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $food;</span><br><span class="line">    <span class="keyword">private</span> $drink;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getFood</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;food;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $food</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setFood</span><span class="params">($food)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;food = $food;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDrink</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;drink;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $drink</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDrink</span><span class="params">($drink)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;drink = $drink;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用客户端"><a href="#调用客户端" class="headerlink" title="调用客户端"></a>调用客户端</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 入口</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/KFCWaiter.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/Meal.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/MealBuilder.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/SubMealBuilderA.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span> . <span class="string">'/SubMealBuilderB.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 指挥者</span></span><br><span class="line">$waiter = <span class="keyword">new</span> KFCWaiter();</span><br><span class="line"><span class="comment">// 建造者A</span></span><br><span class="line">$builderA = <span class="keyword">new</span> SubMealBuilderA();</span><br><span class="line">$waiter-&gt;setMealBuilder($builderA);</span><br><span class="line">$foo1 = $builderA-&gt;getMeal();</span><br><span class="line"><span class="comment">// 建造者B</span></span><br><span class="line">$builderB = <span class="keyword">new</span> SubMealBuilderB();</span><br><span class="line">$waiter-&gt;setMealBuilder($builderB);</span><br><span class="line">$foo2 = $builderB-&gt;getMeal();</span><br><span class="line"></span><br><span class="line">var_dump($foo1, $foo2);</span><br></pre></td></tr></table></figure><h2 id="结果输出"><a href="#结果输出" class="headerlink" title="结果输出"></a>结果输出</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E:\DannyCode\study\Builder\client.php:25:string &apos;build drink A+++build food A&apos; (length=28)</span><br><span class="line">E:\DannyCode\study\Builder\client.php:25:string &apos;build drink B+++build food B&apos; (length=28)</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://design-patterns.readthedocs.io/zh_CN/latest/creational_patterns/builder.html" target="_blank" rel="noopener">建造者模式</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;无意中看到了一个网站：&lt;a href=&quot;http://design-patterns.readthedocs.io/zh_CN/latest/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图说设计模式&lt;/a&gt;，里面讲解了一些常用设计模
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="设计模式" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>盛夏开发那点事儿</title>
    <link href="http://yoursite.com/2016/07/25/%E7%9B%9B%E5%A4%8F%E5%BC%80%E5%8F%91%E9%82%A3%E7%82%B9%E4%BA%8B%E5%84%BF/"/>
    <id>http://yoursite.com/2016/07/25/盛夏开发那点事儿/</id>
    <published>2016-07-25T03:28:30.000Z</published>
    <updated>2023-04-06T02:14:10.514Z</updated>
    
    <content type="html"><![CDATA[<h1 id="心静也不凉"><a href="#心静也不凉" class="headerlink" title="心静也不凉"></a>心静也不凉</h1><p>话说今年北京的天气真是罕见的热，闷热+暴雨交织着，让原本浮躁的心更加的躁动，但是总结依旧要坚持，只有这样，才能让点滴的积累拥有质变。</p><p>最近接手了个性化清单的需求，十分复杂，开发完成之际，回顾一下，也有些滋味。</p><h1 id="需求方面"><a href="#需求方面" class="headerlink" title="需求方面"></a>需求方面</h1><h2 id="需求的把控"><a href="#需求的把控" class="headerlink" title="需求的把控"></a>需求的把控</h2><p>说不通的逻辑（复杂逻辑）一定是不合理的。清洗的逻辑一定简单明了，需要进行逻辑的梳理和简化。</p><p>这部分不仅需要产品经理来简化，更需要开发人员进行一定的思考和总结，提供给产品经理一系列的意见和建议。</p><p>A.产品形态上的（如别家的做法是xx的）<br>B.技术层面的（某种功能如果实现会严重影响性能，会无法实现分页等）</p><h2 id="产品分析的时候要考虑是否对性能有影响"><a href="#产品分析的时候要考虑是否对性能有影响" class="headerlink" title="产品分析的时候要考虑是否对性能有影响"></a>产品分析的时候要考虑是否对性能有影响</h2><ol><li>考虑分页加载的事宜（实现和难易度）</li><li>考虑加载性能问题（尤其是首页）</li><li>对于开发资源未给出会影响开发进度的情况，要提出，由项目经理跟进，催促，不要因此影响开发进度。</li></ol><h1 id="开发的构思和设计"><a href="#开发的构思和设计" class="headerlink" title="开发的构思和设计"></a>开发的构思和设计</h1><h2 id="基本设计理念"><a href="#基本设计理念" class="headerlink" title="基本设计理念"></a>基本设计理念</h2><ol><li>大的接口逻辑可以考虑进行拆分，否则逻辑过于复杂，难以维护。</li><li>DB设计 重复的子主题可以考虑使用关联列的形式实现。（增加int型关联字段，主表和明细表用此字段进行关联）</li><li>后台与前台的设计要统一，否则容易出问题（周，月的划分）</li><li>历史记录的清除机制需要考虑，否则随着时间增长会越来越多，一定要有清除的机制和触发点。</li><li>循环操作要警惕！里面有curl等耗时操作一定要禁止，想其他办法提前获取到资源。</li><li>资源信息获取前置，如图片宽高信息。</li><li>老数据是做数据清洗还是逻辑控制？数据清洗有成本，脚本+旧入口关闭。程序中转换控制相对成本较小，且易于操作。</li></ol><h2 id="关于面向对象"><a href="#关于面向对象" class="headerlink" title="关于面向对象"></a>关于面向对象</h2><ul><li>[ ] 尝试使用面向对象方式+设计模式进行功能的设计，尤其是大的功能模块，有利于扩展和维护。自定义类参考：<a href="http://codeigniter.org.cn/user_guide/general/creating_libraries.html" target="_blank" rel="noopener">CI文档——创建类库</a></li><li><p>[ ] 私有成员如包含CI框架，var_dump类成员的时候会打印出来好多CI的属性，可以尝试在内部实例化。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 设置主题详情 read from DB</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setContentInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       $CI = &amp;get_instance();</span><br><span class="line">       $CI-&gt;load-&gt;model(<span class="string">'listing_model'</span>, <span class="string">'mListing'</span>);</span><br><span class="line">       $result = $CI-&gt;mListing-&gt;getThemeContent(<span class="keyword">$this</span>-&gt;_relate_flag);</span><br><span class="line">       $CI-&gt;load-&gt;library(<span class="string">'special/themecontent'</span>);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (is_array($result)) &#123;</span><br><span class="line">           $count = <span class="number">0</span>;</span><br><span class="line">           <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $item) &#123;</span><br><span class="line">               <span class="keyword">if</span> ($count &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               $content = <span class="keyword">new</span> ThemeContent();</span><br><span class="line">               $content-&gt;setId($item[<span class="string">'id'</span>]);</span><br><span class="line">               $content-&gt;setContentTitle($item[<span class="string">'content_title'</span>]);</span><br><span class="line">               $content-&gt;setCoverPic($item[<span class="string">'cover_pic'</span>], $item[<span class="string">'pic_w'</span>], $item[<span class="string">'pic_h'</span>]);</span><br><span class="line">               $content-&gt;setTargetUrl($item[<span class="string">'target_url'</span>]);</span><br><span class="line">               $content-&gt;setSource($item[<span class="string">'source'</span>]);</span><br><span class="line">               <span class="keyword">$this</span>-&gt;_content_info[] = $content;</span><br><span class="line">               $count++;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><p>[ ] 上述情景如果类对象内需要多处使用CI内置对象，可以采用<strong>变通</strong>的方式来进行。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 对象类内部定义私有属性CI，并在构造函数中初始化</span></span><br><span class="line"><span class="keyword">private</span> $_CI;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">$this</span>-&gt;_CI=&amp;get_instance();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一个公共方法，移除CI对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unsetCI</span><span class="params">()</span> </span>&#123;</span><br><span class="line">   <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;_CI);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用方自定义打印函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">var_dump_obj</span><span class="params">($obj)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (method_exists($obj, <span class="string">'unsetCI'</span>)) &#123;</span><br><span class="line">        $obj-&gt;unsetCI();</span><br><span class="line">    &#125;</span><br><span class="line">    var_dump($obj);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="string">'key'</span> =&gt; <span class="string">'test'</span>);</span><br><span class="line"><span class="keyword">$this</span>-&gt;var_dump_obj($a);</span><br><span class="line"><span class="keyword">$this</span>-&gt;var_dump_obj($theme);</span><br></pre></td></tr></table></figure></li><li><p>[ ] 没有完全的面向对象<br>在进行类的划分过程中，由于涉及文件较多，本次没有完全将各个主体进行单独类的定义，还是出现了部分if else的情况（swich case），继承的实现没有更好的理解。<br>本次仅仅是尝试着在CI框架中引入自定义类来进行的。</p></li></ul><h1 id="代码实现说明"><a href="#代码实现说明" class="headerlink" title="代码实现说明"></a>代码实现说明</h1><h2 id="基本说明"><a href="#基本说明" class="headerlink" title="基本说明"></a>基本说明</h2><h3 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h3><p>入口，参数验证，业务逻辑处理，类方法调用，结果汇总，输出</p><h3 id="class"><a href="#class" class="headerlink" title="class"></a>class</h3><p>模型定义，自身方法实现</p><h3 id="model"><a href="#model" class="headerlink" title="model"></a>model</h3><p>DB数据获取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 场景主题类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Theme</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_id;</span><br><span class="line">    <span class="keyword">private</span> $_title;</span><br><span class="line">    <span class="keyword">private</span> $_subtitle;</span><br><span class="line">    <span class="keyword">private</span> $_icon;</span><br><span class="line">    <span class="keyword">private</span> $_type;</span><br><span class="line">    <span class="keyword">private</span> $_relate_flag;</span><br><span class="line">    <span class="keyword">private</span> $_match_age;</span><br><span class="line">    <span class="keyword">private</span> $_age_start;</span><br><span class="line">    <span class="keyword">private</span> $_age_end;</span><br><span class="line">    <span class="keyword">private</span> $_content_info = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> SCENE_TYPE_BIRTHDAY = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> SCENE_TYPE_SPECIAL = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> SCENE_TYPE_NORMAL = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> SCENE_TYPE_BORN = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setId</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_id = $id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $title</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setTitle</span><span class="params">($title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_title = $title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSubtitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_subtitle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $subtitle</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setSubtitle</span><span class="params">($subtitle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_subtitle = $subtitle;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getIcon</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_icon;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $icon</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setIcon</span><span class="params">($icon)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_icon = IMAGE_URL . $icon;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $type</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setType</span><span class="params">($type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_type = $type;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getMatchAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_match_age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $match_age</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setMatchAge</span><span class="params">($match_age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_match_age = $match_age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAgeStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_age_start;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $age_start</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setAgeStart</span><span class="params">($age_start)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_age_start = $age_start;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAgeEnd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_age_end;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $age_end</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setAgeEnd</span><span class="params">($age_end)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_age_end = $age_end;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置主题详情 read from DB</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setContentInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $CI = &amp;get_instance();</span><br><span class="line">        $CI-&gt;load-&gt;model(<span class="string">'listing_model'</span>, <span class="string">'mListing'</span>);</span><br><span class="line">        $result = $CI-&gt;mListing-&gt;getThemeContent(<span class="keyword">$this</span>-&gt;_relate_flag);</span><br><span class="line">        $CI-&gt;load-&gt;library(<span class="string">'special/themecontent'</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (is_array($result)) &#123;</span><br><span class="line">            $count = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $item) &#123;</span><br><span class="line">                <span class="keyword">if</span> ($count &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                $content = <span class="keyword">new</span> ThemeContent();</span><br><span class="line">                $content-&gt;setId($item[<span class="string">'id'</span>]);</span><br><span class="line">                $content-&gt;setContentTitle($item[<span class="string">'content_title'</span>]);</span><br><span class="line">                $content-&gt;setCoverPic($item[<span class="string">'cover_pic'</span>], $item[<span class="string">'pic_w'</span>], $item[<span class="string">'pic_h'</span>]);</span><br><span class="line">                $content-&gt;setTargetUrl($item[<span class="string">'target_url'</span>]);</span><br><span class="line">                $content-&gt;setSource($item[<span class="string">'source'</span>]);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;_content_info[] = $content;</span><br><span class="line">                $count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加主题内容项</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $content_obj</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addContentItem</span><span class="params">($content_obj)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_content_info[] = $content_obj;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getRelateFlag</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_relate_flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $relate_flag</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setRelateFlag</span><span class="params">($relate_flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_relate_flag = $relate_flag;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回格式化数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $content_info_arr = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_content_info) &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_content_info <span class="keyword">as</span> $item) &#123;</span><br><span class="line">                $content_info_arr[] = $item-&gt;toArray();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="keyword">$this</span>-&gt;_id,</span><br><span class="line">            <span class="string">'title'</span> =&gt; <span class="keyword">$this</span>-&gt;_title,</span><br><span class="line">            <span class="string">'subtitle'</span> =&gt; <span class="keyword">$this</span>-&gt;_subtitle,</span><br><span class="line">            <span class="string">'icon'</span> =&gt; <span class="keyword">$this</span>-&gt;_icon,</span><br><span class="line">            <span class="string">'type'</span> =&gt; <span class="keyword">$this</span>-&gt;_type,</span><br><span class="line">            <span class="string">'detail_info'</span> =&gt; $content_info_arr,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 场景主题内容类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ThemeContent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_id;</span><br><span class="line">    <span class="keyword">private</span> $_content_title;</span><br><span class="line">    <span class="keyword">private</span> $_cover_pic;</span><br><span class="line">    <span class="keyword">private</span> $_target_url;</span><br><span class="line">    <span class="keyword">private</span> $_source;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setId</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_id = $id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getContentTitle</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_content_title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $content_title</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setContentTitle</span><span class="params">($content_title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_content_title = $content_title;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCoverPic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_cover_pic;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $cover_pic</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setCoverPic</span><span class="params">($cover_pic, $pic_w, $pic_h)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_cover_pic = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'url'</span> =&gt; IMAGE_URL . $cover_pic,</span><br><span class="line">            <span class="string">'width'</span> =&gt; $pic_w,</span><br><span class="line">            <span class="string">'height'</span> =&gt; $pic_h,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTargetUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_target_url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $target_url</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setTargetUrl</span><span class="params">($target_url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_target_url = $target_url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> mixed $source</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setSource</span><span class="params">($source)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_source = $source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回格式化数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'id'</span> =&gt; <span class="keyword">$this</span>-&gt;_id,</span><br><span class="line">            <span class="string">'content_title'</span> =&gt; <span class="keyword">$this</span>-&gt;_content_title,</span><br><span class="line">            <span class="string">'cover_pic'</span> =&gt; <span class="keyword">$this</span>-&gt;_cover_pic,</span><br><span class="line">            <span class="string">'target_url'</span> =&gt; <span class="keyword">$this</span>-&gt;_target_url,</span><br><span class="line">            <span class="string">'source'</span> =&gt; <span class="keyword">$this</span>-&gt;_source,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 简单场景主题类</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016/7/14</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SimpleTheme</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $_status_info;</span><br><span class="line">    <span class="keyword">private</span> $_pic_info;</span><br><span class="line">    <span class="keyword">private</span> $_target_url;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * SimpleTheme constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getStatusInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_status_info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getPicInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_pic_info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getTargetUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_target_url;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据类型设置简单场景信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $type</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setSimpleThemeByStatus</span><span class="params">($listing_status)</span> </span>&#123;</span><br><span class="line">        $CI = &amp;get_instance();</span><br><span class="line">        $CI-&gt;config-&gt;load(<span class="string">"listing_config"</span>);</span><br><span class="line">        $result = $CI-&gt;config-&gt;item(<span class="string">'simple_theme'</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($result[$listing_status])) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_status_info = $result[$listing_status][<span class="string">'rec_title'</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_pic_info = IMAGE_URL . $result[$listing_status][<span class="string">'rec_pic'</span>];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;_target_url = $result[$listing_status][<span class="string">'target_url'</span>];</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h1><p> <img src="https://raw.githubusercontent.com/dannywj/dannywj.github.io/raw/raw/source/statics/special.jpg" alt="业务流程图"></p><h1 id="好的需求文档"><a href="#好的需求文档" class="headerlink" title="好的需求文档"></a>好的需求文档</h1><ol><li>一定有背景说明，否则需求熟悉和理解阶段很难进入。</li><li>更新后增加修改历史或修改的文字高亮。</li><li>每次开会后将修改的信息及时反映在文档中，开会时需文字记录。</li></ol><h1 id="需要注意的点"><a href="#需要注意的点" class="headerlink" title="需要注意的点"></a>需要注意的点</h1><ol><li>数据获取时间临界值的判断，最好加上=（&lt;=） date判断</li><li>visio流程图工具输出打印尺寸（导出JPG时）</li></ol><h1 id="需要改进"><a href="#需要改进" class="headerlink" title="需要改进"></a>需要改进</h1><h2 id="组内沟通"><a href="#组内沟通" class="headerlink" title="组内沟通"></a>组内沟通</h2><ol><li>公共方法的实现（如涉及同一个模块）</li><li>命名的统一，DB/API/文档的命名要一致，英文名称要斟酌。</li></ol><h2 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h2><ol><li>对于面向对象继承的理解不够深入，不同的主题应该是继承基类并分别实现自己不同的方法才是更理想的设计方式。</li><li>controller和model的比重问题值得商榷，但是理想的方式的均比较轻量级，具体实现放入类中。可以考虑在library中<strong>增加一个业务逻辑类BusinessClass</strong>，controller中只做参数验证和BusinessClass类的调用及结果输出。model中主要做DB的CURD操作。<strong>BusinessClass中包含业务逻辑及对model中方法的调用</strong>。</li><li>自定义类中对属性有多个set()方法，可以考虑使用<strong>链式调用</strong>方式优雅的实现。具体参考《PHP对象方法链式调用》一文。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;心静也不凉&quot;&gt;&lt;a href=&quot;#心静也不凉&quot; class=&quot;headerlink&quot; title=&quot;心静也不凉&quot;&gt;&lt;/a&gt;心静也不凉&lt;/h1&gt;&lt;p&gt;话说今年北京的天气真是罕见的热，闷热+暴雨交织着，让原本浮躁的心更加的躁动，但是总结依旧要坚持，只有这样，才能让点滴
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>python学起来</title>
    <link href="http://yoursite.com/2016/06/02/python%E5%AD%A6%E8%B5%B7%E6%9D%A5/"/>
    <id>http://yoursite.com/2016/06/02/python学起来/</id>
    <published>2016-06-02T06:54:44.000Z</published>
    <updated>2023-04-06T02:14:10.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><p>win上面练习python的语法还是比较好的，但是实际执行脚本，由于很多第三方python库在win上面很难安装，建议在linux上面执行。<br>linux一般自带python，使用时注意对应的版本（2.x/3.x）</p><p>以下是安装的过程：</p><h2 id="ubuntu安装python-mysql库"><a href="#ubuntu安装python-mysql库" class="headerlink" title="ubuntu安装python mysql库"></a>ubuntu安装python mysql库</h2><p><a href="http://news.tuxi.com.cn/to/database/satmam/pdhsmp.html" target="_blank" rel="noopener">http://news.tuxi.com.cn/to/database/satmam/pdhsmp.html</a><br>未找到mysql配置文件解决方案：<br><a href="http://www.111cn.net/sys/Ubuntu/63252.htm" target="_blank" rel="noopener">http://www.111cn.net/sys/Ubuntu/63252.htm</a></p><h1 id="Evernote-SDK接入尝试"><a href="#Evernote-SDK接入尝试" class="headerlink" title="Evernote SDK接入尝试"></a>Evernote SDK接入尝试</h1><p>参考官方API文档：<a href="https://dev.yinxiang.com/doc/" target="_blank" rel="noopener">https://dev.yinxiang.com/doc/</a></p><h2 id="tonken验证失败的问题"><a href="#tonken验证失败的问题" class="headerlink" title="tonken验证失败的问题"></a>tonken验证失败的问题</h2><p><a href="https://github.com/evernote/evernote-sdk-python/issues/39" target="_blank" rel="noopener">https://github.com/evernote/evernote-sdk-python/issues/39</a></p><h2 id="一个第三方的操作类库"><a href="#一个第三方的操作类库" class="headerlink" title="一个第三方的操作类库"></a>一个第三方的操作类库</h2><p>P.S. 示例中的代码片段可以参考类库中进行完善<br><a href="https://github.com/littlecodersh/EasierLife/blob/master/Programs/Evernote/EvernoteController/controller.py" target="_blank" rel="noopener">https://github.com/littlecodersh/EasierLife/blob/master/Programs/Evernote/EvernoteController/controller.py</a></p><h1 id="Evernote接入代码"><a href="#Evernote接入代码" class="headerlink" title="Evernote接入代码"></a>Evernote接入代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/pyhton</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> evernote.api.client <span class="keyword">import</span> EvernoteClient</span><br><span class="line"><span class="keyword">import</span> evernote.edam.type.ttypes <span class="keyword">as</span> Types</span><br><span class="line"><span class="keyword">import</span> evernote.edam.notestore.NoteStore <span class="keyword">as</span> NoteStore</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_user</span><span class="params">(client)</span>:</span></span><br><span class="line">    userStore = client.get_user_store()</span><br><span class="line">    user = userStore.getUser()</span><br><span class="line">    <span class="keyword">return</span> user</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_note_book</span><span class="params">(client,bookname)</span>:</span></span><br><span class="line">    noteStore = client.get_note_store()</span><br><span class="line">    notebook = Types.Notebook()</span><br><span class="line">    notebook.name = bookname</span><br><span class="line">    notebook = noteStore.createNotebook(notebook)</span><br><span class="line">    <span class="keyword">print</span> notebook.guid</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> len(notebook.guid)&gt;<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_new_note</span><span class="params">(client,note_title,note_content,parentNotebook=None)</span>:</span></span><br><span class="line">    noteStore = client.get_note_store()</span><br><span class="line">    note = Types.Note()</span><br><span class="line">    note.title = note_title</span><br><span class="line">    note.content = generate_note_content(note_content)</span><br><span class="line">    <span class="keyword">if</span> parentNotebook <span class="keyword">and</span> hasattr(parentNotebook, <span class="string">'guid'</span>):</span><br><span class="line">        note.notebookGuid = parentNotebook.guid</span><br><span class="line">    note = noteStore.createNote(note)  </span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate_note_content</span><span class="params">(content)</span>:</span></span><br><span class="line">    result = <span class="string">'&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!DOCTYPE en-note SYSTEM "http://xml.evernote.com/pub/enml2.dtd"&gt;'</span></span><br><span class="line">    result += <span class="string">'&lt;en-note&gt;'</span>+content+<span class="string">'&lt;/en-note&gt;'</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">    </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_books</span><span class="params">(client)</span>:</span></span><br><span class="line">    noteStore = client.get_note_store()</span><br><span class="line">    notebooks = noteStore.listNotebooks()</span><br><span class="line">    <span class="keyword">return</span> notebooks</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_book_guid_by_name</span><span class="params">(book_list,book_name)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> book_list:</span><br><span class="line">        <span class="keyword">if</span> n.name==book_name:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">#===========main===========</span></span><br><span class="line">dev_token = <span class="string">"S=s21:xxxxxxx"</span></span><br><span class="line">client = EvernoteClient(token=dev_token,sandbox=<span class="keyword">True</span>)</span><br><span class="line">client.service_host = <span class="string">'app.yinxiang.com'</span></span><br><span class="line">book_name=<span class="string">'pythonTest'</span></span><br><span class="line"><span class="comment">#print get_user(client)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'===========begin evernote task==========='</span></span><br><span class="line"><span class="comment"># create_result=create_note_book(client,book_name)</span></span><br><span class="line"><span class="comment"># if create_result==True:</span></span><br><span class="line"><span class="comment">#     print 'create book success'</span></span><br><span class="line"><span class="comment"># else:</span></span><br><span class="line"><span class="comment">#     print 'create book error'</span></span><br><span class="line">    </span><br><span class="line">all_book= get_all_books(client)</span><br><span class="line"><span class="comment"># for n in all_book:</span></span><br><span class="line"><span class="comment">#     print n.name</span></span><br><span class="line"><span class="comment">#     print n.guid</span></span><br><span class="line"></span><br><span class="line">current_book=get_book_guid_by_name(all_book,book_name)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'current guid:'</span>+current_book.guid</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'begin create new note'</span></span><br><span class="line">create_new_note(client,<span class="string">'test_title_py'</span>,<span class="string">'my name is danny!'</span>,current_book)</span><br><span class="line"><span class="keyword">print</span> <span class="string">'finish create new note'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span> <span class="string">'===========finish task==========='</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h1&gt;&lt;p&gt;win上面练习python的语法还是比较好的，但是实际执行脚本，由于很多第三方python库在win上面很难安装，建议在li
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>RabbitMQ初探</title>
    <link href="http://yoursite.com/2016/05/13/RabbitMQ%E5%88%9D%E6%8E%A2/"/>
    <id>http://yoursite.com/2016/05/13/RabbitMQ初探/</id>
    <published>2016-05-13T08:08:25.000Z</published>
    <updated>2023-04-06T02:14:10.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="队列那点儿事儿"><a href="#队列那点儿事儿" class="headerlink" title="队列那点儿事儿"></a>队列那点儿事儿</h1><p>提高程序的性能很重要的一个思路就是将请求进行<strong>异步化</strong>处理，而在服务端异步处理的方式可以由<strong>消息队列</strong>来完成。</p><p>之前在处理消息推送等场景的时候曾经接触过“队列”的概念，当时是在DB中手工维护一张“业务队列表”，然后依靠定时任务来消耗表中的任务。这只是队列应用的其中一个简单的场景。</p><p>面对大型程序，这种自建队列的机制显然麻烦而缺乏通用性，于是诞生了基于AMQP协议的这种消息队列组件，如：<strong>RabbitMQ</strong></p><h1 id="使用队列的原因"><a href="#使用队列的原因" class="headerlink" title="使用队列的原因"></a>使用队列的原因</h1><p>在DB集中访问的时候，压力会很大，为了缓解这种情况，将insert的操作放入队列中，即时返回客户端操作成功，由消费者处理队列，将insert的操作异步化。</p><p>总结来说，就是：</p><ol><li>异步</li><li>解耦（生产和消费分离，多系统解耦，即便跨语言，amqp协议都可以进行完美通信）</li><li>高并发的缓冲器</li></ol><h1 id="一些需要理解的概念"><a href="#一些需要理解的概念" class="headerlink" title="一些需要理解的概念"></a>一些需要理解的概念</h1><p>当消费者为空的时候，消息是不会消失的</p><p>多个消费者订阅到同一个队列，任务只会被一个拿走</p><p>如果同一个消息，两个系统都想要这份数据，请开两条队列分别订阅，否则会导致数据不完整。</p><p>队列中的消息是“有序”的（先进先出嘛）<br>消息发送是有序的，所以，如果你的业务逻辑需要支持有序操作，那么，请不要开多个进程，这样多进程消费消息会打乱消息的顺序。（在设计上尽量杜绝有序业务）</p><p>消息有确认机制（ack命令），每条消息必须确认后才能读取下一条。所以当程序异常退出后，只要没有确认过，是可以重新处理的。（不建议开启自动确认）</p><p>交换器常用的类型有：direct交换器，fanout交换器，topic交换器<br>其中fanout交换器为广播模式，会把消息给到所有绑定到他上面的队列上</p><p>服务器重启，交换器和队列会丢失</p><p>交换器，队列，消息可以做持久化，但是性能很低（需要写入文件），不建议使用</p><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h2 id="服务端搭建（windows）"><a href="#服务端搭建（windows）" class="headerlink" title="服务端搭建（windows）"></a>服务端搭建（windows）</h2><p><strong>RabbitMQ Server下载</strong><br><a href="http://www.rabbitmq.com/download.html" target="_blank" rel="noopener">http://www.rabbitmq.com/download.html</a><br>安装的时候提示需要安装erlang，否则web页面没有办法访问。</p><p>erlang下载地址：<br><a href="http://www.erlang.org/download.html" target="_blank" rel="noopener">http://www.erlang.org/download.html</a></p><p>使用exe进行安装即可。</p><h2 id="php客户端搭建"><a href="#php客户端搭建" class="headerlink" title="php客户端搭建"></a>php客户端搭建</h2><p>下载php扩展包：<br><a href="http://pecl.php.net/package/amqp/1.4.0/windows" target="_blank" rel="noopener">http://pecl.php.net/package/amqp/1.4.0/windows</a></p><p>将php_amqp.dll放在php的ext目录里，然后修改php.ini文件，在文件的最后面添加两行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[amqp]</span><br><span class="line">extension=php_amqp.dll</span><br></pre></td></tr></table></figure><p>将rabbitmq.1.dll文件放在php的根目录里(也就是ext目录的父级目录)，然后修改apache的httpd.con文件，文件尾部添加一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LoadFile  &quot;D:/xampp/php/rabbitmq.1.dll&quot;</span><br></pre></td></tr></table></figure><p>重启apache，并查看phpinfo信息。只要看到amqp 字样即可。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>php调用示例<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$data=<span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'device_platform'</span>=&gt;$type,</span><br><span class="line">    <span class="string">'activation_params'</span>=&gt;$arr_activation_params,</span><br><span class="line">);</span><br><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'amqp/publisher'</span>, <span class="keyword">array</span>(<span class="string">'connect_key'</span> =&gt; <span class="string">'index_activation'</span>));</span><br><span class="line"><span class="keyword">$this</span>-&gt;config-&gt;load(<span class="string">"amqp"</span>);</span><br><span class="line">$amqpConf = <span class="keyword">$this</span>-&gt;config-&gt;item(<span class="string">"amqp_index_activation"</span>);</span><br><span class="line">$re=<span class="keyword">$this</span>-&gt;publisher-&gt;inint($amqpConf[<span class="string">'exchange'</span>], $amqpConf[<span class="string">'exchange_type'</span>], $amqpConf[<span class="string">'durable'</span>]);</span><br><span class="line">$str_activation_info = json_encode($data);</span><br><span class="line">$result = <span class="keyword">$this</span>-&gt;publisher-&gt;send($str_activation_info, $amqpConf[<span class="string">'routing_key'</span>]);</span><br><span class="line"><span class="keyword">$this</span>-&gt;load-&gt;library(<span class="string">'monolog_client'</span>);</span><br><span class="line"><span class="keyword">if</span> (!$result) &#123;<span class="comment">//写入队列失败</span></span><br><span class="line">    <span class="keyword">$this</span>-&gt;monolog_client-&gt;error(<span class="string">'error: code=501 info=写入队列失败 str_activation_info='</span>.$str_activation_info, <span class="string">'api_error'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>发送后会出现在<strong>exchanges</strong>标签中，消费后会出现在<strong>queues</strong>标签中。</p><h1 id="数据监控"><a href="#数据监控" class="headerlink" title="数据监控"></a>数据监控</h1><p>RabbitMQ 有个很和谐的web管理插件叫 rabbitmq_management<br>启动方式：<br>打开命令行模式cmd：<br>依次输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">D:\RabbitMQ Server\rabbitmq_server-3.6.1\sbin&gt;rabbitmq-plugins.bat enable rabbitmq_management</span><br><span class="line">The following plugins have been enabled:</span><br><span class="line">  mochiweb</span><br><span class="line">  webmachine</span><br><span class="line">  rabbitmq_web_dispatch</span><br><span class="line">  amqp_client</span><br><span class="line">  rabbitmq_management_agent</span><br><span class="line">  rabbitmq_management</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\RabbitMQ Server\rabbitmq_server-3.6.1\sbin&gt;rabbitmq-service.bat stop</span><br><span class="line">D:\erl7.3\erts-7.3\bin\erlsrv: Service RabbitMQ stopped.</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\RabbitMQ Server\rabbitmq_server-3.6.1\sbin&gt;rabbitmq-service.bat install</span><br><span class="line">RabbitMQ service is already present - only updating service parameters</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\RabbitMQ Server\rabbitmq_server-3.6.1\sbin&gt;rabbitmq-service.bat start</span><br><span class="line">D:\erl7.3\erts-7.3\bin\erlsrv: Service RabbitMQ started.</span><br></pre></td></tr></table></figure><p>登录 <a href="http://127.0.0.1:15672" target="_blank" rel="noopener">http://127.0.0.1:15672</a><br>账号密码都是 guest</p><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="http://www.360doc.com/content/14/0911/17/15077656_408714488.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/14/0911/17/15077656_408714488.shtml</a><br><a href="https://www.kakata.com/archives/1187" target="_blank" rel="noopener">https://www.kakata.com/archives/1187</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;队列那点儿事儿&quot;&gt;&lt;a href=&quot;#队列那点儿事儿&quot; class=&quot;headerlink&quot; title=&quot;队列那点儿事儿&quot;&gt;&lt;/a&gt;队列那点儿事儿&lt;/h1&gt;&lt;p&gt;提高程序的性能很重要的一个思路就是将请求进行&lt;strong&gt;异步化&lt;/strong&gt;处理，而在服务端
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="MQ" scheme="http://yoursite.com/tags/MQ/"/>
    
  </entry>
  
  <entry>
    <title>Group By 按日期统计脚本</title>
    <link href="http://yoursite.com/2016/05/06/Group-By-%E6%8C%89%E6%97%A5%E6%9C%9F%E7%BB%9F%E8%AE%A1%E8%84%9A%E6%9C%AC/"/>
    <id>http://yoursite.com/2016/05/06/Group-By-按日期统计脚本/</id>
    <published>2016-05-06T10:54:47.000Z</published>
    <updated>2023-04-06T02:14:10.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Group-By-按日期统计脚本"><a href="#Group-By-按日期统计脚本" class="headerlink" title="Group By 按日期统计脚本"></a>Group By 按日期统计脚本</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>( created, <span class="string">"%Y-%m-%d"</span> ) , <span class="keyword">COUNT</span>( * ) </span><br><span class="line"><span class="keyword">FROM</span> ios_activation_logs</span><br><span class="line"><span class="keyword">where</span> created&gt;<span class="string">'2016-04-26'</span> </span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">DATE_FORMAT</span>( created, <span class="string">"%Y-%m-%d"</span> )</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Group-By-按日期统计脚本&quot;&gt;&lt;a href=&quot;#Group-By-按日期统计脚本&quot; class=&quot;headerlink&quot; title=&quot;Group By 按日期统计脚本&quot;&gt;&lt;/a&gt;Group By 按日期统计脚本&lt;/h1&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>PHP计划任务知多少</title>
    <link href="http://yoursite.com/2016/05/04/PHP%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1%E7%9F%A5%E5%A4%9A%E5%B0%91/"/>
    <id>http://yoursite.com/2016/05/04/PHP计划任务知多少/</id>
    <published>2016-05-04T08:06:21.000Z</published>
    <updated>2023-04-06T02:14:10.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="代码设计"><a href="#代码设计" class="headerlink" title="代码设计"></a>代码设计</h1><h2 id="计划任务方案设计"><a href="#计划任务方案设计" class="headerlink" title="计划任务方案设计"></a>计划任务方案设计</h2><ol><li>需要有中断后重新运行继续处理的能力。</li><li>大数据表数据处理时采用备份表+rename方式快速恢复。</li><li>集成在现有框架中，方便DB的配置和其他公共方法的调用。</li></ol><h2 id="分片处理思维"><a href="#分片处理思维" class="headerlink" title="分片处理思维"></a>分片处理思维</h2><ol><li>根据id划分分组，每次读取一组的数据到array中处理。</li><li>分组的id可写入到文件中，采用永久循环方式对id文件进行更新和读取。</li><li>多台服务器分别执行不同区块内的脚本。要求脚本需要支持输入参数</li><li>日志文件记录分大小分割成多个文件存储</li><li>没有更新及其他操作时也可以使用<code>mysql_unbuffered_query</code>的方式获取数据<code>mysql_use_result</code></li></ol><h2 id="脚本的参数输入"><a href="#脚本的参数输入" class="headerlink" title="脚本的参数输入"></a>脚本的参数输入</h2><p><em>几种方式：</em><br><strong>A.argv变量方式</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">print_r($argv);</span><br><span class="line">D:\&gt;\wamp\bin\php\php5.3.0\php.exe  \tools\index.php bac ddd</span><br><span class="line">Array</span><br><span class="line">(</span><br><span class="line">    [0] =&gt; \tools\index.php</span><br><span class="line">    [1] =&gt; bac</span><br><span class="line">    [2] =&gt; ddd</span><br><span class="line">)</span><br></pre></td></tr></table></figure></p><p><strong>B.自定义参数方式</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 接收输入参数</span><br><span class="line">$args = getopt(&apos;&apos;, array(&apos;min_id:&apos;, &apos;max_id:&apos;));</span><br><span class="line">if (!isset($args[&apos;min_id&apos;], $args[&apos;max_id&apos;])) &#123;</span><br><span class="line">        echo &apos;invalid input params&apos;;</span><br><span class="line">        die;</span><br><span class="line">&#125;</span><br><span class="line">$min_id = intval($args[&apos;min_id&apos;]);</span><br><span class="line">$max_id = intval($args[&apos;max_id&apos;]);</span><br><span class="line"></span><br><span class="line">调用：D:\&gt;\wamp\bin\php\php5.3.0\php.exe  \tools\index.php --min_id &quot;111&quot; --max_id &quot;222&quot;</span><br></pre></td></tr></table></figure></p><p><strong>C.使用CI框架通过脚本调用</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/php/bin/php /data/www/api/bin/sh.php /ios_activation_task/index/0/100</span><br></pre></td></tr></table></figure></p><h1 id="服务器方面"><a href="#服务器方面" class="headerlink" title="服务器方面"></a>服务器方面</h1><ol><li>关注任务运行时内存的消耗</li><li>关注相关php进程是否在执行任务</li><li>设置脚本最大执行时间及最大消耗内存<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set_time_limit(3600 * 24);</span><br><span class="line">ini_set(&apos;memory_limit&apos;,&apos;500M&apos;);</span><br></pre></td></tr></table></figure></li></ol><h1 id="扩展-amp-完善"><a href="#扩展-amp-完善" class="headerlink" title="扩展&amp;完善"></a>扩展&amp;完善</h1><p>执行一段时间后，停止，重新运行。防止长时间执行资源消耗过大，效率变慢。</p><h1 id="示例脚本"><a href="#示例脚本" class="headerlink" title="示例脚本"></a>示例脚本</h1><p>A 单独执行的php脚本<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ActivationTask</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016-04-28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">date_default_timezone_set(<span class="string">'Etc/GMT-8'</span>);</span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=utf-8'</span>);</span><br><span class="line">set_time_limit(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">$push_task = <span class="keyword">new</span> ActivationTask();</span><br><span class="line">$push_task-&gt;run();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ActivationTask</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 全局配置</span></span><br><span class="line">    <span class="keyword">const</span> TABLE_IOS_ACTIVATION_LOG = <span class="string">'activation_logs_copy'</span>;</span><br><span class="line">    <span class="keyword">const</span> FILE_OPERATION_LOG = <span class="string">'activation_task'</span>;</span><br><span class="line">    <span class="keyword">const</span> FILE_LAST_ID = <span class="string">'last_id.txt'</span>;</span><br><span class="line">    <span class="keyword">const</span> LOG_SEPARATE_COUNT = <span class="number">500000</span>;</span><br><span class="line">    <span class="keyword">const</span> EVERY_PROCESS_COUNT = <span class="number">2000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> $mysqli = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">private</span> $counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化，连接DB</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        $db_config = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">'host'</span> =&gt; <span class="string">'localhost'</span>,</span><br><span class="line">            <span class="string">'port'</span> =&gt; <span class="string">'3306'</span>,</span><br><span class="line">            <span class="string">'username'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line">            <span class="string">'passwd'</span> =&gt; <span class="string">'root'</span>,</span><br><span class="line">            <span class="string">'dbname'</span> =&gt; <span class="string">'mia'</span>,</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli = <span class="keyword">new</span> mysqli($db_config[<span class="string">'host'</span>], $db_config[<span class="string">'username'</span>], $db_config[<span class="string">'passwd'</span>], $db_config[<span class="string">'dbname'</span>], $db_config[<span class="string">'port'</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mysqli-&gt;set_charset(<span class="string">"utf8"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//运行主程序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 接收输入参数</span></span><br><span class="line">        $args = getopt(<span class="string">''</span>, <span class="keyword">array</span>(<span class="string">'min_id:'</span>, <span class="string">'max_id:'</span>));</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($args[<span class="string">'min_id'</span>], $args[<span class="string">'max_id'</span>])) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'invalid input params'</span>;</span><br><span class="line">            <span class="keyword">die</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $min_id = intval($args[<span class="string">'min_id'</span>]);</span><br><span class="line">        $max_id = intval($args[<span class="string">'max_id'</span>]);</span><br><span class="line"></span><br><span class="line">        file_put_contents(<span class="keyword">__DIR__</span> . <span class="string">'/'</span> . <span class="keyword">self</span>::FILE_LAST_ID, $min_id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'==============begin ActivationTask: ['</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">']================'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;log(<span class="string">'==============begin ActivationTask: ['</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">']================'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;log(<span class="string">'==begin process=='</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            $last_id = file_get_contents(<span class="keyword">__DIR__</span> . <span class="string">'/'</span> . <span class="keyword">self</span>::FILE_LAST_ID);</span><br><span class="line">            <span class="keyword">if</span> (!$last_id) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">'last_id is null'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $sql = <span class="string">"select * from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where id&gt;&#123;$last_id&#125; and id&lt;&#123;$max_id&#125;</span></span><br><span class="line"><span class="string">                    ORDER BY id asc limit "</span> . <span class="keyword">self</span>::EVERY_PROCESS_COUNT;</span><br><span class="line"></span><br><span class="line">            $result = <span class="keyword">$this</span>-&gt;select($sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>($result)) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">'==end process=='</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">'==============finish ActivationTask================'</span>);</span><br><span class="line">                <span class="keyword">exit</span>(<span class="string">"\r\n"</span>.<span class="string">'task end.'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $key = count($result) - <span class="number">1</span>;</span><br><span class="line">            file_put_contents(<span class="keyword">__DIR__</span> . <span class="string">'/'</span> . <span class="keyword">self</span>::FILE_LAST_ID, $result[$key][<span class="string">'id'</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $row) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;counter++;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">"current data [num:&#123;$this-&gt;counter&#125; id:&#123;$row['id']&#125;,idfa:&#123;$row['idfa']&#125;]"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 当前扫描的数据行 A</span></span><br><span class="line">                $idfa = $row[<span class="string">'idfa'</span>];</span><br><span class="line">                $openudid = $row[<span class="string">'openudid'</span>];</span><br><span class="line">                $device_token = $row[<span class="string">'device_token'</span>];</span><br><span class="line">                <span class="comment">// 查找重复数据</span></span><br><span class="line">                $repeat_data = <span class="keyword">$this</span>-&gt;searchRepeatDataByOpenUDID($openudid);</span><br><span class="line">                <span class="keyword">if</span> (count($repeat_data) == <span class="number">1</span>) &#123;</span><br><span class="line">                    $repeat_data = <span class="keyword">$this</span>-&gt;searchRepeatDataByIDFA($idfa);</span><br><span class="line">                    <span class="keyword">if</span> (count($repeat_data) == <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;log(<span class="string">"not find repeat data"</span>);</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 获取需要保留的数据</span></span><br><span class="line">                $true_data = array_shift($repeat_data);<span class="comment">//B</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">"exists repeat data! saved:"</span>, $true_data);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 删除多余数据</span></span><br><span class="line">                <span class="keyword">foreach</span> ($repeat_data <span class="keyword">as</span> $val) &#123;<span class="comment">//C</span></span><br><span class="line">                    $delete_id = $val[<span class="string">'id'</span>];</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;deleteRepeatData($delete_id);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">"current process finish"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">searchRepeatDataByIDFA</span><span class="params">($idfa)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"SELECT * from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where idfa='&#123;$idfa&#125;' ORDER BY user_id desc,created asc "</span>;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;select($sql);</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">searchRepeatDataByOpenUDID</span><span class="params">($openudid)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"SELECT * from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where openudid='&#123;$openudid&#125;' ORDER BY user_id desc,created asc "</span>;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;select($sql);</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteRepeatData</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"delete from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where id=&#123;$id&#125;"</span>;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;mysqli-&gt;query($sql);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;log(<span class="string">'delete:'</span> . $sql);</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($sql, $key = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;mysqli-&gt;query($sql);</span><br><span class="line">        $lists = [];</span><br><span class="line">        <span class="keyword">while</span> ($row = $result-&gt;fetch_array(MYSQLI_ASSOC)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>($key)) &#123;</span><br><span class="line">                $lists[$row[$key]] = $row;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $lists[] = $row;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        $result-&gt;free();</span><br><span class="line">        <span class="keyword">return</span> $lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写入日志</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span><span class="params">($str, $arr = null)</span> </span>&#123;</span><br><span class="line">        $log_num = floor(<span class="keyword">$this</span>-&gt;counter / <span class="keyword">self</span>::LOG_SEPARATE_COUNT);</span><br><span class="line">        <span class="keyword">if</span> (is_array($arr)) &#123;</span><br><span class="line">            $arr = json_encode($arr);</span><br><span class="line">        &#125;</span><br><span class="line">        $data = <span class="string">"["</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">"]"</span> . $str . <span class="string">' '</span> . $arr . <span class="string">"\r\n"</span>;</span><br><span class="line">        <span class="comment">//echo $str . ' ' . $arr . "\r\n&lt;br/&gt;&lt;br/&gt;";</span></span><br><span class="line">        file_put_contents(<span class="keyword">__DIR__</span> . <span class="string">'/'</span> . <span class="keyword">self</span>::FILE_OPERATION_LOG . <span class="string">'_'</span> . $log_num . <span class="string">'.log'</span>, $data, FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>B 基于CI框架的php脚本<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ActivationTask</span></span><br><span class="line"><span class="comment"> * Created by DannyWang</span></span><br><span class="line"><span class="comment"> * wangjue<span class="doctag">@mia</span>.com</span></span><br><span class="line"><span class="comment"> * 2016-04-28</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span> (!defined(<span class="string">'BASEPATH'</span>)) <span class="keyword">exit</span>(<span class="string">'No direct script access allowed'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ios_activation_task</span> <span class="keyword">extends</span> <span class="title">CI_Controller</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 全局配置</span></span><br><span class="line">    <span class="keyword">const</span> TABLE_IOS_ACTIVATION_LOG = <span class="string">'ios_activation_logs_copy'</span>;</span><br><span class="line">    <span class="keyword">const</span> FILE_OPERATION_LOG = <span class="string">'activation_task'</span>;</span><br><span class="line">    <span class="keyword">const</span> FILE_LAST_ID = <span class="string">'last_id.txt'</span>;</span><br><span class="line">    <span class="keyword">const</span> LOG_SEPARATE_COUNT = <span class="number">500000</span>;</span><br><span class="line">    <span class="keyword">const</span> EVERY_PROCESS_COUNT = <span class="number">1000</span>;</span><br><span class="line">    <span class="keyword">const</span> BASE_PATH = <span class="string">'/tmp/'</span>;</span><br><span class="line">    <span class="keyword">private</span> $counter = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化，连接DB</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        set_time_limit(<span class="number">3600</span> * <span class="number">24</span>);</span><br><span class="line">        ini_set(<span class="string">'memory_limit'</span>,<span class="string">'500M'</span>);</span><br><span class="line">        <span class="keyword">parent</span>::__construct();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="keyword">$this</span>-&gt;load-&gt;database(<span class="string">'log_write'</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//运行主程序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">($min_id, $max_id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        file_put_contents(<span class="keyword">self</span>::BASE_PATH . <span class="keyword">self</span>::FILE_LAST_ID, $min_id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'==============begin ActivationTask: ['</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">']================'</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;log(<span class="string">'==============begin ActivationTask: ['</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">']================'</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;log(<span class="string">'==begin process=='</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            $last_id = file_get_contents(<span class="keyword">self</span>::BASE_PATH . <span class="keyword">self</span>::FILE_LAST_ID);</span><br><span class="line">            <span class="keyword">if</span> (!$last_id) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">'last_id is null'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $sql = <span class="string">"select * from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where id&gt;&#123;$last_id&#125; and id&lt;&#123;$max_id&#125;</span></span><br><span class="line"><span class="string">                    ORDER BY id asc limit "</span> . <span class="keyword">self</span>::EVERY_PROCESS_COUNT;</span><br><span class="line"></span><br><span class="line">            $result = <span class="keyword">$this</span>-&gt;select($sql);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>($result)) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">'==end process=='</span>);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">'==============finish ActivationTask================'</span>);</span><br><span class="line">                <span class="keyword">exit</span>(<span class="string">"\r\n"</span> . <span class="string">'task end.'</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $key = count($result) - <span class="number">1</span>;</span><br><span class="line">            file_put_contents(<span class="keyword">self</span>::BASE_PATH . <span class="keyword">self</span>::FILE_LAST_ID, $result[$key][<span class="string">'id'</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $row) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;counter++;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">"current data [num:&#123;$this-&gt;counter&#125; id:&#123;$row['id']&#125;,idfa:&#123;$row['idfa']&#125;]"</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 当前扫描的数据行 A</span></span><br><span class="line">                $idfa = $row[<span class="string">'idfa'</span>];</span><br><span class="line">                $openudid = $row[<span class="string">'openudid'</span>];</span><br><span class="line">                $device_token = $row[<span class="string">'device_token'</span>];</span><br><span class="line">                <span class="comment">// 查找重复数据</span></span><br><span class="line">                $repeat_data = <span class="keyword">$this</span>-&gt;searchRepeatDataByOpenUDID($openudid);</span><br><span class="line">                <span class="keyword">if</span> (count($repeat_data) == <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="keyword">empty</span>($idfa)) &#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    $repeat_data = <span class="keyword">$this</span>-&gt;searchRepeatDataByIDFA($idfa);</span><br><span class="line">                    <span class="keyword">if</span> (count($repeat_data) == <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;log(<span class="string">"not find repeat data"</span>);</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 获取需要保留的数据</span></span><br><span class="line">                $true_data = array_shift($repeat_data);<span class="comment">//B</span></span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">"exists repeat data! saved:"</span>, $true_data);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 删除多余数据</span></span><br><span class="line">                <span class="keyword">foreach</span> ($repeat_data <span class="keyword">as</span> $val) &#123;<span class="comment">//C</span></span><br><span class="line">                    $delete_id = $val[<span class="string">'id'</span>];</span><br><span class="line">                    <span class="keyword">$this</span>-&gt;deleteRepeatData($delete_id);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;log(<span class="string">"current process finish"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">searchRepeatDataByIDFA</span><span class="params">($idfa)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"SELECT * from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where idfa='&#123;$idfa&#125;' ORDER BY user_id desc,created asc "</span>;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;select($sql);</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">searchRepeatDataByOpenUDID</span><span class="params">($openudid)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"SELECT * from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where openudid='&#123;$openudid&#125;' ORDER BY user_id desc,created asc "</span>;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;select($sql);</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">deleteRepeatData</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">        $sql = <span class="string">"delete from "</span> . <span class="keyword">self</span>::TABLE_IOS_ACTIVATION_LOG . <span class="string">" where id=&#123;$id&#125;"</span>;</span><br><span class="line">        $result = <span class="keyword">$this</span>-&gt;db-&gt;query($sql);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;log(<span class="string">'delete:'</span> . $sql);</span><br><span class="line">        <span class="keyword">return</span> $result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span><span class="params">($sql, $key = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line">        $lists = <span class="keyword">$this</span>-&gt;db-&gt;query($sql)-&gt;result_array();</span><br><span class="line">        <span class="keyword">return</span> $lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//写入日志</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span><span class="params">($str, $arr = null)</span> </span>&#123;</span><br><span class="line">        $log_num = floor(<span class="keyword">$this</span>-&gt;counter / <span class="keyword">self</span>::LOG_SEPARATE_COUNT);</span><br><span class="line">        <span class="keyword">if</span> (is_array($arr)) &#123;</span><br><span class="line">            $arr = json_encode($arr);</span><br><span class="line">        &#125;</span><br><span class="line">        $data = <span class="string">"["</span> . date(<span class="string">'Y-m-d H:i:s'</span>) . <span class="string">"]"</span> . $str . <span class="string">' '</span> . $arr . <span class="string">"\r\n"</span>;</span><br><span class="line">        <span class="comment">//echo $str . ' ' . $arr . "\r\n&lt;br/&gt;&lt;br/&gt;";</span></span><br><span class="line">        file_put_contents(<span class="keyword">self</span>::BASE_PATH . <span class="keyword">self</span>::FILE_OPERATION_LOG . <span class="string">'_'</span> . $log_num . <span class="string">'.log'</span>, $data, FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>P.S. 测试环境修改分支</p><ol><li>vim exportApi.sh </li><li>修改checkout 分支名称</li><li>执行<code>sh exportApi.sh</code></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;代码设计&quot;&gt;&lt;a href=&quot;#代码设计&quot; class=&quot;headerlink&quot; title=&quot;代码设计&quot;&gt;&lt;/a&gt;代码设计&lt;/h1&gt;&lt;h2 id=&quot;计划任务方案设计&quot;&gt;&lt;a href=&quot;#计划任务方案设计&quot; class=&quot;headerlink&quot; title=&quot;计
      
    
    </summary>
    
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>GroupBy去重复数据</title>
    <link href="http://yoursite.com/2016/04/11/GroupBy%E5%8E%BB%E9%87%8D%E5%A4%8D%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2016/04/11/GroupBy去重复数据/</id>
    <published>2016-04-11T10:25:08.000Z</published>
    <updated>2023-04-06T02:14:10.509Z</updated>
    
    <content type="html"><![CDATA[<h1 id="去重的方式"><a href="#去重的方式" class="headerlink" title="去重的方式"></a>去重的方式</h1><p>我们经常会遇到查询的数据有重复的情况，常用的两种方式是<strong>distinct</strong> 和 <strong>group by</strong></p><h1 id="MSSQL的限制"><a href="#MSSQL的限制" class="headerlink" title="MSSQL的限制"></a>MSSQL的限制</h1><p>最初在接触SQLServer的时候，对于Group By的理解是比较严格的，因为MSSQL要求group by分组出现的字段必须在select的子句中，而其他<strong>非group by的字段必须出现在聚合函数里</strong>才行，否则报错。</p><h1 id="MySql的灵活"><a href="#MySql的灵活" class="headerlink" title="MySql的灵活"></a>MySql的灵活</h1><p>而MYSQL对于group by的约束相对就很宽泛了，没有要求其他字段必须出现在聚合函数中，因此，使用group by进行去重就是非常简单的事情了。</p><h1 id="MySql示例"><a href="#MySql示例" class="headerlink" title="MySql示例"></a>MySql示例</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>, <span class="keyword">name</span> <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">name</span></span><br></pre></td></tr></table></figure><p>P.S. MSSql去重<br><a href="http://www.cnblogs.com/dannywang/p/3315063.html" target="_blank" rel="noopener">http://www.cnblogs.com/dannywang/p/3315063.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;去重的方式&quot;&gt;&lt;a href=&quot;#去重的方式&quot; class=&quot;headerlink&quot; title=&quot;去重的方式&quot;&gt;&lt;/a&gt;去重的方式&lt;/h1&gt;&lt;p&gt;我们经常会遇到查询的数据有重复的情况，常用的两种方式是&lt;strong&gt;distinct&lt;/strong&gt; 和 &lt;st
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>精准投放市场对接流程</title>
    <link href="http://yoursite.com/2016/04/08/%E7%B2%BE%E5%87%86%E6%8A%95%E6%94%BE%E5%B8%82%E5%9C%BA%E5%AF%B9%E6%8E%A5%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/04/08/精准投放市场对接流程/</id>
    <published>2016-04-08T07:26:25.000Z</published>
    <updated>2023-04-06T02:14:10.515Z</updated>
    
    <content type="html"><![CDATA[<h1 id="功能及背景概述"><a href="#功能及背景概述" class="headerlink" title="功能及背景概述"></a>功能及背景概述</h1><p>通过第三方广告平台投放的下载链接，引导用户进行APP的下载，激活，注册等过程，通过与第三方接口对接的形式来统计相关转化率。</p><h1 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h1><p>激活——用户首次打开APP的行为<br>注册——用户使用手机号等方式注册完成后的行为</p><h1 id="业务流程图"><a href="#业务流程图" class="headerlink" title="业务流程图"></a>业务流程图</h1><p> <img src="https://raw.githubusercontent.com/dannywj/dannywj.github.io/master/statics/CPA_flow.png" alt="业务流程图"></p><h1 id="业务流程补充说明"><a href="#业务流程补充说明" class="headerlink" title="业务流程补充说明"></a>业务流程补充说明</h1><p>原则上，第三方广告方要求用户激活成功后“实时”将信息上报给第三方，但是考虑到接口性能方面，对于上报的处理目前分为两种情况：</p><p><strong>1.实时上报，不关心上报结果。</strong><br>此种情况是在用户点击广告的时候，广告方以接口的形式将需要上报的完整url回调通知我们，我们在用户激活完成后，实时发起curl请求，并设置反馈成功状态。<br><em>cpas_model.php</em><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($inserId &amp;&amp; $actionInfo[<span class="string">'platform_id'</span>] == <span class="number">7</span> &amp;&amp; $actionInfo[<span class="string">'click_info'</span>] != <span class="string">''</span>) &#123;</span><br><span class="line">      $callbackUrl = urldecode($actionInfo[<span class="string">'click_info'</span>]);</span><br><span class="line">      curl_get($callbackUrl);</span><br><span class="line">      <span class="keyword">$this</span>-&gt;setPuthed(<span class="keyword">array</span>($inserId));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>2.准实时上报</strong><br>由计划任务每40分钟执行一次，将之前本渠道未上报的数据集中上报，并设置反馈状态。<br>如：<code>http://api.miyabaobei.com/cpa/pushWechatMP</code></p><h1 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h1><p>1.熟悉市场需求，建立相关人员讨论组，获取第三方对接文档及第三方广告平台配置账号。<br>2.搭建（获取）外网能访问的测试环境，如<a href="http://api-test.miyabaobei.com。" target="_blank" rel="noopener">http://api-test.miyabaobei.com。</a><br>3.增加新市场渠道配置字段。<br>4.配置第三方回调地址，准备联调。<br>5.根据业务流程，开发接收第三方数据接口，并自测，联调通过。（可以参考之前receiveXXX的方法模式）。<br>6.根据业务流程，开发上报接口，并自测，联调通过。（可以参考之前pushXXX的方法模式）。<br>7.与BI组同学对接，确认统计关键字，并在配置文件中增加配置字段。<br>8.接口上线，修改第三方回调地址，重新联调。<br>9.通知市场同学上线完成，并由市场同学配置相应广告入口。<br>10.观察最近广告入口的点击数据是否正常，手动执行上报脚本，观察返回值及DB中的相应状态是否成功更新。<br>11.与BI组同学确认新添加的渠道是否能正常统计到数据。<br>12.与第三方技术/产品同学确认是否收到上报数据。<br>13.配置上报脚本到计划任务中，继续观察一段时间。</p><h1 id="相关表-控制器及方法说明"><a href="#相关表-控制器及方法说明" class="headerlink" title="相关表,控制器及方法说明"></a>相关表,控制器及方法说明</h1><h2 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h2><p>cpa_platforms 广告商配置表<br>cpa_action_lists 广告点击记录表<br>cpa_platform_activation_lists 广告商激活记录表（is_push_to_cpa=2为上报成功，user_id有值为已注册）<br>ios_activation_logs IOS激活日志表</p><h2 id="控制器及方法"><a href="#控制器及方法" class="headerlink" title="控制器及方法"></a>控制器及方法</h2><p><strong>1.接收</strong><br>接收第三方点击传的数据<br>/api/application/controller/cpa.php  receive方法<br><strong>2.激活</strong><br>根据设备token ,判断是否是第一次激活, 第一次激活通过规则判断是来自哪家广告商的,记录platform_id,然后写入激活表<br>/api/application/controller/ios/4_0/index.php 的activation方法<br><strong>3.上报</strong><br>根据激活信息定期推送至第三方<br>/api/application/controller/cpa.php  push方法<br><strong>4.注册(转化)</strong><br>用户注册时会通过规则判断是哪家广告商的，然后在激活表记录user_id，便于统计转化<br>/api/application/controller/ios/4_0/account.php register方法</p><hr><h1 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h1><p>市场对接目前仅涉及IOS相关API，Android由于有自己的Android Package管理策略，不在开发范围之内。</p><h1 id="上线注意事项"><a href="#上线注意事项" class="headerlink" title="上线注意事项"></a>上线注意事项</h1><p>确认线上环境数据库中的==platform_id==是否和代码中的一致。</p><h1 id="后续流程"><a href="#后续流程" class="headerlink" title="后续流程"></a>后续流程</h1><p>上线完毕后，需要和BI组同学一起确认新添加的渠道在统计后台是否成功显示。</p><h1 id="其他说明"><a href="#其他说明" class="headerlink" title="其他说明"></a>其他说明</h1><p>1.由于原有逻辑在接收muid的时候有可能会拼接mac，在只有唯一的muid的情况下，也需要拼接’|’,便于激活时匹配。</p><p>2.测试环境的渠道号有可能和线上不一致，上线前需要确认并修改代码中的渠道号（cpa_platforms表）。</p><p>3.为便于开发调试，在cpa中增加了记录日志的方法，可以在日志中查看对方回调的相关参数<br>使用方法：<code>$this-&gt;logInfo(&#39;info&#39;),</code><br>日志记录在<code>/opt/logs/api/wechat_all_xxxxx.log</code></p><p>4.线上验证成功后，记得添加计划任务到线上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;功能及背景概述&quot;&gt;&lt;a href=&quot;#功能及背景概述&quot; class=&quot;headerlink&quot; title=&quot;功能及背景概述&quot;&gt;&lt;/a&gt;功能及背景概述&lt;/h1&gt;&lt;p&gt;通过第三方广告平台投放的下载链接，引导用户进行APP的下载，激活，注册等过程，通过与第三方接口对接的
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>API开发最佳实践</title>
    <link href="http://yoursite.com/2016/04/05/API%E5%BC%80%E5%8F%91%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2016/04/05/API开发最佳实践/</id>
    <published>2016-04-05T03:55:04.000Z</published>
    <updated>2023-04-06T02:14:10.508Z</updated>
    
    <content type="html"><![CDATA[<h1 id="业务逻辑部分"><a href="#业务逻辑部分" class="headerlink" title="业务逻辑部分"></a>业务逻辑部分</h1><h2 id="业务分层优化"><a href="#业务分层优化" class="headerlink" title="业务分层优化"></a>业务分层优化</h2><p>明确各个层的任务：<br>Model(DAO):数据持久层的工作，对数据库的操作都封装在这。<br>Service ： 业务逻辑层，负责业务模块的逻辑应用设计，controller中就可以调用service的接口实现业务逻辑处理，提高了通用的业务逻辑的复用性，设计到具体业务实现会调用Model的接口。<br>Controller ：控制层，负责具体业务流程控制，这里调用service层，将数据返回到视图</p><h2 id="业务设计"><a href="#业务设计" class="headerlink" title="业务设计"></a>业务设计</h2><ol><li>排序是很重要的，添加排序字段，获取的时候要强制排序规则。</li><li>array_values方法可以使数组以0-n的索引重新排列数组的值，便于客户端处理（相当于带编号）。<code>$data = array_values($data);</code></li></ol><h1 id="代码细节部分"><a href="#代码细节部分" class="headerlink" title="代码细节部分"></a>代码细节部分</h1><ol><li><p>mc的键值各个业务模块应该区分，且带上必要的渠道参数，方便管理。</p></li><li><p>判断尽量简洁，配置文件可以采用键值对的形式进行配置，判断使用isset方式。</p></li><li><p>本地redis清除缓存方式：flushall：删除所有数据库中的所有key</p></li><li><p>mysql在一次查询大量数据的时候，为避免内存占满，可以采用增加<code>mysql_use_result</code>的方式来逐条处理（其中不能有更新操作） 参考链接：<a href="https://www.percona.com/blog/2006/06/26/handling-of-big-parts-of-data/" target="_blank" rel="noopener">https://www.percona.com/blog/2006/06/26/handling-of-big-parts-of-data/</a></p></li><li><p>配置文件及返回的处理<br>1.配置文件的两种方式：<br>a.按层级进行配置，如：分类-&gt;项目-&gt;地址。<br>b.按key直接查找。key的命名显示出层级。<br>2.返回客户端如果是是否显示+值的形式，可以简化为只加一个字段。有该字段为显示，且使用该值。没有该字段为隐藏。（前提是只有一个值的情况，有多个值的情况无法进行扩展）</p></li></ol><h1 id="流程规范部分"><a href="#流程规范部分" class="headerlink" title="流程规范部分"></a>流程规范部分</h1><p>1.feature分支要基于master分支开出，为的是保证新开发的分分支是基于稳定的。（错误案例是从release分支开出）<br>2.每个分支只做一件事情<br>3.冲突最理想的情况是在发生冲突前用一些手段规避和扼杀掉。如：公共的需要修改的方法，可以考虑再开出一个新分支来处理（抽象），解决公共的功能。也就是说的解耦，让程序模块化，彼此的依赖降低到最低。<br>思想：如何长远的采用非人工的，优雅的方式解决问题。<br>P.S. 来自于一次不符合规范的提交分享会</p><h1 id="应急及性能提升部分"><a href="#应急及性能提升部分" class="headerlink" title="应急及性能提升部分"></a>应急及性能提升部分</h1><ol><li>流量大时可将次要接口（如收藏/购物车商品数量在进入时候的显示）降级处理。接口直接返回空数据或者人造数据，防止查询数据库造成对系统的影响。</li><li>次要逻辑及频繁读写DB的操作可以通过消息队列异步处理，防止高峰时刻挂掉。</li></ol><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><ol><li>流程中如有回调/异步的情况出现，流程的执行顺序就不能保证了！</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;业务逻辑部分&quot;&gt;&lt;a href=&quot;#业务逻辑部分&quot; class=&quot;headerlink&quot; title=&quot;业务逻辑部分&quot;&gt;&lt;/a&gt;业务逻辑部分&lt;/h1&gt;&lt;h2 id=&quot;业务分层优化&quot;&gt;&lt;a href=&quot;#业务分层优化&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
      <category term="architecture&amp;design" scheme="http://yoursite.com/tags/architecture-design/"/>
    
  </entry>
  
</feed>
