<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[DannyWang's blog]]></title>
  <subtitle><![CDATA[我的小窝]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2016-01-27T09:11:48.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[Danny Wang]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[左连接数据结果增多是怎么回事]]></title>
    <link href="http://yoursite.com/2016/01/27/%E5%B7%A6%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%9C%E5%A2%9E%E5%A4%9A%E6%98%AF%E6%80%8E%E4%B9%88%E5%9B%9E%E4%BA%8B/"/>
    <id>http://yoursite.com/2016/01/27/左连接数据结果增多是怎么回事/</id>
    <published>2016-01-27T08:35:47.000Z</published>
    <updated>2016-01-27T09:11:48.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u80CC_u666F_u63CF_u8FF0"><a href="#u80CC_u666F_u63CF_u8FF0" class="headerlink" title="背景描述"></a>背景描述</h1><p>两张数据表，一张是我们自己的业务订单，另一个是第三方服务商的订单流水。两个数据表有一个对应的序列号sn列（关联列）。</p>
<p><strong>需求：</strong> 以第三方服务商的订单流水为基准，查询出对应我们自己订单的厂商类型等信息。</p>
<h1 id="u95EE_u9898SQL"><a href="#u95EE_u9898SQL" class="headerlink" title="问题SQL"></a>问题SQL</h1><p><strong>第一次解决方法：</strong>使用左连接+like 方式查询<br><strong>结果：</strong></p>
<ol>
<li>耗时严重，几千条数据查询了好几分钟。</li>
<li>结果有误，结果比第三方原始表多出了一些数据。（使用左连接）</li>
</ol>
<p>SQL：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span>  *</span><br><span class="line"><span class="keyword">FROM</span> third_party_order b </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> dict_transaction a</span><br><span class="line"><span class="keyword">on</span> a.<span class="keyword">data</span> <span class="keyword">like</span> <span class="keyword">CONCAT</span>( <span class="string">'%'</span> , b.sn , <span class="string">'%'</span>)</span></span><br></pre></td></tr></table></figure></p>
<h1 id="u539F_u7406_u5206_u6790"><a href="#u539F_u7406_u5206_u6790" class="headerlink" title="原理分析"></a>原理分析</h1><p><strong>问题原因：</strong><br>a表中的某些记录在b表中有1对多的关系，就会出现left join后记录数多于原始的情况。</p>
<p><strong>改进建议：</strong><br>使用left join的两个表，最好是1:1 或 1:0的关系，这样可以保证A表的记录全部显示，B表显示符合条件的记录。<br>如果B表符合条件的记录不唯一，因此这种情况<strong>需要保证B表的符合条件的记录是空或唯一</strong>，我们可以使用<code>group by</code>来实现。</p>
<h1 id="u6539_u8FDB_u65B9_u6848"><a href="#u6539_u8FDB_u65B9_u6848" class="headerlink" title="改进方案"></a>改进方案</h1><ol>
<li><p>使用程序将data（JSON）数据进行匹配，将关联列单独拆分出来，更新到新的一列中。（明显增加查询速度）</p>
</li>
<li><p>对left join的右表进行<code>去重</code>后再进行左连接查询，即可保证查询的结果数和原始表相同。</p>
</li>
</ol>
<p>SQL:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span>  *</span><br><span class="line"><span class="keyword">FROM</span> third_party_order b </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> (<span class="keyword">select</span> sn, <span class="keyword">max</span>(apikeyid) <span class="keyword">as</span> apikeyid ,<span class="keyword">max</span>(<span class="keyword">id</span>) <span class="keyword">as</span> dhb_transaction_id <span class="keyword">from</span> dict_transaction <span class="keyword">group</span> <span class="keyword">by</span> sn ) a</span><br><span class="line"><span class="keyword">on</span> a.sn=b.sn</span></span><br></pre></td></tr></table></figure></p>
<h1 id="u601D_u8003"><a href="#u601D_u8003" class="headerlink" title="思考"></a>思考</h1><p>SQL不是万能的，有时候需要用程序结合SQL的方式处理日常小任务。简单！高效！</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u80CC_u666F_u63CF_u8FF0"><a href="#u80CC_u666F_u63CF_u8FF0" class="headerlink" title="背景描述"></a>背景描述</h1><p>两张数据表，一张是我们自己的业务订单，另一个是第]]>
    </summary>
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[HEXO+Github静态博客搭建小试牛刀]]></title>
    <link href="http://yoursite.com/2016/01/13/HEXO-Github%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80/"/>
    <id>http://yoursite.com/2016/01/13/HEXO-Github静态博客搭建小试牛刀/</id>
    <published>2016-01-13T08:44:22.000Z</published>
    <updated>2016-01-27T08:46:06.000Z</updated>
    <content type="html"><![CDATA[<h1 id="u7F18_u8D77"><a href="#u7F18_u8D77" class="headerlink" title="缘起"></a>缘起</h1><p>最近无意间看到了nodejs的火爆已经成为前后端通吃的一个技术了，之前也小研究过一些，今天想从另一个方面使用一下它的“功能”，玩一玩这个神奇的技术。</p>
<p>查了一些资料，github支持了用户发布一些静态资源在上面，用于自己的博客啊或者个人主页之类的。参考了一些前人的作品，发现了基于nodejs的一个框架 <strong>HEXO</strong> 于是开始了一些尝试，准备用此框架来生成一个自己的技术博客。</p>
<h1 id="u51C6_u5907_u5DE5_u4F5C"><a href="#u51C6_u5907_u5DE5_u4F5C" class="headerlink" title="准备工作"></a>准备工作</h1><p>本着简单实用，所有的操作都是在windows平台上来完成的。</p>
<h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h2><p><em>一句话带过</em>：官网下载exe安装包直接安装即可（可能需要配置环境变量）</p>
<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p><em>一句话带过</em>：下载git包安装，有gitbash 即可（不是小乌龟客户端）</p>
<h2 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h2><p>npm是nodejs的第三方包管理器，只需要配置好json文件，就可以下载制定版本的nodejs第三方库，非常方便。下面的HEXO就是通过npm的方式得到的。</p>
<h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p><em>一句话带过</em>：官网：<a href="http://hexo.io/" target="_blank" rel="external">https://hexo.io/</a>有安装和配置简介。</p>
<h2 id="hexo_u63D2_u4EF6"><a href="#hexo_u63D2_u4EF6" class="headerlink" title="hexo插件"></a>hexo插件</h2><p><em>一句话带过</em>：由于hexo需要使用部署，项目生成，服务器模拟等功能，需要安装一些插件来辅助操作。插件安装在了项目目录的：node_modules文件夹下。</p>
<h2 id="u4E3B_u9898"><a href="#u4E3B_u9898" class="headerlink" title="主题"></a>主题</h2><p>选择hexo的一个重要的原因上github上有很多基于此的主题，使自己的网站看起来与众不同又可以自由定制。</p>
<h2 id="github_pages"><a href="#github_pages" class="headerlink" title="github pages"></a>github pages</h2><p>github账号就不用说了，肯定得有。但是在github上托管的项目不是每一个都能成为博客的。必须要建立一个特定名字的项目<br><strong>github用户名.github.io</strong> 这样的格式，在项目配置标签页里有博客设置的界面。<br>其中，官方也提供了一些内置的模板供选择。</p>
<h1 id="u73AF_u5883_u914D_u7F6E_26amp_3B_u8C03_u8BD5"><a href="#u73AF_u5883_u914D_u7F6E_26amp_3B_u8C03_u8BD5" class="headerlink" title="环境配置&amp;调试"></a>环境配置&amp;调试</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g&#10;$ hexo init blog&#10;$ cd blog&#10;$ npm install&#10;$ hexo server</span><br></pre></td></tr></table></figure>
<p>首先就是使用默认的模板+hello world默认博文来演示。遇到的一个坑爹的困难就是hexo初始化及生成完毕以后，在本地无法运行。<br>后来查到的原因是hexo server默认使用4000端口，而自己电脑的4000端口被福昕阅读器的一个进程给占用了。。！而且结束不掉！<br>索性，根据文档，换个端口呗</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -p 5000 #&#25351;&#23450;&#20351;&#29992;5000&#31471;&#21475;&#26469;&#28436;&#31034;</span><br></pre></td></tr></table></figure>
<p><a href="http://localhost:5000" target="_blank" rel="external">http://localhost:5000</a> Success!<br>非常激动，调试成功。</p>
<p>网站基本的配置都在根目录下：_config.yml 文件里<br>yml的文件格式冒号后面得空一个格。。好吧。</p>
<h1 id="u4E3B_u9898_u914D_u7F6E_26amp_3B_u4FEE_u6539"><a href="#u4E3B_u9898_u914D_u7F6E_26amp_3B_u4FEE_u6539" class="headerlink" title="主题配置&amp;修改"></a>主题配置&amp;修改</h1><p>主题的配置只需要将喜欢的主题clone到根目录下面的theme文件夹下，然后修改一下配置文件的theme属性，指定成clone的文件夹名称，重新生成，server一下即可。</p>
<p>关于这个主题，主题内的配置需要在主题文件夹里面的_config.yml文件中修改。如修改头像，分类，个人描述，分享链接等等。</p>
<p>另外，如果主题包里有多个语言，需要在网站的总配置文件里配置语言，即language目录的文件名字 如：zh-CN</p>
<h1 id="HEXO_u5E38_u7528_u547D_u4EE4"><a href="#HEXO_u5E38_u7528_u547D_u4EE4" class="headerlink" title="HEXO常用命令"></a>HEXO常用命令</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &#34;&#26032;&#24314;&#25991;&#31456;&#34; #&#26032;&#24314;&#25991;&#31456;&#10;$ hexo g #&#29983;&#25104;&#10;$ hexo s -p xxxx #&#26412;&#22320;&#37096;&#32626;&#10;$ hexo d #&#21457;&#24067;&#21040;github</span><br></pre></td></tr></table></figure>
<h1 id="github_u90E8_u7F72"><a href="#github_u90E8_u7F72" class="headerlink" title="github部署"></a>github部署</h1><p>部署这块也踩了不少坑，首先是配置，网上的教程可能过时了，还是得以官网的说明为准：<br>有以下几个配置项：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deploy:&#10;  type: git&#10;  repo: &#60;git path&#62;&#10;  #branch: master &#21487;&#36873;&#10;  message: add blog #&#25552;&#20132;&#27880;&#37322;</span><br></pre></td></tr></table></figure></p>
<p>其中的repo的格式弄了半天 应该是：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://&#60;username&#62;:&#60;password&#62;@github.com/&#60;username&#62;/&#60;repository-name&#62;</span><br></pre></td></tr></table></figure>
<p>这样的<br>哎~</p>
<h1 id="u5C0F_u63D2_u66F2_u2014_u2014instagram_u5F71_u96C6_u96C6_u6210"><a href="#u5C0F_u63D2_u66F2_u2014_u2014instagram_u5F71_u96C6_u96C6_u6210" class="headerlink" title="小插曲——instagram影集集成"></a>小插曲——instagram影集集成</h1><p>主题里集成了一个引用instagram的模块，自己也有照片在instagram上，折腾了一下。<br>遇到几个问题：<br>1.漏引了jquery，后来自己加上了。<br>2.需要申请instagram的开发者资格，注册应用，获取clientid<br>3.sandbox应用默认有协议不允许访问资源，需要手工取消。<br>4.由于没有正式申请应用，可能没有永久使用照片接口的权限。因此手工生成了access token，将地址写死在了js文件里。。<br>5.需要翻墙</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OAUTH&#25480;&#26435;&#20449;&#24687;&#65306;&#10;Successfully registered &#39;DannyBlog&#39;&#10;DannyBlog&#10;Client Info&#10;Client ID &#9;4f5494bc5c614f188fa657427ae78b48&#10;Client Secret &#9;f0957e6831f04bb6a7dxxxxxxx&#10;Website URL &#9;http://dannywj.github.io/&#10;Redirect URI &#9;http://dannywj.github.io/&#10;Support Email &#9;dannywjwj@gmail.com&#10;&#10;&#25163;&#21160;&#25442;&#21462;token&#65306;&#10;https://instagram.com/oauth/authorize/?client_id=4f5494bc5c614f188fa657427ae78b48&#38;redirect_uri=http://dannywj.github.io/&#38;response_type=token&#10;&#10;access_token=2003826149.4f5494b.06fd5c9c7844444da321f185d52xxxx&#10;&#10;&#33719;&#21462;&#29031;&#29255;&#25968;&#25454;&#65306;&#10;&#20889;&#27515;&#22312;&#20027;&#39064;&#21253;&#30340;js&#25991;&#20214;&#37324;&#10;https://api.instagram.com/v1/users/2003826149/media/recent/?access_token=2003826149.4f5494b.06fd5c9c7844444da321f185d52xxxx</span><br></pre></td></tr></table></figure>
<h1 id="u8BF4_u70B9_u522B_u7684"><a href="#u8BF4_u70B9_u522B_u7684" class="headerlink" title="说点别的"></a>说点别的</h1><p>经过一系列的折腾，终于成功部署上去了。虽然真正没有写几行代码，但是这个过程还是收获了很多的，熟悉了一些命令，进行了一些测试，在解决问题的时候需要进行一些思考，也许这个问题不仅仅是这个项目遇到的，可能是另外的问题，无疑锻炼了自己解决问题，搜索答案的能力。</p>
<p>而且，这个系统用来写博客，可以方便的跟踪每个版本的变化。</p>
<h1 id="u53C2_u8003_u94FE_u63A5"><a href="#u53C2_u8003_u94FE_u63A5" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="http://ijiaober.github.io/categories/hexo/" target="_blank" rel="external">http://ijiaober.github.io/categories/hexo/</a><br><a href="http://www.zhihu.com/question/24422335" target="_blank" rel="external">http://www.zhihu.com/question/24422335</a><br><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="external">https://github.com/litten/hexo-theme-yilia</a><br><a href="http://stackoverflow.com/questions/20871549/error-when-push-commits-with-github-fatal-could-not-read-username" target="_blank" rel="external">http://stackoverflow.com/questions/20871549/error-when-push-commits-with-github-fatal-could-not-read-username</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="u7F18_u8D77"><a href="#u7F18_u8D77" class="headerlink" title="缘起"></a>缘起</h1><p>最近无意间看到了nodejs的火爆已经成为前后端通吃的一个技术了，之前也小研究过一些，今天想从另一个方面]]>
    </summary>
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[PHP代码规范]]></title>
    <link href="http://yoursite.com/2016/01/13/PHP%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83/"/>
    <id>http://yoursite.com/2016/01/13/PHP代码规范/</id>
    <published>2016-01-13T07:43:49.000Z</published>
    <updated>2016-01-13T07:44:24.000Z</updated>
    <content type="html"><![CDATA[<h1 id="php_u4EE3_u7801_u89C4_u8303"><a href="#php_u4EE3_u7801_u89C4_u8303" class="headerlink" title="php代码规范"></a>php代码规范</h1><p>2014/8/27 </p>
<hr>
<h2 id="u6392_u7248"><a href="#u6392_u7248" class="headerlink" title="排版"></a>排版</h2><ul>
<li><p>缩进使用tab（4个空格）</p>
</li>
<li><p>if，else即使条件只有一行，也要加上花括号。不允许写成一行。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(true)&#123;&#10;&#9;$val=1;&#10;&#125;else&#123;&#10;&#9;$val=2;&#10;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>初始化array如果采用多行结构时，数据项部分需要缩进，且最后一个数据项后面的逗号不可省略。<br><em>说明：这样做在修改代码增加数据项的时候不容易出现语法错误。</em></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$a = array(&#10;&#9;&#39;a&#39; =&#62; &#39;b&#39;,&#10;&#9;&#39;b&#39; =&#62; &#39;c&#39;,&#10;&#9;&#39;c&#39; =&#62; &#39;d&#39;,&#10;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="u547D_u540D"><a href="#u547D_u540D" class="headerlink" title="命名"></a>命名</h2><ul>
<li><p>普通变量以小写加下划线方式命名</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$name=&#39;danny&#39;;&#10;$unique_id=123;</span><br></pre></td></tr></table></figure>
</li>
<li><p>全局变量以g_开头。<br><em>说明:全局变量对代码影响很大，以 g_开头变能在代码中一眼看出是全局变量。</em></p>
</li>
</ul>
<ul>
<li>常量命名使用全部大写字符，单词之间以’_’连接。<br><em>如:PAGE_NUM</em></li>
</ul>
<ul>
<li><p>对于代码中的常量，必须用常量或define表示，不允许直接写在代码中。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(&#39;PAGE_NUM&#39;, 3);</span><br></pre></td></tr></table></figure>
</li>
<li><p>私有函数命名需加上’_’前缀。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private function _myPrivateFunc() &#123;&#10;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>类方法命名采用驼峰式命名, 普通方法采用过程函数风格（小写下划线）命名。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//&#31867;method:&#10;public function getName() &#123;&#10;&#125;&#10;//&#26222;&#36890;function:&#10;function show_me_the_money() &#123;&#10;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>文件(除了类)命名使用小写字母，单词之间以’_’连接。<br><em>如:show_lemma.php</em></p>
</li>
<li><p>配置文件的名称为 配置文件名 + .config.php, 不涉及类的都小写通过”_”连接。<br>如:dianhua_version.config.php</p>
</li>
</ul>
<h2 id="u7F16_u7801"><a href="#u7F16_u7801" class="headerlink" title="编码"></a>编码</h2><ul>
<li><p>对于函数返回值的判断，特别是true/false, 用===/!== 而不是==/!=。</p>
</li>
<li><p>除非特殊情况，否则不允许使用require和include,而使用对应的require_once/include_once。</p>
</li>
<li><p>每个类单独为一个文件, 文件名为 原类名 + .class.php。<br><em>说明: 利于管理，逻辑清楚，方便autoload等。<br>例如:<br>apis/o2o/buycar/Filter.class.php</em></p>
</li>
</ul>
<ul>
<li><p>函数允许使用默认参数,但是默认参数需要放到参数列表最后面。</p>
</li>
<li><p>调用第三方的链接地址，apikey，用户名密码等配置信息不要写死在程序中，要写到配置文件中。</p>
</li>
<li><p>用户的相关输入涉及数据库操作、文件操作等敏感操作时需要对输入做专门的转换。<br><em>例如:<br>数据库操作中数字型的需要做intval转换，字符串类型的需要通过mysql_real_escape_string过滤。</em></p>
</li>
<li><p>将php配置中的 register_globals 设置为 Off。<br><em>register_globals允许php将$_GET，$_POST，$_COOKIE等变量里的内容自动注册为全局变量，如果程序里的某些变量没有经过初<br>始化而直接使用将导致安全问题。</em></p>
</li>
<li><p>所有sql关键词全部大写，比如SELECT,UPDATE,FROM,ORDER,BY等。</p>
</li>
</ul>
<h1 id="u524D_u7AEFJS_u4EE3_u7801_u89C4_u8303"><a href="#u524D_u7AEFJS_u4EE3_u7801_u89C4_u8303" class="headerlink" title="前端JS代码规范"></a>前端JS代码规范</h1><ul>
<li>省略ur地址中的 http: 或 https: 的部分<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;link href=&#34;//s.dianhua.cn/wap/css/webapps.css&#34; type=&#34;text/css&#34; rel=&#34;stylesheet&#34; /&#62;&#10;&#60;script type=&#34;text/javascript&#34; src=&#34;//s.dianhua.cn/wap/js/jquery.js&#34;&#62;&#60;/script&#62;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>html页面使用Html5的文件头声明<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;!DOCTYPE html&#62;</span><br></pre></td></tr></table></figure></p>
<ul>
<li>声明变量必须加上 var 关键字.</li>
<li>常量的命名: NAMES_LIKE_THIS, 即使用大写字符, 并用下划线分隔</li>
<li>变量，方法，函数采用驼峰式命名</li>
</ul>
<ul>
<li>functionNamesLikeThis, variableNamesLikeThis, ClassNamesLikeThis, EnumNamesLikeThis, methodNamesLikeThis*</li>
</ul>
<ul>
<li><p>全局变量使用g前缀</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var gPageFlag=true;</span><br></pre></td></tr></table></figure>
</li>
<li><p>语句结束后总是使用分号</p>
</li>
<li>对于值的判断，特别是true/false, 用===/!== 而不是==/!=。</li>
<li><p>eval()方法不要轻易使用<br><em>获取ajaxJSON对象的时候 使用JSON.parse()方法来代替。</em></p>
</li>
<li><p>在全局作用域上, 使用一个唯一的, 与工程/库相关的名字作为前缀标识.<br>比如, 你的工程是 “Project Buycar”, 那么命名空间前缀可取为 Buycar.*.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var Buycar = &#123;&#125;;&#10;Buycar.buy = function() &#123;&#10;  //...&#10;&#125;;</span><br></pre></td></tr></table></figure>
</li>
<li><p>即使条件只有一行，也要加上花括号</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if (something) &#123;&#10;  // ...&#10;&#125; else &#123;&#10;  // ...&#10;&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="u5176_u4ED6_u76F8_u5173_u89C4_u8303"><a href="#u5176_u4ED6_u76F8_u5173_u89C4_u8303" class="headerlink" title="其他相关规范"></a>其他相关规范</h1><ul>
<li>代码提交到SVN时需要填写注释，说明一下本次修改的内容。<br><em>可以方便他人了解代码修改的历史，已经帮助自己回忆之前所做的修改</em></li>
<li>提交代码应该删除自己调试时打印变量的相关代码。</li>
<li>对于复杂逻辑要有注释标记，说明整段代码或方法实现的功能。</li>
<li>对于页面中多次出现的标记变量，如果逻辑复杂，要在声明时注释说明标记变量各种取值的含义。</li>
<li>页面代码统一采用utf-8方式编码。</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="php_u4EE3_u7801_u89C4_u8303"><a href="#php_u4EE3_u7801_u89C4_u8303" class="headerlink" title="php代码规范"></a>php代码规范</h1><p>2014/8/27 ]]>
    </summary>
    
      <category term="develop" scheme="http://yoursite.com/tags/develop/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[DHB-Yulorepages-PUSH平台设计]]></title>
    <link href="http://yoursite.com/2016/01/13/DHB-Yulorepages-PUSH%E5%B9%B3%E5%8F%B0%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2016/01/13/DHB-Yulorepages-PUSH平台设计/</id>
    <published>2016-01-13T07:43:10.000Z</published>
    <updated>2016-01-13T07:50:18.000Z</updated>
    <content type="html"><![CDATA[<h1 id="PUSH_u6A21_u5757_u8BBE_u8BA1_Ver1-0"><a href="#PUSH_u6A21_u5757_u8BBE_u8BA1_Ver1-0" class="headerlink" title="PUSH模块设计 Ver1.0"></a>PUSH模块设计 Ver1.0</h1><h2 id="u63A8_u9001_u6D41_u7A0B"><a href="#u63A8_u9001_u6D41_u7A0B" class="headerlink" title="推送流程"></a>推送流程</h2><p><strong>推送流程图</strong><br><img src="https://s.dianhua.cn/wap_test/images/doc/push.png" alt="push"></p>
<h2 id="u63A8_u9001_u5E73_u53F0_u603B_u4F53_u8BBE_u8BA1"><a href="#u63A8_u9001_u5E73_u53F0_u603B_u4F53_u8BBE_u8BA1" class="headerlink" title="推送平台总体设计"></a>推送平台总体设计</h2><ol>
<li>将推送平台建立在现有新版黄页接口中（apis.dianhua.cn/yulorepages/?s=push）</li>
<li>推送相关的接口采用参数字母表签名方式鉴权</li>
<li>各个厂商/平台需要使用推送功能均需调用推送平台的接口</li>
<li>推送规则，推送信息配置目前均为手工配置在数据表中</li>
<li>推送相关的表建立在yulorepages数据库中，以push开头</li>
</ol>
<p>推送任务分立即推送和延迟推送和批量推送3种。立即推送针对于订单变化的情况，当订单状态变化需要推送时立刻调用推送接口推送消息。延迟推送针对于批量查询类业务，如违章查询或摇号查询。查询任务本身单独实现（可配置在闲时查询），任务将需要推送的信息和推送时间发送到task表中，由后台任务轮询task表，调推送接口推送消息。批量推送也需要定时任务在指定时间触发。</p>
<h2 id="u9884_u8BA1_u5F00_u53D1_u7684_u5DE5_u4F5C"><a href="#u9884_u8BA1_u5F00_u53D1_u7684_u5DE5_u4F5C" class="headerlink" title="预计开发的工作"></a>预计开发的工作</h2><ol>
<li>个推接口调试/sdk集成(开发账号注册，证书配置，测试机device绑定)</li>
<li>服务器/客户端 推送消息模板确定（标题，内容，响铃，跳转链接，详情页）</li>
<li>推送平台框架搭建/数据库设计，创建</li>
<li>服务端接口开发</li>
<li>客户端/服务端/个推 联调</li>
<li>订单接口等其他需要调用推送消息的模块 增加推送功能</li>
<li>后台推送任务（适用于非订单状态变更的推送情景，如给未使用买彩票的用户推送信息等）</li>
<li>app服务推送开关管理页开发（web/native）</li>
<li>推送触发模块设计</li>
<li>推送内容配置管理（管理系统）</li>
<li>推送队列&amp;后台任务的设计与实现</li>
</ol>
<h2 id="u5F85_u786E_u8BA4_u95EE_u9898"><a href="#u5F85_u786E_u8BA4_u95EE_u9898" class="headerlink" title="待确认问题"></a>待确认问题</h2><ol>
<li>同一用户登录多个设备，如何进行推送？（多个设备都推？）</li>
<li>用户未登录/激活任何服务，如何上传推送的clientid？ （考虑在服务推送状态接口中进行上传）</li>
<li>服务开关状态以用户为准还是以设备为准？</li>
<li>每个服务是否有默认的推送开关配置？在哪管理？</li>
</ol>
<h2 id="u63A8_u9001_u5E73_u53F0_u63A5_u53E3"><a href="#u63A8_u9001_u5E73_u53F0_u63A5_u53E3" class="headerlink" title="推送平台接口"></a>推送平台接口</h2><p>接口位置：<a href="https://apis.dianhua.cn/push/" target="_blank" rel="external">https://apis.dianhua.cn/push/</a><br>测试接口：<a href="https://apis.dianhua.cn/push_test/" target="_blank" rel="external">https://apis.dianhua.cn/push_test/</a><br>接口返回值：JSON <code>{&quot;status&quot;:&quot;0&quot;,&quot;msg&quot;:&quot;success&quot;,&quot;data&quot;:&quot;info&quot;}</code></p>
<h2 id="u9884_u8BA1_u589E_u52A0_u7684_u63A5_u53E3"><a href="#u9884_u8BA1_u589E_u52A0_u7684_u63A5_u53E3" class="headerlink" title="预计增加的接口"></a>预计增加的接口</h2><h3 id="1-_u7528_u6237_u8BBE_u5907_u7ED1_u5B9A_u63A5_u53E3"><a href="#1-_u7528_u6237_u8BBE_u5907_u7ED1_u5B9A_u63A5_u53E3" class="headerlink" title="1.用户设备绑定接口"></a>1.用户设备绑定接口</h3><p><strong>方案1：集成在用户激活接口中</strong></p>
<p>增加参数</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>是否必填</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>device_id</td>
<td>True</td>
<td>string</td>
<td>手机唯一标识（device_token）</td>
</tr>
<tr>
<td>push_client_type</td>
<td>True</td>
<td>string</td>
<td>推送渠道（如getui）</td>
</tr>
<tr>
<td>push_client_id</td>
<td>True</td>
<td>string</td>
<td>推送服务方唯一id</td>
</tr>
<tr>
<td>client_ext_data</td>
<td>False</td>
<td>string</td>
<td>推送服务方附加信息</td>
</tr>
<tr>
<td>app_name</td>
<td>True</td>
<td>string</td>
<td>应用名称，如：电话邦生活黄页</td>
</tr>
<tr>
<td>mobile_system</td>
<td>True</td>
<td>string</td>
<td>手机系统类型（IOS，Android）</td>
</tr>
<tr>
<td>push_status</td>
<td>False</td>
<td>int</td>
<td>接收消息状态（0接收，1不接收。默认0）</td>
</tr>
</tbody>
</table>
<p>生活黄页方便集成。</p>
<p><strong>方案2：新增接口bindUserDevice</strong></p>
<p><strong>bindUserDevice</strong></p>
<p>输入参数</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>是否必填</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>apikey</td>
<td>True</td>
<td>string</td>
<td>厂商标识</td>
</tr>
<tr>
<td>auth_id</td>
<td>True</td>
<td>string</td>
<td>用户标识</td>
</tr>
<tr>
<td>device_id</td>
<td>True</td>
<td>string</td>
<td>手机唯一标识（device_token）</td>
</tr>
<tr>
<td>push_client_type</td>
<td>True</td>
<td>string</td>
<td>推送渠道</td>
</tr>
<tr>
<td>push_client_id</td>
<td>True</td>
<td>string</td>
<td>推送服务方唯一id</td>
</tr>
<tr>
<td>app_name</td>
<td>True</td>
<td>string</td>
<td>应用名称，如：yolorepage 电话邦生活黄页</td>
</tr>
<tr>
<td>mobile_system</td>
<td>True</td>
<td>string</td>
<td>手机系统类型（IOS，Android）</td>
</tr>
</tbody>
</table>
<p>返回参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>status</td>
<td>绑定的状态（0成功，非0失败）</td>
</tr>
</tbody>
</table>
<h3 id="2-_u6D88_u606F_u63A8_u9001_u63A5_u53E3"><a href="#2-_u6D88_u606F_u63A8_u9001_u63A5_u53E3" class="headerlink" title="2.消息推送接口"></a>2.消息推送接口</h3><p><strong>push_message</strong></p>
<p>说明：user_id在注册时可以得知推送渠道（即通过apikey区分）<br>输入参数</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>是否必填</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>user_ids</td>
<td>True</td>
<td>string</td>
<td>用户id列表，多个id以下划线分割（最多支持20个用户）</td>
</tr>
<tr>
<td>content</td>
<td>True</td>
<td>string</td>
<td>需要推送的数据，JSON格式。具体字段需和客户端商定</td>
</tr>
</tbody>
</table>
<p>返回参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>status</td>
<td>推送的状态（0成功，非0失败）</td>
</tr>
</tbody>
</table>
<h3 id="3-_u670D_u52A1_u63A8_u9001_u72B6_u6001_u63A5_u53E3_28_u65E0_u9700_u7528_u6237_u767B_u5F55_u8C03_u7528_29"><a href="#3-_u670D_u52A1_u63A8_u9001_u72B6_u6001_u63A5_u53E3_28_u65E0_u9700_u7528_u6237_u767B_u5F55_u8C03_u7528_29" class="headerlink" title="3.服务推送状态接口(无需用户登录调用)"></a>3.服务推送状态接口(无需用户登录调用)</h3><p><strong>push_svc_config</strong></p>
<p>说明：上传该设备（用户）使用的每个服务的推送开关配置，如用户未登录，则临时绑定到用户id为0的用户上。<br>输入参数</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>是否必填</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>device_id</td>
<td>True</td>
<td>string</td>
<td>手机唯一标识（device_token）</td>
</tr>
<tr>
<td>push_status</td>
<td>True</td>
<td>string</td>
<td>服务推送开关 取值为：on全部服务接收，off为全部不接收，如需每个服务单独控制，则取值为JSON字符串（格式：服务id 开关状态  示例=={“123”:”on”,”456”:”off”}==）</td>
</tr>
</tbody>
</table>
<p>返回参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>status</td>
<td>操作的状态（0成功，非0失败）</td>
</tr>
</tbody>
</table>
<h3 id="4-_u670D_u52A1_u5217_u8868_u63A5_u53E3_28_u767B_u5F55/_u672A_u767B_u5F55_29"><a href="#4-_u670D_u52A1_u5217_u8868_u63A5_u53E3_28_u767B_u5F55/_u672A_u767B_u5F55_29" class="headerlink" title="4.服务列表接口(登录/未登录)"></a>4.服务列表接口(登录/未登录)</h3><p><strong>push_svc_list</strong></p>
<p>说明：</p>
<ol>
<li>服务的列表由之前的接口获取（包括服务id，服务名称）</li>
<li>返回每个用户的推送开关配置，如用户未登录，则返回服务默认推送开关配置。<br>用户注册多个设备如何处理？</li>
</ol>
<p>输入参数</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>是否必填</th>
<th>类型</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>device_id</td>
<td>False</td>
<td>string</td>
<td>手机唯一标识（device_token）</td>
</tr>
<tr>
<td>apikey</td>
<td>True</td>
<td>string</td>
<td>厂商标识</td>
</tr>
<tr>
<td>auth_id</td>
<td>True</td>
<td>string</td>
<td>用户标识</td>
</tr>
</tbody>
</table>
<p>返回参数</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>svc_list</td>
<td>服务列表及默认开关状态，格式：==[{“svc_id”:”123”,”svc_name”:”话费充值”,”push_status”:”on”},{“svc_id”:”456”,”svc_name”:”违章查询”,”push_status”:”off”}]==</td>
</tr>
<tr>
<td>user_svc_config</td>
<td>用户服务开关状态on全部服务接收，off为全部不接收，如需每个服务单独控制，则值为JSON字符串（格式：服务id 开关状态  示例<code>{&quot;123&quot;:&quot;on&quot;,&quot;456&quot;:&quot;off&quot;}</code>）</td>
</tr>
</tbody>
</table>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="PUSH_u6A21_u5757_u8BBE_u8BA1_Ver1-0"><a href="#PUSH_u6A21_u5757_u8BBE_u8BA1_Ver1-0" class="headerlink" title="PUSH模块设计 Ver1.0"></a>P]]>
    </summary>
    
      <category term="DHB" scheme="http://yoursite.com/tags/DHB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CP接入说明]]></title>
    <link href="http://yoursite.com/2016/01/13/CP%E6%8E%A5%E5%85%A5%E8%AF%B4%E6%98%8E/"/>
    <id>http://yoursite.com/2016/01/13/CP接入说明/</id>
    <published>2016-01-13T07:40:36.000Z</published>
    <updated>2016-01-13T07:49:49.000Z</updated>
    <content type="html"><![CDATA[<h1 id="CP_u8D26_u53F7_u6388_u6743_26amp_3B_u8BA2_u5355_u63A8_u9001_u8BF4_u660E_u6587_u6863"><a href="#CP_u8D26_u53F7_u6388_u6743_26amp_3B_u8BA2_u5355_u63A8_u9001_u8BF4_u660E_u6587_u6863" class="headerlink" title="CP账号授权&amp;订单推送说明文档"></a>CP账号授权&amp;订单推送说明文档</h1><h2 id="u6982_u8FF0"><a href="#u6982_u8FF0" class="headerlink" title="概述"></a>概述</h2><ol>
<li>适用场景：黄页中接入的第三方服务（H5）页面方式</li>
<li>需要进行账号打通，即服务方需要获取电话邦的账号唯一标识进行业务逻辑的处理，以及支付，生成订单并推送给电话邦。</li>
</ol>
<h2 id="u6574_u4F53_u5F00_u53D1_u6D41_u7A0B"><a href="#u6574_u4F53_u5F00_u53D1_u6D41_u7A0B" class="headerlink" title="整体开发流程"></a>整体开发流程</h2><ol>
<li>PM进行CP对接前期需求沟通（建立讨论组，明确技术负责人）</li>
<li>对新接入的服务进行名称定义，分配svckey/svcsecret, client_id/clientsecret,应用入口地址，回调地址，logo图标</li>
<li>PM开通app内测试入口</li>
<li>在o2o前台增加服务目录，并根据提供的参数和回调地址，完善服务的入口页，并提供给服务方技术人员进行调试</li>
<li>账号对接时进行技术支持</li>
<li>沟通讨论订单推送的相关字段</li>
<li>根据确定的字段，提供订单推送文档</li>
<li>进行订单推送的技术支持（主要是接口的签名调试，订单内容确认等）</li>
<li>开发新的订单模板页</li>
<li>整个服务的集成测试，调试</li>
</ol>
<h2 id="u5BF9_u63A5_u9700_u8981_u505A_u7684_u5DE5_u4F5C"><a href="#u5BF9_u63A5_u9700_u8981_u505A_u7684_u5DE5_u4F5C" class="headerlink" title="对接需要做的工作"></a>对接需要做的工作</h2><h3 id="u5206_u914D_u76F8_u5173_u8D44_u6E90_u548C_u914D_u7F6E"><a href="#u5206_u914D_u76F8_u5173_u8D44_u6E90_u548C_u914D_u7F6E" class="headerlink" title="分配相关资源和配置"></a>分配相关资源和配置</h3><h4 id="svckey/svcsecret_u5206_u914D"><a href="#svckey/svcsecret_u5206_u914D" class="headerlink" title="svckey/svcsecret分配"></a>svckey/svcsecret分配</h4><p>分配地址：<a href="http://mgmt.dianhua.cn/svckey.php" target="_blank" rel="external">http://mgmt.dianhua.cn/svckey.php</a><br>点击添加key按钮<br>弹出的页面需要填写payment_type：0，有效期：2016-12-31 00:00:00，是否可用：勾选，对应目录：填写之前和PM确认过的英文服务名称<br>P.S. 该英文服务名称将用于此服务的目录创建等所有需要此名称的地方，均需保持一致。</p>
<h4 id="client_id/clientsecret_u5206_u914D"><a href="#client_id/clientsecret_u5206_u914D" class="headerlink" title="client_id/clientsecret分配"></a>client_id/clientsecret分配</h4><p>分配地址：<a href="https://apis.dianhua.cn/authorization/addclient.php" target="_blank" rel="external">https://apis.dianhua.cn/authorization/addclient.php</a><br>需要填写：</p>
<ol>
<li>应用名称：该应用的中文名称，如：买车险</li>
<li>应用图标：为服务方提供的图标，经过小寒处理过会提交到svn，下载下来，重命名为icon_服务名.png 放在图片服务器的如下目录即可：<a href="http://s.dianhua.cn/images/authorization_logo/icon_recharge.png" target="_blank" rel="external">http://s.dianhua.cn/images/authorization_logo/icon_recharge.png</a></li>
<li>回调地址：服务方提供的回调地址</li>
<li>服务密钥：即改服务的svckey值</li>
</ol>
<p>提交后会在数据库中生成一条配置记录，可查看确认（<code>SELECT * from dict_user_oauth_clients ORDER BY client_id desc</code>）</p>
<h3 id="u5F00_u53D1_u670D_u52A1_u76F8_u5173_u6587_u4EF6"><a href="#u5F00_u53D1_u670D_u52A1_u76F8_u5173_u6587_u4EF6" class="headerlink" title="开发服务相关文件"></a>开发服务相关文件</h3><h4 id="u5728o2o_u524D_u53F0_u589E_u52A0_u670D_u52A1_u76EE_u5F55"><a href="#u5728o2o_u524D_u53F0_u589E_u52A0_u670D_u52A1_u76EE_u5F55" class="headerlink" title="在o2o前台增加服务目录"></a>在o2o前台增加服务目录</h4><p>需要在线上o2o目录下建立该服务目录，并建立3个文件（config.php，index.php，order_list.php）<br><strong>内容如下：</strong></p>
<p>config.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$svckey</span>=<span class="string">'SVCkosf00zPQlKEmErYVASYetUKeyyq8'</span>;</span><br><span class="line"><span class="variable">$svcname</span>=<span class="string">'car_insurance'</span>;</span><br><span class="line"><span class="variable">$svcsecret</span>=<span class="string">'0meRj3BzMa7erMi8u2rapjVzsxfKJlFjOKbXoexafWfwHowchndwxzngwsQf36EsqhqVlDwq91erhbuoEPBcoPiAizhBWNvn621db27aa775848239878237c13252fe'</span>;</span><br></pre></td></tr></table></figure></p>
<p>需要更改为对应的服务名称，svckey信息</p>
<p>index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">'Cache-Control: max-age=86400'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span>.<span class="string">"/config.php"</span>);</span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span>.<span class="string">"/../model/yulorepage.php"</span>);</span><br><span class="line"><span class="variable">$yp</span>=<span class="keyword">new</span> yulorepage(<span class="variable">$svckey</span>,<span class="variable">$svcname</span>,<span class="variable">$svcsecret</span>);</span><br><span class="line"><span class="comment">//Begin Track</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="keyword">__DIR__</span>.<span class="string">'/../analytics/track_h5.php'</span>);</span><br><span class="line">track_h5(<span class="variable">$svckey</span>);</span><br><span class="line"><span class="comment">//End Track</span></span><br><span class="line"><span class="variable">$url</span>=<span class="string">'https://mobilesdk.pingan.com.cn/ebusiness/upingan/welcome.html?WT.mc_id=sc03-app-dhb-00001&amp;WT.port_id=01'</span>;</span><br><span class="line">header(<span class="string">"HTTP/1.1 301 Moved Permanently"</span>);</span><br><span class="line">header(<span class="string">"Location: $url"</span>);</span><br></pre></td></tr></table></figure></p>
<p>其中只需要更改$url的值为服务方提供的入口地址。</p>
<p>order_list.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">car_insurance_order_list_display</span><span class="params">(<span class="variable">$order</span>)</span> </span>&#123;</span><br><span class="line">    <span class="variable">$statusArr</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">'1'</span> =&gt; <span class="string">'待处理'</span>,</span><br><span class="line">        <span class="string">'2'</span> =&gt; <span class="string">'待付款'</span>,</span><br><span class="line">        <span class="string">'3'</span> =&gt; <span class="string">'已付款'</span>,</span><br><span class="line">        <span class="string">'4'</span> =&gt; <span class="string">'已取消'</span>,</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$rs</span> = <span class="string">&lt;&lt;&lt;EOF</span><br><span class="line">	&lt;div class="orderHistory_main more"&gt;</span><br><span class="line">		&lt;p class="orderHistory_content"&gt;</span><br><span class="line">			&lt;span class="orderHistory_content_pic"&gt;&lt;img alt="" src="//s.dianhua.cn/wap/images/order_details_v1.1/icon_carinsurance.png"&gt;&lt;/span&gt;</span><br><span class="line">			&lt;span class="orderHistory_content_tit"&gt;<span class="subst">&#123;$order['desc']&#125;</span>&lt;/span&gt;</span><br><span class="line">		&lt;/p&gt;</span><br><span class="line">		&lt;p class="orderHistory_content_result"&gt;</span><br><span class="line">        	&lt;span class="orderHistory_content_main1"&gt;应付金额：<span class="subst">&#123;$order["price"]&#125;</span>元&lt;/span&gt;</span><br><span class="line">            &lt;span class="orderHistory_content_main2"&gt;订单状态：&lt;span class="sub wrapper_col_ff6000"&gt;<span class="subst">&#123;$statusArr[$order['data']['order_status']]&#125;</span>&lt;/span&gt;&lt;/span&gt;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">		&lt;p class="orderHistory_content_main"&gt;</span><br><span class="line">			&lt;span class="orderHistory_content_main1"&gt;订单号：<span class="subst">&#123;$order["snid"]&#125;</span>&lt;/span&gt;</span><br><span class="line">			&lt;span class="orderHistory_content_main2"&gt;<span class="subst">&#123;$order["create_time"]&#125;</span>&lt;/span&gt;</span><br><span class="line">		&lt;/p&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">EOF;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$order</span>[<span class="string">'data'</span>][<span class="string">'order_url'</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$order</span>[<span class="string">'data'</span>][<span class="string">'order_url'</span>])) &#123;</span><br><span class="line">        <span class="variable">$rs</span> .= <span class="string">'&lt;input type="hidden" value="'</span> . urldecode(<span class="variable">$order</span>[<span class="string">'data'</span>][<span class="string">'order_url'</span>]) . <span class="string">'" /&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$rs</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>该文件的function命名规则为： 服务名+_order_list_display($order)<br>$order为框架中传递过来的订单内容变量，使用扩展信息的内容可以类似这样：<code>$order[&#39;data&#39;][&#39;order_url&#39;]</code></p>
<h4 id="u751F_u6210_u8BA2_u5355_u63A8_u9001_u6587_u6863"><a href="#u751F_u6210_u8BA2_u5355_u63A8_u9001_u6587_u6863" class="headerlink" title="生成订单推送文档"></a>生成订单推送文档</h4><p>可参考：<code>电话帮第三方订单接口文档-平安车险.docx</code></p>
<h4 id="u8BA2_u5355_u8054_u8C03"><a href="#u8BA2_u5355_u8054_u8C03" class="headerlink" title="订单联调"></a>订单联调</h4><p>查看数据表（SELECT * from dict_transaction）数据是否正确，订单在手机上是否显示正常。</p>
<h2 id="u7CFB_u7EDF_u5B9E_u73B0_u8BF4_u660E"><a href="#u7CFB_u7EDF_u5B9E_u73B0_u8BF4_u660E" class="headerlink" title="系统实现说明"></a>系统实现说明</h2><h3 id="u8D26_u53F7_u6388_u6743_u6D41_u7A0B_u56FE"><a href="#u8D26_u53F7_u6388_u6743_u6D41_u7A0B_u56FE" class="headerlink" title="账号授权流程图"></a>账号授权流程图</h3><p>参考：<code>电话邦账号接入授权流程.png</code></p>
<h3 id="u6D89_u53CA_u7684_u6570_u636E_u8868"><a href="#u6D89_u53CA_u7684_u6570_u636E_u8868" class="headerlink" title="涉及的数据表"></a>涉及的数据表</h3><p>账号授权：<br>dict_user_oauth_clients 服务方client信息表，存储客户端的id/secret，回调地址，logo等<br>dict_user_oauth_auth_codes 存储OAuth授权时颁发的code信息<br>dict_user_oauth_tokens 存储OAuth授权时颁发的token信息，其中uid字段格式为 apikey+下划线+auth_id</p>
<p>订单：<br>dict_transaction 订单信息表<br>dict_transaction_history 订单历史记录表</p>
<h3 id="u6D89_u53CA_u7684_u9879_u76EE_u4EE3_u7801"><a href="#u6D89_u53CA_u7684_u9879_u76EE_u4EE3_u7801" class="headerlink" title="涉及的项目代码"></a>涉及的项目代码</h3><p>账号授权：<br><code>src_portal_api\apis\authorization\</code> 其中代码一般不需要调整，已支持多家CP</p>
<p>订单推送接口：<br><code>src_portal_api\apis\order\order_create.php</code> 具体疑问可咨询@宇东</p>
<h3 id="u6D89_u53CA_u7684_u6587_u6863_u76EE_u5F55"><a href="#u6D89_u53CA_u7684_u6587_u6863_u76EE_u5F55" class="headerlink" title="涉及的文档目录"></a>涉及的文档目录</h3><p>文档均在svn中，具体目录：<code>doc_yp\3.Backend\API\电话帮超级黄页服务方接入（H5）文档</code></p>
<p>注意，每次生成好svckey/client_id后，都需要及时在svn中增加新文档，可以参考旧文档模板进行添加 并提交。<br>svckey:<code>doc_yp\3.Backend\API\SVCKEYS</code><br>oauth client:<code>doc_yp\3.Backend\API\OAuthClientIDs</code></p>
<h2 id="u5176_u4ED6_u6CE8_u610F_u4E8B_u9879"><a href="#u5176_u4ED6_u6CE8_u610F_u4E8B_u9879" class="headerlink" title="其他注意事项"></a>其他注意事项</h2><ol>
<li>如果某服务商有多个服务器需要分别进行账号打通，则以上分配的信息需要并列分配多套。（如 平安车险）</li>
<li>签名调试时，如需验证参数，可在接口url中添加get参数&amp;debug=true来打印签名的原始串和加密串，方便对比</li>
<li><p>后台需要进行log记录的，可以调用公共log组件，生成log文件跟踪<br> ==调用方式如下==</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">define(&#39;LOG_ROOT_PATH&#39;, __DIR__ . &#39;/&#39;); //&#24341;&#29992;&#21069;&#23450;&#20041;log&#25991;&#20214;&#36335;&#24452;&#65292;&#21487;&#20197;&#35206;&#30422;&#40664;&#35748;&#36335;&#24452;&#10;require_once(&#39;common/log/log.class.php&#39;); &#10;$logger = \YoloreLog\Logger::getInstance(&#39;testLog&#39;); //&#21442;&#25968;&#20026;log&#30340;&#25991;&#20214;&#21517;&#10;$logger-&#62;info(&#39;log info&#39;); //&#36824;&#26377;error&#65292;debug&#26041;&#27861;&#12290;</span><br></pre></td></tr></table></figure>
</li>
<li><p>账号打通时，服务方只能在电话邦app中配置的特殊号码入口进行，无法在网页中进行，原因是其中有一部分逻辑是厂商账号登陆验证，需要JSBridge弹出短信验证界面，PC浏览器上无法实现此功能。所以就无法正常写入cookie（authid）</p>
</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="CP_u8D26_u53F7_u6388_u6743_26amp_3B_u8BA2_u5355_u63A8_u9001_u8BF4_u660E_u6587_u6863"><a href="#CP_u8D26_u53F7_u6388_u6743_26amp_3B_u]]>
    </summary>
    
      <category term="DHB" scheme="http://yoursite.com/tags/DHB/"/>
    
  </entry>
  
</feed>
